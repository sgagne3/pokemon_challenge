{"version":3,"sources":["SearchAlerts.min__45edc409d97327d59af1.js","./src/rest/Subscription.ts","./src/ui/SearchAlerts/SearchAlerts.ts","./src/ui/FormWidgets/Dropdown.ts","./src/ui/SearchAlerts/SearchAlertsMessage.ts"],"names":["webpackJsonpCoveo__temporary","226","module","exports","__webpack_require__","Object","defineProperty","value","SUBSCRIPTION_TYPE","followQuery","followDocument","277","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","verb","n","v","op","f","TypeError","_","y","t","call","label","ops","pop","trys","length","push","g","sent","throw","return","Symbol","iterator","element","options","bindings","ModalBox","SearchAlerts","ID","ComponentOptions","initComponentOptions","enableMessage","message","SearchAlertsMessage","closeDelay","messageCloseDelay","getBindings","queryController","getEndpoint","isGuestUser","logger","warn","bind","onRootElement","SettingsEvents","settingsPopulateMenu","args","enableManagePanel","menuData","text","l","className","onOpen","openPanel","onClose","close","svgIcon","SVGIcons","icons","dropdownFollowQuery","svgIconClassName","once","QueryEvents","querySuccess","listSubscriptions","enableFollowQuery","tooltip","catch","status","_this","queryBuilder","createQueryBuilder","request","buildFollowQueryRequest","build","usageAnalytics","logCustomEvent","analyticsActionCauseList","searchAlertsFollowQuery","subscription","name","follow","eventArgs","dom","findQueryBoxDom","$$","root","trigger","SearchAlertsEvents","searchAlertsCreated","triggerSearchAlertsFail","title","titleInfo","container","table","tableHead","rowHead","headerType","headerContent","headerFrequency","headerActions","tableBodySpacer","tableBodySubscriptions","sizeModForModalBox","subscriptions","e_1","_a","append","el","cellspacing","colsspan","colspan","each","addSearchAlert","error","empty","getFailureMessage","modal","open","outerHTML","sizeMod","searchInterface","modalContainer","handleSearchAlertsFail","modalBody","wrapper","find","context","frequencies","textExtracted","innerHTML","type","typeConfig","escape","query","q","id","row","pluckFrequenciesValues","pluck","valueToLabel","valueMappedToLabel","findWhere","contentTypeElement","contextElement","setHtml","frequencyElement","Dropdown","dropdownInstance","searchAlertsUpdateSubscription","frequency","getValue","updateAndSyncSearchAlert","contentActionsElement","noSearchAlerts","insertBefore","on","addClass","deleteSubscription","logAnalyticsEvent","searchAlertsUnfollowDocument","searchAlertsUnfollowQuery","searchAlertsDeleted","removeClass","updatedSearchAlert","searchAlertsFollowDocument","updateSubscription","updated","extend","searchAlertsFail","components","getComponents","first","modifiedDateField","getFollowQueryMessage","cause","Assert","exists","get","SearchInterface","doExport","exportGlobally","buildBooleanOption","defaultValue","buildFieldOption","buildNumberOption","min","depend","Component","Initialization","registerAutoCreateComponent","62","onChange","listOfValues","getDisplayValue","dropdown","optionsElement","buildContent","select","bindEvents","reset","setId","setAttribute","getElement","selectElement","index","executeOnChange","selectOption","setValue","option","getAttribute","selectOptions","buildOptions","opt","ret","buildOption","663","handleSubscriptionCreated","oneRootElement","newQuery","getCssClass","htmlFormatted","populateMessageArguments","searchAlertsPopulateMessage","automaticallyBuiltMessage","additionalMessage","map","formatMessageArgumentsText","join","unescape","showMessage","checkboxHookExclusionMore","toggleClass","closeButton","SVGDom","addClassToSVGInContainer","PopupUtils","positionPopup","horizontal","PopupHorizontalAlignment","INNERLEFT","vertical","PopupVerticalAlignment","BOTTOM","verticalOffset","horizontalClip","startCloseDelay","stopCloseDelay","isString","lineThrough","clearTimeout","closeTimeout","window","setTimeout","remove"],"mappings":"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","file":"SearchAlerts.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([32,83],{\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SUBSCRIPTION_TYPE = {\n    followQuery: 'followQuery',\n    followDocument: 'followDocument'\n};\n\n\n/***/ }),\n\n/***/ 277:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = __webpack_require__(0);\nvar QueryEvents_1 = __webpack_require__(11);\nvar SearchAlertEvents_1 = __webpack_require__(83);\nvar SettingsEvents_1 = __webpack_require__(53);\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar GlobalExports_1 = __webpack_require__(3);\nvar Assert_1 = __webpack_require__(5);\nvar Subscription_1 = __webpack_require__(226);\nvar Strings_1 = __webpack_require__(6);\nvar Dom_1 = __webpack_require__(1);\nvar SVGIcons_1 = __webpack_require__(12);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Initialization_1 = __webpack_require__(2);\nvar RegisteredNamedMethods_1 = __webpack_require__(30);\nvar Dropdown_1 = __webpack_require__(62);\nvar SearchInterface_1 = __webpack_require__(19);\nvar SearchAlertsMessage_1 = __webpack_require__(663);\n/**\n * The Search Alerts component renders items in the {@link Settings} menu that allow the end user to follow queries\n * and to manage search alerts. A user following a query receives email notifications when the query results change.\n *\n * **Note:**\n * > It is necessary to meet certain requirements to be able to use this component (see\n * > [Deploying Search Alerts on a Coveo JS Search Page](https://docs.coveo.com/en/1932/)).\n *\n * See also the {@link FollowItem} component.\n */\nvar SearchAlerts = /** @class */ (function (_super) {\n    __extends(SearchAlerts, _super);\n    /**\n     * Creates a new SearchAlerts component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the SearchAlerts component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     */\n    function SearchAlerts(element, options, bindings, ModalBox) {\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\n        var _this = _super.call(this, element, SearchAlerts.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.ModalBox = ModalBox;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, SearchAlerts, options);\n        if (_this.options.enableMessage) {\n            _this.message = new SearchAlertsMessage_1.SearchAlertsMessage(element, { closeDelay: _this.options.messageCloseDelay }, _this.getBindings());\n        }\n        if (!_this.queryController.getEndpoint().options.isGuestUser) {\n            _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\n                if (_this.options.enableManagePanel) {\n                    args.menuData.push({\n                        text: Strings_1.l('SearchAlerts_Panel'),\n                        className: 'coveo-subscriptions-panel',\n                        onOpen: function () { return _this.openPanel(); },\n                        onClose: function () { return _this.close(); },\n                        svgIcon: SVGIcons_1.SVGIcons.icons.dropdownFollowQuery,\n                        svgIconClassName: 'coveo-subscriptions-panel-svg'\n                    });\n                }\n            });\n        }\n        else {\n            _this.logger.warn('Logged in as guest user, search alerts are therefore not available.');\n        }\n        var once = false;\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.querySuccess, function () {\n            if (!once) {\n                once = true;\n                _this.queryController\n                    .getEndpoint()\n                    .listSubscriptions()\n                    .then(function () {\n                    _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\n                        if (_this.options.enableFollowQuery) {\n                            args.menuData.push({\n                                text: Strings_1.l('SearchAlerts_followQuery'),\n                                className: 'coveo-follow-query',\n                                tooltip: Strings_1.l('FollowQueryDescription'),\n                                onOpen: function () { return _this.followQuery(); },\n                                onClose: function () { },\n                                svgIcon: SVGIcons_1.SVGIcons.icons.dropdownFollowQuery,\n                                svgIconClassName: 'coveo-follow-query-svg'\n                            });\n                        }\n                    });\n                })\n                    .catch(function (e) {\n                    // Trap 403 error, as the listSubscription call is called on every page initialization\n                    // to check for current subscriptions. By default, the search alert service is not enabled for most organization\n                    // Don't want to pollute the console with un-needed noise and confusion\n                    if (e.status != 403) {\n                        throw e;\n                    }\n                });\n            }\n        });\n        return _this;\n    }\n    /**\n     * Follows the last query. The user will start receiving email notifications when the query results change.\n     *\n     * Also logs the `searchAlertsFollowQuery` event in the usage analytics with the name of the request as meta data.\n     */\n    SearchAlerts.prototype.followQuery = function () {\n        var _this = this;\n        var queryBuilder = this.queryController.createQueryBuilder({});\n        var request = this.buildFollowQueryRequest(queryBuilder.build(), this.options);\n        this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowQuery, {\n            subscription: request.name\n        }, this.element);\n        this.queryController\n            .getEndpoint()\n            .follow(request)\n            .then(function (subscription) {\n            if (subscription) {\n                var eventArgs = {\n                    subscription: subscription,\n                    dom: _this.findQueryBoxDom()\n                };\n                Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, eventArgs);\n            }\n            else {\n                _this.triggerSearchAlertsFail();\n            }\n        })\n            .catch(function () {\n            _this.triggerSearchAlertsFail();\n        });\n    };\n    /**\n     * Opens the **Manage Alerts** panel. This panel allows the end user to stop following queries or items. It also\n     * allows the end user to specify email notification frequency for each followed query or item.\n     */\n    SearchAlerts.prototype.openPanel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var title, titleInfo, container, table, tableHead, rowHead, headerType, headerContent, headerFrequency, headerActions, tableBodySpacer, tableBodySubscriptions, sizeModForModalBox, subscriptions, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        title = Dom_1.$$('div');\n                        titleInfo = Dom_1.$$('div', {\n                            className: 'coveo-subscriptions-panel-title'\n                        }, Strings_1.l('SearchAlerts_Panel'));\n                        title.append(titleInfo.el);\n                        container = Dom_1.$$('div');\n                        table = Dom_1.$$('table', {\n                            className: 'coveo-subscriptions-panel-content',\n                            cellspacing: 0\n                        });\n                        container.append(table.el);\n                        tableHead = Dom_1.$$('thead');\n                        table.append(tableHead.el);\n                        rowHead = Dom_1.$$('tr');\n                        tableHead.append(rowHead.el);\n                        headerType = Dom_1.$$('th', {\n                            className: 'coveo-subscriptions-panel-content-type'\n                        }, Strings_1.l('SearchAlerts_Type'));\n                        headerContent = Dom_1.$$('th', null, Strings_1.l('SearchAlerts_Content'));\n                        headerFrequency = Dom_1.$$('th', null, Strings_1.l('SearchAlerts_Frequency'));\n                        headerActions = Dom_1.$$('th', {\n                            className: 'coveo-subscriptions-panel-content-actions'\n                        }, Strings_1.l('SearchAlerts_Actions'));\n                        rowHead.append(headerType.el);\n                        rowHead.append(headerContent.el);\n                        rowHead.append(headerFrequency.el);\n                        rowHead.append(headerActions.el);\n                        tableBodySpacer = Dom_1.$$('tbody', {\n                            className: 'coveo-subscriptions-panel-spacer'\n                        }, Dom_1.$$('tr', null, Dom_1.$$('td', {\n                            colsspan: 3\n                        })));\n                        table.append(tableBodySpacer.el);\n                        tableBodySubscriptions = Dom_1.$$('tbody', {\n                            className: 'coveo-subscriptions-panel-subscriptions'\n                        }, Dom_1.$$('tr', {\n                            className: 'coveo-subscriptions-panel-no-subscriptions'\n                        }, Dom_1.$$('td', {\n                            colspan: 3\n                        }, Strings_1.l('SearchAlerts_PanelNoSearchAlerts'))));\n                        table.append(tableBodySubscriptions.el);\n                        sizeModForModalBox = 'big';\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.queryController.getEndpoint().listSubscriptions()];\n                    case 2:\n                        subscriptions = _a.sent();\n                        _.each(subscriptions, function (subscription) { return _this.addSearchAlert(subscription, container); });\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _a.sent();\n                        this.logger.error('Error retrieving subscriptions', e_1);\n                        sizeModForModalBox = 'small';\n                        container.empty();\n                        container.append(this.getFailureMessage().el);\n                        return [3 /*break*/, 4];\n                    case 4:\n                        this.modal = this.ModalBox.open(container.el, {\n                            title: title.el.outerHTML,\n                            className: 'coveo-subscriptions-panel',\n                            sizeMod: sizeModForModalBox,\n                            body: this.searchInterface.options.modalContainer\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    SearchAlerts.prototype.getFailureMessage = function () {\n        return Dom_1.$$('div', {\n            className: 'coveo-subscriptions-panel-fail'\n        }, Strings_1.l('SearchAlerts_Fail'));\n    };\n    SearchAlerts.prototype.handleSearchAlertsFail = function () {\n        if (this.modal != null) {\n            var modalBody = Dom_1.$$(this.modal.wrapper).find('.coveo-modal-body');\n            Dom_1.$$(modalBody).empty();\n            Dom_1.$$(modalBody).append(this.getFailureMessage().el);\n        }\n    };\n    SearchAlerts.prototype.close = function () {\n        if (this.modal) {\n            this.modal.close();\n            this.modal = null;\n        }\n    };\n    SearchAlerts.prototype.addSearchAlert = function (subscription, container) {\n        var _this = this;\n        var frequencies = [\n            { value: 'monthly', label: Strings_1.l('Monthly') },\n            { value: 'daily', label: Strings_1.l('Daily') },\n            { value: 'monday', label: Strings_1.l('Monday') },\n            { value: 'tuesday', label: Strings_1.l('Tuesday') },\n            { value: 'wednesday', label: Strings_1.l('Wednesday') },\n            { value: 'thursday', label: Strings_1.l('Thursday') },\n            { value: 'friday', label: Strings_1.l('Friday') },\n            { value: 'saturday', label: Strings_1.l('Saturday') },\n            { value: 'sunday', label: Strings_1.l('Sunday') }\n        ];\n        var context;\n        if (subscription.name) {\n            if (subscription.name == '<empty>') {\n                context = '&lt;empty&gt;';\n            }\n            else {\n                var textExtracted = Dom_1.$$('div').el;\n                textExtracted.innerHTML = subscription.name;\n                context = Dom_1.$$(textExtracted).text();\n            }\n        }\n        else if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\n            var typeConfig = subscription.typeConfig;\n            context = _.escape(typeConfig.query.q) || Strings_1.l('EmptyQuery');\n        }\n        else {\n            var typeConfig = subscription.typeConfig;\n            context = _.escape(typeConfig.title || typeConfig.id);\n        }\n        var row = Dom_1.$$('tr', {\n            className: 'coveo-subscriptions-panel-subscription'\n        });\n        var pluckFrequenciesValues = _.pluck(frequencies, 'value');\n        var valueToLabel = function (valueMappedToLabel) { return _.findWhere(frequencies, { value: valueMappedToLabel }).label; };\n        var buildDropdown = function () {\n            return new Dropdown_1.Dropdown(function (dropdownInstance) {\n                _this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUpdateSubscription, {\n                    subscription: context,\n                    frequency: dropdownInstance.getValue()\n                }, _this.element);\n                subscription.frequency = dropdownInstance.getValue();\n                _this.updateAndSyncSearchAlert(subscription);\n            }, pluckFrequenciesValues, valueToLabel).build();\n        };\n        var contentTypeElement = Dom_1.$$('td', {\n            className: 'coveo-subscriptions-panel-content-type'\n        }, Strings_1.l('SearchAlerts_Type_' + subscription.type));\n        var contextElement = Dom_1.$$('td', {\n            className: 'coveo-subscriptions-panel-context',\n            title: context\n        });\n        contextElement.setHtml(context);\n        var frequencyElement = Dom_1.$$('td', null, Dom_1.$$('div', {\n            className: 'coveo-subscriptions-panel-frequency'\n        }, buildDropdown()));\n        var contentActionsElement = Dom_1.$$('td', {\n            className: 'coveo-subscriptions-panel-content-actions'\n        }, null, Dom_1.$$('div', {\n            className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-unfollow'\n        }, Strings_1.l('SearchAlerts_unFollowing')), Dom_1.$$('div', {\n            className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-follow'\n        }, Strings_1.l('SearchAlerts_follow')));\n        row.append(contentTypeElement.el);\n        row.append(contextElement.el);\n        row.append(frequencyElement.el);\n        row.append(contentActionsElement.el);\n        var noSearchAlerts = container.find('.coveo-subscriptions-panel-no-subscriptions');\n        row.insertBefore(noSearchAlerts);\n        var frequencyInput = frequencyElement.find('select');\n        frequencyInput.value = subscription.frequency;\n        Dom_1.$$(row.find('.coveo-subscriptions-panel-action-unfollow')).on('click', function () {\n            row.addClass('coveo-subscription-unfollowed');\n            _this.queryController\n                .getEndpoint()\n                .deleteSubscription(subscription)\n                .then(function () {\n                if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followDocument) {\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUnfollowDocument, subscription);\n                }\n                else if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsUnfollowQuery, subscription);\n                }\n                delete subscription.id;\n                var eventArgs = { subscription: subscription };\n                Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsDeleted, eventArgs);\n            })\n                .catch(function () {\n                _this.handleSearchAlertsFail();\n            });\n        });\n        Dom_1.$$(row.find('.coveo-subscriptions-panel-action-follow')).on('click', function () {\n            row.removeClass('coveo-subscription-unfollowed');\n            _this.queryController\n                .getEndpoint()\n                .follow(subscription)\n                .then(function (updatedSearchAlert) {\n                if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followDocument) {\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowDocument, subscription);\n                }\n                else if (subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\n                    _this.logAnalyticsEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.searchAlertsFollowQuery, subscription);\n                }\n                subscription.id = updatedSearchAlert.id;\n                var eventArgs = { subscription: subscription };\n                Dom_1.$$(_this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, eventArgs);\n            })\n                .catch(function () {\n                _this.handleSearchAlertsFail();\n            });\n        });\n    };\n    SearchAlerts.prototype.updateAndSyncSearchAlert = function (subscription) {\n        var _this = this;\n        this.queryController\n            .getEndpoint()\n            .updateSubscription(subscription)\n            .then(function (updated) { return _.extend(subscription, updated); })\n            .catch(function () {\n            _this.handleSearchAlertsFail();\n        });\n    };\n    SearchAlerts.prototype.triggerSearchAlertsFail = function () {\n        var eventArgs = {\n            dom: this.findQueryBoxDom()\n        };\n        Dom_1.$$(this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsFail, eventArgs);\n    };\n    SearchAlerts.prototype.findQueryBoxDom = function () {\n        var dom;\n        var components = this.searchInterface.getComponents('Querybox');\n        if (components && components.length > 0) {\n            dom = _.first(components).element;\n        }\n        else {\n            var components_1 = this.searchInterface.getComponents('Omnibox');\n            if (components_1 && components_1.length > 0) {\n                dom = _.first(components_1).element;\n            }\n        }\n        return dom;\n    };\n    SearchAlerts.prototype.buildFollowQueryRequest = function (query, options) {\n        var typeConfig = {\n            query: query\n        };\n        if (options.modifiedDateField) {\n            typeConfig.modifiedDateField = options.modifiedDateField;\n        }\n        return {\n            type: Subscription_1.SUBSCRIPTION_TYPE.followQuery,\n            typeConfig: typeConfig,\n            name: this.message.getFollowQueryMessage(query.q)\n        };\n    };\n    SearchAlerts.prototype.logAnalyticsEvent = function (cause, subscription) {\n        this.usageAnalytics.logCustomEvent(cause, {\n            subscription: subscription.name\n        }, this.element);\n    };\n    SearchAlerts.create = function (element, options, root) {\n        Assert_1.Assert.exists(element);\n        return new SearchAlerts(element, options, RegisteredNamedMethods_1.get(root, SearchInterface_1.SearchInterface).getBindings());\n    };\n    SearchAlerts.ID = 'SearchAlerts';\n    SearchAlerts.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            SearchAlerts: SearchAlerts,\n            SearchAlertsMessage: SearchAlertsMessage_1.SearchAlertsMessage\n        });\n    };\n    /**\n     * The options for the search alerts\n     * @componentOptions\n     */\n    SearchAlerts.options = {\n        /**\n         * Specifies whether to add the **Manage Alerts** item in the {@link Settings} menu to allow the end user to manage\n         * search alerts.\n         *\n         * Clicking the **Manage Alerts** item calls the {@link SearchAlerts.openPanel} method.\n         *\n         * Default value is `true`.\n         */\n        enableManagePanel: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies whether to add the **Follow Query** item in the {@link Settings} menu to allow the end user to follow\n         * the last query.\n         *\n         * Clicking the **Follow Query** item calls the {@link SearchAlerts.followQuery} method.\n         *\n         * Default value is `true`.\n         */\n        enableFollowQuery: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies which field to use to represent the modification date when sending the\n         * {@link ISubscriptionQueryRequest}.\n         *\n         * Default value is `undefined`.\n         */\n        modifiedDateField: ComponentOptions_1.ComponentOptions.buildFieldOption(),\n        /**\n         * Specifies whether to display info and error messages when performing search alerts actions.\n         *\n         * If this options is `true`, the SearchAlerts constructor will automatically instantiate a\n         * {@link SearchAlertsMessage} component and set it to the {@link SearchAlerts.message} attribute.\n         *\n         * See also {@link SearchAlerts.options.messageCloseDelay}.\n         *\n         * Default value is `true`.\n         */\n        enableMessage: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * If {@link SearchAlerts.options.enableMessage} is `true`, specifies how long to display the search alert messages\n         * (in milliseconds).\n         *\n         * Default value is `2000`. Minimum value is `0`.\n         */\n        messageCloseDelay: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0, depend: 'enableMessage' })\n    };\n    return SearchAlerts;\n}(Component_1.Component));\nexports.SearchAlerts = SearchAlerts;\nInitialization_1.Initialization.registerAutoCreateComponent(SearchAlerts);\n\n\n/***/ }),\n\n/***/ 62:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar Strings_1 = __webpack_require__(6);\nvar _ = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n/**\n * A dropdown widget with standard styling.\n */\nvar Dropdown = /** @class */ (function () {\n    /**\n     * Creates a new `Dropdown`.\n     * @param onChange The function to call when the dropdown selected value changes. This function takes the current\n     * `Dropdown` instance as an argument.\n     * @param listOfValues The selectable values to display in the dropdown.\n     * @param getDisplayValue An optional function to modify the display values, rather than using the values as they\n     * appear in the `listOfValues`.\n     * @param label The label to use for the input for accessibility purposes.\n     */\n    function Dropdown(onChange, listOfValues, getDisplayValue, label) {\n        if (onChange === void 0) { onChange = function (dropdown) { }; }\n        if (getDisplayValue === void 0) { getDisplayValue = Strings_1.l; }\n        this.onChange = onChange;\n        this.listOfValues = listOfValues;\n        this.getDisplayValue = getDisplayValue;\n        this.label = label;\n        this.optionsElement = [];\n        this.buildContent();\n        this.select(0, false);\n        this.bindEvents();\n    }\n    Dropdown.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            Dropdown: Dropdown\n        });\n    };\n    /**\n     * Resets the dropdown.\n     */\n    Dropdown.prototype.reset = function () {\n        this.select(0, false);\n    };\n    Dropdown.prototype.setId = function (id) {\n        Dom_1.$$(this.element).setAttribute('id', id);\n    };\n    /**\n     * Gets the element on which the dropdown is bound.\n     * @returns {HTMLElement} The dropdown element.\n     */\n    Dropdown.prototype.getElement = function () {\n        return this.element;\n    };\n    /**\n     * Gets the currently selected dropdown value.\n     * @returns {string} The currently selected dropdown value.\n     */\n    Dropdown.prototype.getValue = function () {\n        return this.selectElement.value;\n    };\n    /**\n     * Selects a value from the dropdown [`listofValues`]{@link Dropdown.listOfValues}.\n     * @param index The 0-based index position of the value to select in the `listOfValues`.\n     * @param executeOnChange Indicates whether to execute the [`onChange`]{@link Dropdown.onChange} function when this\n     * method changes the dropdown selection.\n     */\n    Dropdown.prototype.select = function (index, executeOnChange) {\n        if (executeOnChange === void 0) { executeOnChange = true; }\n        this.selectOption(this.optionsElement[index], executeOnChange);\n    };\n    /**\n     * Gets the element on which the dropdown is bound.\n     * @returns {HTMLElement} The dropdown element.\n     */\n    Dropdown.prototype.build = function () {\n        return this.element;\n    };\n    /**\n     * Sets the dropdown value.\n     * @param value The value to set the dropdown to.\n     */\n    Dropdown.prototype.setValue = function (value) {\n        var _this = this;\n        _.each(this.optionsElement, function (option) {\n            if (Dom_1.$$(option).getAttribute('data-value') == value) {\n                _this.selectOption(option);\n            }\n        });\n    };\n    Dropdown.prototype.selectOption = function (option, executeOnChange) {\n        if (executeOnChange === void 0) { executeOnChange = true; }\n        this.selectElement.value = option.value;\n        if (executeOnChange) {\n            this.onChange(this);\n        }\n    };\n    Dropdown.prototype.buildContent = function () {\n        var _this = this;\n        this.selectElement = Dom_1.$$('select', {\n            className: 'coveo-dropdown'\n        }).el;\n        if (this.label) {\n            this.selectElement.setAttribute('aria-label', Strings_1.l(this.label));\n        }\n        var selectOptions = this.buildOptions();\n        _.each(selectOptions, function (opt) {\n            Dom_1.$$(_this.selectElement).append(opt);\n        });\n        this.element = this.selectElement;\n    };\n    Dropdown.prototype.buildOptions = function () {\n        var _this = this;\n        var ret = [];\n        _.each(this.listOfValues, function (value) {\n            ret.push(_this.buildOption(value));\n        });\n        return ret;\n    };\n    Dropdown.prototype.buildOption = function (value) {\n        var option = Dom_1.$$('option');\n        option.setAttribute('data-value', value);\n        option.setAttribute('value', value);\n        option.text(this.getDisplayValue(value));\n        this.optionsElement.push(option.el);\n        return option.el;\n    };\n    Dropdown.prototype.bindEvents = function () {\n        var _this = this;\n        Dom_1.$$(this.selectElement).on('change', function () { return _this.onChange(_this); });\n    };\n    return Dropdown;\n}());\nexports.Dropdown = Dropdown;\n\n\n/***/ }),\n\n/***/ 663:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar SearchAlertEvents_1 = __webpack_require__(83);\nvar QueryEvents_1 = __webpack_require__(11);\nvar Subscription_1 = __webpack_require__(226);\nvar PopupUtils_1 = __webpack_require__(194);\nvar Strings_1 = __webpack_require__(6);\nvar Dom_1 = __webpack_require__(1);\nvar _ = __webpack_require__(0);\nvar SVGIcons_1 = __webpack_require__(12);\nvar SVGDom_1 = __webpack_require__(16);\n/**\n * The SearchAlertsMessage component allows the {@link SearchAlerts} component to display messages.\n *\n * You should not include this component in your page. Instead, use a {@link SearchAlerts} component, and access the\n * {@link SearchAlerts.message} attribute.\n */\nvar SearchAlertsMessage = /** @class */ (function (_super) {\n    __extends(SearchAlertsMessage, _super);\n    /**\n     * Creates a new SearchAlertsMessage component\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the SearchAlertsMessage component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     */\n    function SearchAlertsMessage(element, options, bindings) {\n        var _this = _super.call(this, element, SearchAlertsMessage.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.bind.onRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsCreated, function (args) { return _this.handleSubscriptionCreated(args); });\n        _this.bind.oneRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsFail, function (args) { return _this.handleSearchAlertsFail(args); });\n        _this.bind.oneRootElement(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsDeleted, function () { return _this.close(); });\n        _this.bind.oneRootElement(QueryEvents_1.QueryEvents.newQuery, function () { return _this.close(); });\n        return _this;\n    }\n    SearchAlertsMessage.prototype.getCssClass = function () {\n        return 'coveo-subscriptions-messages';\n    };\n    SearchAlertsMessage.prototype.getFollowQueryMessage = function (query, htmlFormatted) {\n        var _this = this;\n        if (htmlFormatted === void 0) { htmlFormatted = false; }\n        var populateMessageArguments = {\n            text: []\n        };\n        var getAdditionalTextFormatted = function () {\n            return _.map(populateMessageArguments.text, function (text) {\n                text = _this.formatMessageArgumentsText(text);\n                return \"\" + (htmlFormatted ? '<li>' : '(') + text + (htmlFormatted ? '</li>' : ')');\n            }).join(' ');\n        };\n        Dom_1.$$(this.root).trigger(SearchAlertEvents_1.SearchAlertsEvents.searchAlertsPopulateMessage, populateMessageArguments);\n        var additionalMessage = \"\" + (htmlFormatted ? '<ul>' : '') + getAdditionalTextFormatted() + (htmlFormatted ? '</ul>' : '');\n        var automaticallyBuiltMessage;\n        if (query && populateMessageArguments.text.length != 0) {\n            automaticallyBuiltMessage = _.escape(query) + \" \" + additionalMessage;\n        }\n        if (query && populateMessageArguments.text.length == 0) {\n            automaticallyBuiltMessage = \"\" + _.escape(query);\n        }\n        if (!query && populateMessageArguments.text.length != 0) {\n            automaticallyBuiltMessage = \"\" + additionalMessage;\n        }\n        if (!query && populateMessageArguments.text.length == 0) {\n            automaticallyBuiltMessage = htmlFormatted ? Strings_1.l('EmptyQuery') : _.unescape(Strings_1.l('EmptyQuery'));\n        }\n        return automaticallyBuiltMessage;\n    };\n    /**\n     * Displays a message near the passed dom attribute.\n     * @param dom Specifies where to display the message.\n     * @param message The message.\n     * @param error Specifies whether the message is an error message.\n     */\n    SearchAlertsMessage.prototype.showMessage = function (dom, message, error) {\n        var _this = this;\n        this.message = Dom_1.$$('div', {\n            className: 'coveo-subscriptions-messages'\n        });\n        this.message.el.innerHTML = \"\\n      <div class='coveo-subscriptions-messages-message'>\\n        <div class='coveo-subscriptions-messages-content'><span>\" + message + \"</span></div>\\n        <div class='coveo-subscriptions-messages-info-close'>\" + SVGIcons_1.SVGIcons.icons.checkboxHookExclusionMore + \"</div>\\n      </div>\";\n        this.message.toggleClass('coveo-subscriptions-messages-error', error);\n        var closeButton = this.message.find('.coveo-subscriptions-messages-info-close');\n        SVGDom_1.SVGDom.addClassToSVGInContainer(closeButton, 'coveo-subscript-messages-info-close-svg');\n        Dom_1.$$(closeButton).on('click', function () { return _this.close(); });\n        PopupUtils_1.PopupUtils.positionPopup(this.message.el, dom.el, this.root, {\n            horizontal: PopupUtils_1.PopupHorizontalAlignment.INNERLEFT,\n            vertical: PopupUtils_1.PopupVerticalAlignment.BOTTOM,\n            verticalOffset: 12,\n            horizontalClip: true\n        }, this.root);\n        this.startCloseDelay();\n        this.message.on('mouseleave', function () {\n            _this.startCloseDelay();\n        });\n        this.message.on('mouseenter', function () {\n            _this.stopCloseDelay();\n        });\n    };\n    SearchAlertsMessage.prototype.formatMessageArgumentsText = function (text) {\n        if (_.isString(text)) {\n            text = _.escape(text);\n        }\n        else if (text.lineThrough) {\n            text = '<span style=\"text-decoration:line-through\">' + _.escape(text.value) + '</span>';\n        }\n        else {\n            text = _.escape(text.value);\n        }\n        return text;\n    };\n    SearchAlertsMessage.prototype.handleSubscriptionCreated = function (args) {\n        this.close();\n        if (args.dom != null) {\n            if (args.subscription.type == Subscription_1.SUBSCRIPTION_TYPE.followQuery) {\n                var typeConfig = args.subscription.typeConfig;\n                this.showMessage(Dom_1.$$(args.dom), Strings_1.l('SubscriptionsMessageFollowQuery', this.getFollowQueryMessage(typeConfig.query.q, true)), false);\n            }\n            else {\n                this.showMessage(Dom_1.$$(args.dom), Strings_1.l('SubscriptionsMessageFollow'), false);\n            }\n        }\n    };\n    SearchAlertsMessage.prototype.handleSearchAlertsFail = function (args) {\n        this.close();\n        if (args.dom != null) {\n            this.showMessage(Dom_1.$$(args.dom), Strings_1.l('SearchAlerts_Fail'), true);\n        }\n    };\n    SearchAlertsMessage.prototype.startCloseDelay = function () {\n        var _this = this;\n        clearTimeout(this.closeTimeout);\n        this.closeTimeout = window.setTimeout(function () {\n            _this.close();\n        }, this.options.closeDelay);\n    };\n    SearchAlertsMessage.prototype.stopCloseDelay = function () {\n        clearTimeout(this.closeTimeout);\n    };\n    SearchAlertsMessage.prototype.close = function () {\n        if (this.message != null) {\n            clearTimeout(this.closeTimeout);\n            this.message.remove();\n            this.message = null;\n        }\n    };\n    SearchAlertsMessage.ID = 'SubscriptionsMessages';\n    /**\n     * The options for the SearchAlertsMessage component\n     * @componentOptions\n     */\n    SearchAlertsMessage.options = {\n        /**\n         * Specifies how long to display the search alerts messages (in milliseconds).\n         *\n         * Default value is `2000`. Minimum value is `0`.\n         */\n        closeDelay: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0 })\n    };\n    return SearchAlertsMessage;\n}(Component_1.Component));\nexports.SearchAlertsMessage = SearchAlertsMessage;\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// SearchAlerts.min__45edc409d97327d59af1.js","import { IQuery } from './Query';\n\nexport const SUBSCRIPTION_TYPE = {\n  followQuery: 'followQuery',\n  followDocument: 'followDocument'\n};\n\nexport interface ISearchAlertsEndpointOptions {\n  restUri: string;\n  accessToken?: string;\n  errorsAsSuccess?: boolean;\n}\n\nexport interface ISearchAlertsEndpointCallOptions {\n  type?: string;\n  page?: number;\n}\n\nexport interface ISearchAlertsEndpointSearchCallOptions {\n  documentIds: string[];\n}\n\n/**\n * Describe a subscription to the Coveo Search alerts service\n */\nexport interface ISubscription extends ISubscriptionRequest {\n  /**\n   * The id of the subscription\n   */\n  id: string;\n\n  /**\n   * The user associated with the subscription\n   */\n  user: ISubscriptionUser;\n}\n\n/**\n * Describe a user associated with a subscription to the Coveo Search alerts service\n */\nexport interface ISubscriptionUser {\n  /**\n   * The email of the user\n   */\n  email: string;\n\n  /**\n   * The token used to manage the alerts via email.\n   */\n  manageToken: string;\n}\n\n/**\n * Describe a request to subscribe to the Coveo Search alerts service\n */\nexport interface ISubscriptionRequest {\n  /**\n   * Type of subscription.<br/>\n   * Can be 'followQuery' or 'followDocument'\n   */\n  type: string;\n  /**\n   * Config of the subscription\n   */\n  typeConfig: ISubscriptionQueryRequest | ISubscriptionItemRequest;\n  /**\n   * Frequency of the alerts\n   */\n  frequency?: string;\n  /**\n   * The name that should be used by the API to identify this subscription\n   */\n  name: string;\n}\n\n/**\n * Describe a subscription to a single query\n */\nexport interface ISubscriptionQueryRequest {\n  /**\n   * Query to subscribe to\n   */\n  query: IQuery;\n  /**\n   * Which field on the result set represent the modification date for which you wish to receive alerts\n   */\n  modifiedDateField?: string;\n}\n\n/**\n * The `ISubscriptionItemRequest` interface describes a subscription to a single item (a result).\n */\nexport interface ISubscriptionItemRequest {\n  /**\n   * Contains the unique ID of the item to subscribe to.\n   */\n  id: string;\n\n  /**\n   * Contains the title of the item to subscribe to.\n   */\n  title: string;\n\n  /**\n   * Indicates which field contains the modification date of the item to subscribe to.\n   */\n  modifiedDateField?: string;\n\n  /**\n   * Contains a list of fields to monitor for the item to subscribe to.\n   */\n  watchedFields?: string[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/rest/Subscription.ts","import * as _ from 'underscore';\nimport { QueryEvents } from '../../events/QueryEvents';\nimport { ISearchAlertsEventArgs, ISearchAlertsFailEventArgs, SearchAlertsEvents } from '../../events/SearchAlertEvents';\nimport { SettingsEvents } from '../../events/SettingsEvents';\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\nimport { exportGlobally } from '../../GlobalExports';\nimport { Assert } from '../../misc/Assert';\nimport { AjaxError } from '../../rest/AjaxError';\nimport { IQuery } from '../../rest/Query';\nimport {\n  ISubscription,\n  ISubscriptionItemRequest,\n  ISubscriptionQueryRequest,\n  ISubscriptionRequest,\n  SUBSCRIPTION_TYPE\n} from '../../rest/Subscription';\nimport { l } from '../../strings/Strings';\nimport { $$, Dom } from '../../utils/Dom';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport {\n  analyticsActionCauseList,\n  IAnalyticsActionCause,\n  IAnalyticsSearchAlertsMeta,\n  IAnalyticsSearchAlertsUpdateMeta\n} from '../Analytics/AnalyticsActionListMeta';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IFieldOption } from '../Base/IComponentOptions';\nimport { Initialization } from '../Base/Initialization';\nimport { get } from '../Base/RegisteredNamedMethods';\nimport { Dropdown } from '../FormWidgets/Dropdown';\nimport { SearchInterface } from '../SearchInterface/SearchInterface';\nimport { ISettingsPopulateMenuArgs } from '../Settings/Settings';\nimport { SearchAlertsMessage } from './SearchAlertsMessage';\nimport ModalBox = Coveo.ModalBox.ModalBox;\n\nexport interface ISearchAlertsOptions {\n  enableManagePanel?: boolean;\n  enableFollowQuery?: boolean;\n  modifiedDateField?: IFieldOption;\n  enableMessage?: boolean;\n  messageCloseDelay?: number;\n}\n\n/**\n * The Search Alerts component renders items in the {@link Settings} menu that allow the end user to follow queries\n * and to manage search alerts. A user following a query receives email notifications when the query results change.\n *\n * **Note:**\n * > It is necessary to meet certain requirements to be able to use this component (see\n * > [Deploying Search Alerts on a Coveo JS Search Page](https://docs.coveo.com/en/1932/)).\n *\n * See also the {@link FollowItem} component.\n */\nexport class SearchAlerts extends Component {\n  static ID = 'SearchAlerts';\n\n  static doExport = () => {\n    exportGlobally({\n      SearchAlerts: SearchAlerts,\n      SearchAlertsMessage: SearchAlertsMessage\n    });\n  };\n\n  /**\n   * The options for the search alerts\n   * @componentOptions\n   */\n  static options: ISearchAlertsOptions = {\n    /**\n     * Specifies whether to add the **Manage Alerts** item in the {@link Settings} menu to allow the end user to manage\n     * search alerts.\n     *\n     * Clicking the **Manage Alerts** item calls the {@link SearchAlerts.openPanel} method.\n     *\n     * Default value is `true`.\n     */\n    enableManagePanel: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies whether to add the **Follow Query** item in the {@link Settings} menu to allow the end user to follow\n     * the last query.\n     *\n     * Clicking the **Follow Query** item calls the {@link SearchAlerts.followQuery} method.\n     *\n     * Default value is `true`.\n     */\n    enableFollowQuery: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies which field to use to represent the modification date when sending the\n     * {@link ISubscriptionQueryRequest}.\n     *\n     * Default value is `undefined`.\n     */\n    modifiedDateField: ComponentOptions.buildFieldOption(),\n\n    /**\n     * Specifies whether to display info and error messages when performing search alerts actions.\n     *\n     * If this options is `true`, the SearchAlerts constructor will automatically instantiate a\n     * {@link SearchAlertsMessage} component and set it to the {@link SearchAlerts.message} attribute.\n     *\n     * See also {@link SearchAlerts.options.messageCloseDelay}.\n     *\n     * Default value is `true`.\n     */\n    enableMessage: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * If {@link SearchAlerts.options.enableMessage} is `true`, specifies how long to display the search alert messages\n     * (in milliseconds).\n     *\n     * Default value is `2000`. Minimum value is `0`.\n     */\n    messageCloseDelay: ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0, depend: 'enableMessage' })\n  };\n\n  private modal: ModalBox;\n\n  /**\n   * A reference to a {@link SearchAlertsMessage} component that the SearchAlerts component uses to display messages.\n   */\n  public message: SearchAlertsMessage;\n\n  /**\n   * Creates a new SearchAlerts component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the SearchAlerts component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: ISearchAlertsOptions,\n    bindings?: IComponentBindings,\n    private ModalBox = ModalBoxModule\n  ) {\n    super(element, SearchAlerts.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, SearchAlerts, options);\n\n    if (this.options.enableMessage) {\n      this.message = new SearchAlertsMessage(element, { closeDelay: this.options.messageCloseDelay }, this.getBindings());\n    }\n\n    if (!this.queryController.getEndpoint().options.isGuestUser) {\n      this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\n        if (this.options.enableManagePanel) {\n          args.menuData.push({\n            text: l('SearchAlerts_Panel'),\n            className: 'coveo-subscriptions-panel',\n            onOpen: () => this.openPanel(),\n            onClose: () => this.close(),\n            svgIcon: SVGIcons.icons.dropdownFollowQuery,\n            svgIconClassName: 'coveo-subscriptions-panel-svg'\n          });\n        }\n      });\n    } else {\n      this.logger.warn('Logged in as guest user, search alerts are therefore not available.');\n    }\n\n    let once = false;\n\n    this.bind.onRootElement(QueryEvents.querySuccess, () => {\n      if (!once) {\n        once = true;\n        this.queryController\n          .getEndpoint()\n          .listSubscriptions()\n          .then(() => {\n            this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\n              if (this.options.enableFollowQuery) {\n                args.menuData.push({\n                  text: l('SearchAlerts_followQuery'),\n                  className: 'coveo-follow-query',\n                  tooltip: l('FollowQueryDescription'),\n                  onOpen: () => this.followQuery(),\n                  onClose: () => {},\n                  svgIcon: SVGIcons.icons.dropdownFollowQuery,\n                  svgIconClassName: 'coveo-follow-query-svg'\n                });\n              }\n            });\n          })\n          .catch((e: AjaxError) => {\n            // Trap 403 error, as the listSubscription call is called on every page initialization\n            // to check for current subscriptions. By default, the search alert service is not enabled for most organization\n            // Don't want to pollute the console with un-needed noise and confusion\n            if (e.status != 403) {\n              throw e;\n            }\n          });\n      }\n    });\n  }\n\n  /**\n   * Follows the last query. The user will start receiving email notifications when the query results change.\n   *\n   * Also logs the `searchAlertsFollowQuery` event in the usage analytics with the name of the request as meta data.\n   */\n  public followQuery() {\n    const queryBuilder = this.queryController.createQueryBuilder({});\n    const request = this.buildFollowQueryRequest(queryBuilder.build(), this.options);\n\n    this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsMeta>(\n      analyticsActionCauseList.searchAlertsFollowQuery,\n      {\n        subscription: request.name\n      },\n      this.element\n    );\n\n    this.queryController\n      .getEndpoint()\n      .follow(request)\n      .then((subscription: ISubscription) => {\n        if (subscription) {\n          const eventArgs: ISearchAlertsEventArgs = {\n            subscription: subscription,\n            dom: this.findQueryBoxDom()\n          };\n          $$(this.root).trigger(SearchAlertsEvents.searchAlertsCreated, eventArgs);\n        } else {\n          this.triggerSearchAlertsFail();\n        }\n      })\n      .catch(() => {\n        this.triggerSearchAlertsFail();\n      });\n  }\n\n  /**\n   * Opens the **Manage Alerts** panel. This panel allows the end user to stop following queries or items. It also\n   * allows the end user to specify email notification frequency for each followed query or item.\n   */\n  public async openPanel(): Promise<void> {\n    const title = $$('div');\n\n    const titleInfo = $$(\n      'div',\n      {\n        className: 'coveo-subscriptions-panel-title'\n      },\n      l('SearchAlerts_Panel')\n    );\n\n    title.append(titleInfo.el);\n\n    const container = $$('div');\n    const table = $$('table', {\n      className: 'coveo-subscriptions-panel-content',\n      cellspacing: 0\n    });\n    container.append(table.el);\n    const tableHead = $$('thead');\n    table.append(tableHead.el);\n\n    const rowHead = $$('tr');\n    tableHead.append(rowHead.el);\n\n    const headerType = $$(\n      'th',\n      {\n        className: 'coveo-subscriptions-panel-content-type'\n      },\n      l('SearchAlerts_Type')\n    );\n    const headerContent = $$('th', null, l('SearchAlerts_Content'));\n    const headerFrequency = $$('th', null, l('SearchAlerts_Frequency'));\n    const headerActions = $$(\n      'th',\n      {\n        className: 'coveo-subscriptions-panel-content-actions'\n      },\n      l('SearchAlerts_Actions')\n    );\n\n    rowHead.append(headerType.el);\n    rowHead.append(headerContent.el);\n    rowHead.append(headerFrequency.el);\n    rowHead.append(headerActions.el);\n\n    const tableBodySpacer = $$(\n      'tbody',\n      {\n        className: 'coveo-subscriptions-panel-spacer'\n      },\n      $$(\n        'tr',\n        null,\n        $$('td', {\n          colsspan: 3\n        })\n      )\n    );\n\n    table.append(tableBodySpacer.el);\n\n    const tableBodySubscriptions = $$(\n      'tbody',\n      {\n        className: 'coveo-subscriptions-panel-subscriptions'\n      },\n      $$(\n        'tr',\n        {\n          className: 'coveo-subscriptions-panel-no-subscriptions'\n        },\n        $$(\n          'td',\n          {\n            colspan: 3\n          },\n          l('SearchAlerts_PanelNoSearchAlerts')\n        )\n      )\n    );\n\n    table.append(tableBodySubscriptions.el);\n    let sizeModForModalBox = 'big';\n\n    try {\n      const subscriptions = await this.queryController.getEndpoint().listSubscriptions();\n      _.each(subscriptions, subscription => this.addSearchAlert(subscription, container));\n    } catch (e) {\n      this.logger.error('Error retrieving subscriptions', e);\n      sizeModForModalBox = 'small';\n      container.empty();\n      container.append(this.getFailureMessage().el);\n    }\n\n    this.modal = this.ModalBox.open(container.el, {\n      title: title.el.outerHTML,\n      className: 'coveo-subscriptions-panel',\n      sizeMod: sizeModForModalBox,\n      body: this.searchInterface.options.modalContainer\n    });\n  }\n\n  private getFailureMessage(): Dom {\n    return $$(\n      'div',\n      {\n        className: 'coveo-subscriptions-panel-fail'\n      },\n      l('SearchAlerts_Fail')\n    );\n  }\n\n  private handleSearchAlertsFail() {\n    if (this.modal != null) {\n      const modalBody = $$(this.modal.wrapper).find('.coveo-modal-body');\n      $$(modalBody).empty();\n      $$(modalBody).append(this.getFailureMessage().el);\n    }\n  }\n\n  private close() {\n    if (this.modal) {\n      this.modal.close();\n      this.modal = null;\n    }\n  }\n\n  private addSearchAlert(subscription: ISubscription, container: Dom) {\n    const frequencies = [\n      { value: 'monthly', label: l('Monthly') },\n      { value: 'daily', label: l('Daily') },\n      { value: 'monday', label: l('Monday') },\n      { value: 'tuesday', label: l('Tuesday') },\n      { value: 'wednesday', label: l('Wednesday') },\n      { value: 'thursday', label: l('Thursday') },\n      { value: 'friday', label: l('Friday') },\n      { value: 'saturday', label: l('Saturday') },\n      { value: 'sunday', label: l('Sunday') }\n    ];\n\n    let context: string;\n    if (subscription.name) {\n      if (subscription.name == '<empty>') {\n        context = '&lt;empty&gt;';\n      } else {\n        const textExtracted = $$('div').el;\n        textExtracted.innerHTML = subscription.name;\n        context = $$(textExtracted).text();\n      }\n    } else if (subscription.type == SUBSCRIPTION_TYPE.followQuery) {\n      const typeConfig = <ISubscriptionQueryRequest>subscription.typeConfig;\n      context = _.escape(typeConfig.query.q) || l('EmptyQuery');\n    } else {\n      const typeConfig = <ISubscriptionItemRequest>subscription.typeConfig;\n      context = _.escape(typeConfig.title || typeConfig.id);\n    }\n\n    const row = $$('tr', {\n      className: 'coveo-subscriptions-panel-subscription'\n    });\n\n    const pluckFrequenciesValues = _.pluck(frequencies, 'value');\n    const valueToLabel = (valueMappedToLabel: string) => _.findWhere(frequencies, { value: valueMappedToLabel }).label;\n\n    const buildDropdown = () => {\n      return new Dropdown(\n        (dropdownInstance: Dropdown) => {\n          this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsUpdateMeta>(\n            analyticsActionCauseList.searchAlertsUpdateSubscription,\n            {\n              subscription: context,\n              frequency: dropdownInstance.getValue()\n            },\n            this.element\n          );\n          subscription.frequency = dropdownInstance.getValue();\n          this.updateAndSyncSearchAlert(subscription);\n        },\n        pluckFrequenciesValues,\n        valueToLabel\n      ).build();\n    };\n\n    const contentTypeElement = $$(\n      'td',\n      {\n        className: 'coveo-subscriptions-panel-content-type'\n      },\n      l('SearchAlerts_Type_' + subscription.type)\n    );\n\n    const contextElement = $$('td', {\n      className: 'coveo-subscriptions-panel-context',\n      title: context\n    });\n    contextElement.setHtml(context);\n\n    const frequencyElement = $$(\n      'td',\n      null,\n      $$(\n        'div',\n        {\n          className: 'coveo-subscriptions-panel-frequency'\n        },\n        buildDropdown()\n      )\n    );\n\n    const contentActionsElement = $$(\n      'td',\n      {\n        className: 'coveo-subscriptions-panel-content-actions'\n      },\n      null,\n      $$(\n        'div',\n        {\n          className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-unfollow'\n        },\n        l('SearchAlerts_unFollowing')\n      ),\n      $$(\n        'div',\n        {\n          className: 'coveo-subscriptions-panel-action coveo-subscriptions-panel-action-follow'\n        },\n        l('SearchAlerts_follow')\n      )\n    );\n\n    row.append(contentTypeElement.el);\n    row.append(contextElement.el);\n    row.append(frequencyElement.el);\n    row.append(contentActionsElement.el);\n\n    const noSearchAlerts = container.find('.coveo-subscriptions-panel-no-subscriptions');\n\n    row.insertBefore(noSearchAlerts);\n\n    const frequencyInput = <HTMLSelectElement>frequencyElement.find('select');\n    frequencyInput.value = subscription.frequency;\n\n    $$(row.find('.coveo-subscriptions-panel-action-unfollow')).on('click', () => {\n      row.addClass('coveo-subscription-unfollowed');\n\n      this.queryController\n        .getEndpoint()\n        .deleteSubscription(subscription)\n        .then(() => {\n          if (subscription.type == SUBSCRIPTION_TYPE.followDocument) {\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsUnfollowDocument, subscription);\n          } else if (subscription.type == SUBSCRIPTION_TYPE.followQuery) {\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsUnfollowQuery, subscription);\n          }\n          delete subscription.id;\n\n          const eventArgs: ISearchAlertsEventArgs = { subscription: subscription };\n          $$(this.root).trigger(SearchAlertsEvents.searchAlertsDeleted, eventArgs);\n        })\n        .catch(() => {\n          this.handleSearchAlertsFail();\n        });\n    });\n\n    $$(row.find('.coveo-subscriptions-panel-action-follow')).on('click', () => {\n      row.removeClass('coveo-subscription-unfollowed');\n\n      this.queryController\n        .getEndpoint()\n        .follow(subscription)\n        .then(updatedSearchAlert => {\n          if (subscription.type == SUBSCRIPTION_TYPE.followDocument) {\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsFollowDocument, subscription);\n          } else if (subscription.type == SUBSCRIPTION_TYPE.followQuery) {\n            this.logAnalyticsEvent(analyticsActionCauseList.searchAlertsFollowQuery, subscription);\n          }\n          subscription.id = updatedSearchAlert.id;\n          const eventArgs: ISearchAlertsEventArgs = { subscription: subscription };\n          $$(this.root).trigger(SearchAlertsEvents.searchAlertsCreated, eventArgs);\n        })\n        .catch(() => {\n          this.handleSearchAlertsFail();\n        });\n    });\n  }\n\n  private updateAndSyncSearchAlert(subscription: ISubscription) {\n    this.queryController\n      .getEndpoint()\n      .updateSubscription(subscription)\n      .then((updated: ISubscription) => _.extend(subscription, updated))\n      .catch(() => {\n        this.handleSearchAlertsFail();\n      });\n  }\n\n  private triggerSearchAlertsFail() {\n    const eventArgs: ISearchAlertsFailEventArgs = {\n      dom: this.findQueryBoxDom()\n    };\n    $$(this.root).trigger(SearchAlertsEvents.searchAlertsFail, eventArgs);\n  }\n\n  protected findQueryBoxDom(): HTMLElement {\n    let dom: HTMLElement;\n    const components = this.searchInterface.getComponents<Component>('Querybox');\n    if (components && components.length > 0) {\n      dom = _.first(components).element;\n    } else {\n      const components = this.searchInterface.getComponents<Component>('Omnibox');\n      if (components && components.length > 0) {\n        dom = _.first(components).element;\n      }\n    }\n    return dom;\n  }\n\n  private buildFollowQueryRequest(query: IQuery, options: ISearchAlertsOptions): ISubscriptionRequest {\n    const typeConfig: ISubscriptionQueryRequest = {\n      query: query\n    };\n\n    if (options.modifiedDateField) {\n      typeConfig.modifiedDateField = <string>options.modifiedDateField;\n    }\n\n    return {\n      type: SUBSCRIPTION_TYPE.followQuery,\n      typeConfig: typeConfig,\n      name: this.message.getFollowQueryMessage(query.q)\n    };\n  }\n\n  private logAnalyticsEvent(cause: IAnalyticsActionCause, subscription: ISubscription) {\n    this.usageAnalytics.logCustomEvent<IAnalyticsSearchAlertsMeta>(\n      cause,\n      {\n        subscription: subscription.name\n      },\n      this.element\n    );\n  }\n\n  static create(element: HTMLElement, options?: ISearchAlertsOptions, root?: HTMLElement): SearchAlerts {\n    Assert.exists(element);\n    return new SearchAlerts(element, options, (<SearchInterface>get(root, SearchInterface)).getBindings());\n  }\n}\n\nInitialization.registerAutoCreateComponent(SearchAlerts);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SearchAlerts/SearchAlerts.ts","import { $$ } from '../../utils/Dom';\nimport { l } from '../../strings/Strings';\nimport * as _ from 'underscore';\nimport { IFormWidget, IFormWidgetSettable } from './FormWidgets';\nimport { exportGlobally } from '../../GlobalExports';\n\n/**\n * A dropdown widget with standard styling.\n */\nexport class Dropdown implements IFormWidget, IFormWidgetSettable {\n  private element: HTMLElement;\n  private selectElement: HTMLSelectElement;\n  private optionsElement: HTMLOptionElement[] = [];\n\n  static doExport() {\n    exportGlobally({\n      Dropdown: Dropdown\n    });\n  }\n\n  /**\n   * Creates a new `Dropdown`.\n   * @param onChange The function to call when the dropdown selected value changes. This function takes the current\n   * `Dropdown` instance as an argument.\n   * @param listOfValues The selectable values to display in the dropdown.\n   * @param getDisplayValue An optional function to modify the display values, rather than using the values as they\n   * appear in the `listOfValues`.\n   * @param label The label to use for the input for accessibility purposes.\n   */\n  constructor(\n    public onChange: (dropdown: Dropdown) => void = (dropdown: Dropdown) => {},\n    protected listOfValues: string[],\n    private getDisplayValue: (string) => string = l,\n    private label?: string\n  ) {\n    this.buildContent();\n    this.select(0, false);\n    this.bindEvents();\n  }\n\n  /**\n   * Resets the dropdown.\n   */\n  public reset() {\n    this.select(0, false);\n  }\n\n  public setId(id: string) {\n    $$(this.element).setAttribute('id', id);\n  }\n\n  /**\n   * Gets the element on which the dropdown is bound.\n   * @returns {HTMLElement} The dropdown element.\n   */\n  public getElement(): HTMLElement {\n    return this.element;\n  }\n\n  /**\n   * Gets the currently selected dropdown value.\n   * @returns {string} The currently selected dropdown value.\n   */\n  public getValue(): string {\n    return this.selectElement.value;\n  }\n\n  /**\n   * Selects a value from the dropdown [`listofValues`]{@link Dropdown.listOfValues}.\n   * @param index The 0-based index position of the value to select in the `listOfValues`.\n   * @param executeOnChange Indicates whether to execute the [`onChange`]{@link Dropdown.onChange} function when this\n   * method changes the dropdown selection.\n   */\n  public select(index: number, executeOnChange = true) {\n    this.selectOption(this.optionsElement[index], executeOnChange);\n  }\n\n  /**\n   * Gets the element on which the dropdown is bound.\n   * @returns {HTMLElement} The dropdown element.\n   */\n  public build() {\n    return this.element;\n  }\n\n  /**\n   * Sets the dropdown value.\n   * @param value The value to set the dropdown to.\n   */\n  public setValue(value: string) {\n    _.each(this.optionsElement, option => {\n      if ($$(option).getAttribute('data-value') == value) {\n        this.selectOption(option);\n      }\n    });\n  }\n\n  private selectOption(option: HTMLOptionElement, executeOnChange = true) {\n    this.selectElement.value = option.value;\n    if (executeOnChange) {\n      this.onChange(this);\n    }\n  }\n\n  private buildContent() {\n    this.selectElement = <HTMLSelectElement>$$('select', {\n      className: 'coveo-dropdown'\n    }).el;\n\n    if (this.label) {\n      this.selectElement.setAttribute('aria-label', l(this.label));\n    }\n\n    const selectOptions = this.buildOptions();\n    _.each(selectOptions, opt => {\n      $$(this.selectElement).append(opt);\n    });\n    this.element = this.selectElement;\n  }\n\n  private buildOptions(): HTMLElement[] {\n    const ret: HTMLElement[] = [];\n    _.each(this.listOfValues, (value: string) => {\n      ret.push(this.buildOption(value));\n    });\n    return ret;\n  }\n\n  private buildOption(value: string): HTMLElement {\n    const option = $$('option');\n    option.setAttribute('data-value', value);\n    option.setAttribute('value', value);\n    option.text(this.getDisplayValue(value));\n    this.optionsElement.push(<HTMLOptionElement>option.el);\n    return option.el;\n  }\n\n  private bindEvents() {\n    $$(this.selectElement).on('change', () => this.onChange(this));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FormWidgets/Dropdown.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport {\n  SearchAlertsEvents,\n  ISearchAlertsEventArgs,\n  ISearchAlertsFailEventArgs,\n  ISearchAlertsPopulateMessageEventArgs\n} from '../../events/SearchAlertEvents';\nimport { QueryEvents } from '../../events/QueryEvents';\nimport { SUBSCRIPTION_TYPE, ISubscriptionQueryRequest } from '../../rest/Subscription';\nimport { PopupUtils, PopupHorizontalAlignment, PopupVerticalAlignment } from '../../utils/PopupUtils';\nimport { l } from '../../strings/Strings';\nimport { $$, Dom } from '../../utils/Dom';\nimport * as _ from 'underscore';\nimport { ISearchAlertsPopulateMessageText } from '../../events/SearchAlertEvents';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { SVGDom } from '../../utils/SVGDom';\n\nexport interface ISearchAlertMessageOptions {\n  closeDelay: number;\n}\n\n/**\n * The SearchAlertsMessage component allows the {@link SearchAlerts} component to display messages.\n *\n * You should not include this component in your page. Instead, use a {@link SearchAlerts} component, and access the\n * {@link SearchAlerts.message} attribute.\n */\nexport class SearchAlertsMessage extends Component {\n  static ID = 'SubscriptionsMessages';\n\n  /**\n   * The options for the SearchAlertsMessage component\n   * @componentOptions\n   */\n  static options: ISearchAlertMessageOptions = {\n    /**\n     * Specifies how long to display the search alerts messages (in milliseconds).\n     *\n     * Default value is `2000`. Minimum value is `0`.\n     */\n    closeDelay: ComponentOptions.buildNumberOption({ defaultValue: 2000, min: 0 })\n  };\n\n  private message: Dom;\n  private closeTimeout: number;\n\n  /**\n   * Creates a new SearchAlertsMessage component\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the SearchAlertsMessage component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options: ISearchAlertMessageOptions, public bindings?: IComponentBindings) {\n    super(element, SearchAlertsMessage.ID, bindings);\n\n    this.bind.onRootElement(SearchAlertsEvents.searchAlertsCreated, (args: ISearchAlertsEventArgs) => this.handleSubscriptionCreated(args));\n    this.bind.oneRootElement(SearchAlertsEvents.searchAlertsFail, (args: ISearchAlertsEventArgs) => this.handleSearchAlertsFail(args));\n    this.bind.oneRootElement(SearchAlertsEvents.searchAlertsDeleted, () => this.close());\n    this.bind.oneRootElement(QueryEvents.newQuery, () => this.close());\n  }\n\n  public getCssClass(): string {\n    return 'coveo-subscriptions-messages';\n  }\n\n  public getFollowQueryMessage(query?: string, htmlFormatted = false): string {\n    let populateMessageArguments: ISearchAlertsPopulateMessageEventArgs = {\n      text: []\n    };\n\n    let getAdditionalTextFormatted = () => {\n      return _.map(populateMessageArguments.text, text => {\n        text = this.formatMessageArgumentsText(text);\n        return `${htmlFormatted ? '<li>' : '('}${text}${htmlFormatted ? '</li>' : ')'}`;\n      }).join(' ');\n    };\n\n    $$(this.root).trigger(SearchAlertsEvents.searchAlertsPopulateMessage, populateMessageArguments);\n    let additionalMessage = `${htmlFormatted ? '<ul>' : ''}${getAdditionalTextFormatted()}${htmlFormatted ? '</ul>' : ''}`;\n\n    let automaticallyBuiltMessage: string;\n\n    if (query && populateMessageArguments.text.length != 0) {\n      automaticallyBuiltMessage = `${_.escape(query)} ${additionalMessage}`;\n    }\n\n    if (query && populateMessageArguments.text.length == 0) {\n      automaticallyBuiltMessage = `${_.escape(query)}`;\n    }\n\n    if (!query && populateMessageArguments.text.length != 0) {\n      automaticallyBuiltMessage = `${additionalMessage}`;\n    }\n\n    if (!query && populateMessageArguments.text.length == 0) {\n      automaticallyBuiltMessage = htmlFormatted ? l('EmptyQuery') : _.unescape(l('EmptyQuery'));\n    }\n\n    return automaticallyBuiltMessage;\n  }\n\n  /**\n   * Displays a message near the passed dom attribute.\n   * @param dom Specifies where to display the message.\n   * @param message The message.\n   * @param error Specifies whether the message is an error message.\n   */\n  public showMessage(dom: Dom, message: string, error: boolean) {\n    this.message = $$('div', {\n      className: 'coveo-subscriptions-messages'\n    });\n    this.message.el.innerHTML = `\n      <div class='coveo-subscriptions-messages-message'>\n        <div class='coveo-subscriptions-messages-content'><span>${message}</span></div>\n        <div class='coveo-subscriptions-messages-info-close'>${SVGIcons.icons.checkboxHookExclusionMore}</div>\n      </div>`;\n\n    this.message.toggleClass('coveo-subscriptions-messages-error', error);\n    let closeButton = this.message.find('.coveo-subscriptions-messages-info-close');\n    SVGDom.addClassToSVGInContainer(closeButton, 'coveo-subscript-messages-info-close-svg');\n    $$(closeButton).on('click', () => this.close());\n\n    PopupUtils.positionPopup(\n      this.message.el,\n      dom.el,\n      this.root,\n      {\n        horizontal: PopupHorizontalAlignment.INNERLEFT,\n        vertical: PopupVerticalAlignment.BOTTOM,\n        verticalOffset: 12,\n        horizontalClip: true\n      },\n      this.root\n    );\n\n    this.startCloseDelay();\n\n    this.message.on('mouseleave', () => {\n      this.startCloseDelay();\n    });\n    this.message.on('mouseenter', () => {\n      this.stopCloseDelay();\n    });\n  }\n\n  private formatMessageArgumentsText(text: string | ISearchAlertsPopulateMessageText) {\n    if (_.isString(text)) {\n      text = _.escape(text);\n    } else if (text.lineThrough) {\n      text = '<span style=\"text-decoration:line-through\">' + _.escape(text.value) + '</span>';\n    } else {\n      text = _.escape(text.value);\n    }\n    return text;\n  }\n\n  private handleSubscriptionCreated(args: ISearchAlertsEventArgs) {\n    this.close();\n    if (args.dom != null) {\n      if (args.subscription.type == SUBSCRIPTION_TYPE.followQuery) {\n        let typeConfig = <ISubscriptionQueryRequest>args.subscription.typeConfig;\n        this.showMessage($$(args.dom), l('SubscriptionsMessageFollowQuery', this.getFollowQueryMessage(typeConfig.query.q, true)), false);\n      } else {\n        this.showMessage($$(args.dom), l('SubscriptionsMessageFollow'), false);\n      }\n    }\n  }\n\n  private handleSearchAlertsFail(args: ISearchAlertsFailEventArgs) {\n    this.close();\n    if (args.dom != null) {\n      this.showMessage($$(args.dom), l('SearchAlerts_Fail'), true);\n    }\n  }\n\n  private startCloseDelay() {\n    clearTimeout(this.closeTimeout);\n    this.closeTimeout = window.setTimeout(() => {\n      this.close();\n    }, this.options.closeDelay);\n  }\n\n  private stopCloseDelay() {\n    clearTimeout(this.closeTimeout);\n  }\n\n  private close() {\n    if (this.message != null) {\n      clearTimeout(this.closeTimeout);\n      this.message.remove();\n      this.message = null;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/SearchAlerts/SearchAlertsMessage.ts"],"sourceRoot":""}