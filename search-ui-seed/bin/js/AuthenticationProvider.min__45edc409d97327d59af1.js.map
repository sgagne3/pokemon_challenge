{"version":3,"sources":["AuthenticationProvider.min__45edc409d97327d59af1.js","./src/ui/AuthenticationProvider/AuthenticationProvider.ts"],"names":["webpackJsonpCoveo__temporary","236","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","_window","AuthenticationProvider","ID","ComponentOptions","initComponentOptions","Assert","exists","name","handlers","window","redirectCount","bind","onRootElement","QueryEvents","buildingCallOptions","handleBuildingCallOptions","queryError","handleQueryError","InitializationEvents","nuke","handleNuke","SettingsEvents","settingsPopulateMenu","args","menuData","push","text","l","caption","className","onOpen","authenticateWithProvider","svgIcon","SVGIcons","icons","dropdownAuthenticate","svgIconClassName","_this","authentication","missingAuthError","error","isMissingAuthentication","provider","logger","useIFrame","authenticateWithIFrame","redirectToAuthenticationProvider","info","location","href","getAuthenticationProviderUriForRedirect","modalbox","iframe","$$","src","getAuthenticationProviderUriForIFrame","el","showIFrame","createPopupForVisibleIFrame","createPopupForWaitMessage","handler","createHandler","one","detach","close","queryController","executeQuery","_","each","off","popup","DomUtils","getBasicLoadingAnimation","hide","document","body","appendChild","ModalBox","open","title","sizeMod","searchInterface","modalContainer","addClass","getEndpoint","getAuthenticationProviderUri","undefined","doExport","exportGlobally","buildStringOption","postProcessing","buildBooleanOption","defaultValue","alias","depend","Component","Initialization","registerAutoCreateComponent","595"],"mappings":"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","file":"AuthenticationProvider.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([76],{\n\n/***/ 236:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Assert_1 = __webpack_require__(5);\nvar QueryEvents_1 = __webpack_require__(11);\nvar InitializationEvents_1 = __webpack_require__(17);\nvar SettingsEvents_1 = __webpack_require__(53);\nvar DomUtils_1 = __webpack_require__(91);\nvar Dom_1 = __webpack_require__(1);\nvar Initialization_1 = __webpack_require__(2);\nvar Strings_1 = __webpack_require__(6);\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar _ = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(595);\nvar SVGIcons_1 = __webpack_require__(12);\n/**\n * The `AuthenticationProvider` component makes it possible to execute queries with an identity that the end user\n * can obtain using an authentication provider configured on the Coveo REST Search API\n * (see [Claims Authentication](https://docs.coveo.com/en/113/)).\n *\n * When necessary, this component handles redirecting the browser to the address that starts the authentication process.\n *\n * You can use the `data-tab` attribute to enable the `AuthenticationProvider` component only for the tabs of your\n * search interface that require authentication (see the [`Tab`]{@link Tab} component).\n */\nvar AuthenticationProvider = /** @class */ (function (_super) {\n    __extends(AuthenticationProvider, _super);\n    /**\n     * Creates a new `AuthenticationProvider` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `AuthenticationProvider` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     */\n    function AuthenticationProvider(element, options, bindings, _window) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, element, AuthenticationProvider.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this._window = _window;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, AuthenticationProvider, options);\n        Assert_1.Assert.exists(_this.options.name);\n        _this.handlers = [];\n        _this._window = _this._window || window;\n        _this.redirectCount = 0;\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingCallOptions, _this.handleBuildingCallOptions);\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.queryError, _this.handleQueryError);\n        _this.bind.onRootElement(InitializationEvents_1.InitializationEvents.nuke, _this.handleNuke);\n        _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\n            args.menuData.push({\n                text: Strings_1.l('Reauthenticate', _this.options.caption),\n                className: 'coveo-authentication-provider',\n                onOpen: function () { return _this.authenticateWithProvider(); },\n                svgIcon: SVGIcons_1.SVGIcons.icons.dropdownAuthenticate,\n                svgIconClassName: 'coveo-authentication-provider-svg'\n            });\n        });\n        return _this;\n    }\n    AuthenticationProvider.prototype.handleBuildingCallOptions = function (args) {\n        args.options.authentication.push(this.options.name);\n    };\n    AuthenticationProvider.prototype.handleQueryError = function (args) {\n        var missingAuthError = args.error;\n        if (missingAuthError.isMissingAuthentication &&\n            missingAuthError.provider === this.options.name &&\n            this.redirectCount < 2 &&\n            this.redirectCount !== -1) {\n            ++this.redirectCount;\n            this.authenticateWithProvider();\n        }\n        else {\n            this.logger.error('The AuthenticationProvider is in a redirect loop. This may be due to a back-end configuration problem.');\n            this.redirectCount = -1;\n        }\n    };\n    AuthenticationProvider.prototype.authenticateWithProvider = function () {\n        this.options.useIFrame ? this.authenticateWithIFrame() : this.redirectToAuthenticationProvider();\n    };\n    AuthenticationProvider.prototype.redirectToAuthenticationProvider = function () {\n        this.logger.info(\"Redirecting to authentication provider \" + this.options.name);\n        this._window.location.href = this.getAuthenticationProviderUriForRedirect();\n    };\n    AuthenticationProvider.prototype.authenticateWithIFrame = function () {\n        this.logger.info(\"Using iframe to retrieve authentication for provider \" + this.options.name);\n        var iframe = Dom_1.$$('iframe', {\n            src: this.getAuthenticationProviderUriForIFrame()\n        }).el;\n        var modalbox;\n        modalbox = this.options.showIFrame ? this.createPopupForVisibleIFrame(iframe) : this.createPopupForWaitMessage(iframe);\n        var handler = this.createHandler(modalbox, iframe);\n        Dom_1.$$(this._window).one('message', handler);\n        this.handlers.push(handler);\n    };\n    AuthenticationProvider.prototype.createHandler = function (modalbox, iframe) {\n        var _this = this;\n        return function () {\n            Dom_1.$$(iframe).detach();\n            _this.logger.info(\"Got authentication for provider \" + _this.options.name + \"; retrying query.\");\n            modalbox.close();\n            _this.queryController.executeQuery();\n        };\n    };\n    AuthenticationProvider.prototype.handleNuke = function () {\n        var _this = this;\n        _.each(this.handlers, function (handler) { return Dom_1.$$(_this._window).off('message', handler); });\n    };\n    AuthenticationProvider.prototype.createPopupForWaitMessage = function (iframe) {\n        var popup = Dom_1.$$('div', {\n            className: 'coveo-waiting-for-authentication-popup'\n        }, DomUtils_1.DomUtils.getBasicLoadingAnimation()).el;\n        Dom_1.$$(iframe).hide();\n        document.body.appendChild(iframe);\n        ExternalModulesShim_1.ModalBox.open(popup, {\n            title: Strings_1.l('Authenticating', this.options.caption),\n            sizeMod: 'small',\n            body: this.searchInterface.options.modalContainer\n        });\n        return ExternalModulesShim_1.ModalBox;\n    };\n    AuthenticationProvider.prototype.createPopupForVisibleIFrame = function (iframe) {\n        Dom_1.$$(iframe).addClass('coveo-authentication-iframe');\n        var popup = Dom_1.$$('div', {}, iframe).el;\n        ExternalModulesShim_1.ModalBox.open(popup, {\n            title: Strings_1.l('Authenticating', this.options.caption),\n            className: 'coveo-authentication-popup',\n            sizeMod: 'big',\n            body: this.searchInterface.options.modalContainer\n        });\n        return ExternalModulesShim_1.ModalBox;\n    };\n    AuthenticationProvider.prototype.getAuthenticationProviderUriForRedirect = function () {\n        return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, this._window.location.href, undefined);\n    };\n    AuthenticationProvider.prototype.getAuthenticationProviderUriForIFrame = function () {\n        return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, undefined, 'success');\n    };\n    AuthenticationProvider.ID = 'AuthenticationProvider';\n    AuthenticationProvider.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            AuthenticationProvider: AuthenticationProvider\n        });\n    };\n    /**\n     * The options for the component.\n     * @componentOptions\n     */\n    AuthenticationProvider.options = {\n        /**\n         * Specifies the name of the authentication provider.\n         *\n         * See [SAML Authentication](https://docs.coveo.com/en/91/).\n         */\n        name: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies the display name of the authentication provider. This is the name that you want to appear in the user\n         * interface when the end user is logging in.\n         *\n         * Default value is the [`name`]{@link AuthenticationProvider.options.name} option value.\n         */\n        caption: ComponentOptions_1.ComponentOptions.buildStringOption({ postProcessing: function (value, options) { return value || options.name; } }),\n        /**\n         * Specifies whether to use an `<iframe>` to host the chain of redirection that make up the authentication\n         * process.\n         *\n         * Using an `<iframe>` prevents leaving the search page as part of the authentication process. However, some login\n         * providers refuse to load in an `<iframe>`.\n         *\n         * Default value is `false`.\n         */\n        useIFrame: ComponentOptions_1.ComponentOptions.buildBooleanOption({\n            defaultValue: false,\n            alias: ['useIframe']\n        }),\n        /**\n         * If the [`useIFrame`]{@link AuthenticationProvider.options.useIFrame} option is `true`, specifies whether to make\n         * the authentication `<iframe>` visible to the user (inside a popup).\n         *\n         * When the underlying authentication provider requires no user interaction (for example, when a user authenticates\n         * using Windows authentication along with SharePoint claims), setting this option to `false` reduces the visual\n         * impact of the authentication process.\n         *\n         * Default value is `true`.\n         */\n        showIFrame: ComponentOptions_1.ComponentOptions.buildBooleanOption({\n            defaultValue: true,\n            alias: ['showIframe'],\n            depend: 'useIFrame'\n        })\n    };\n    return AuthenticationProvider;\n}(Component_1.Component));\nexports.AuthenticationProvider = AuthenticationProvider;\nInitialization_1.Initialization.registerAutoCreateComponent(AuthenticationProvider);\n\n\n/***/ }),\n\n/***/ 595:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// AuthenticationProvider.min__45edc409d97327d59af1.js","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Assert } from '../../misc/Assert';\nimport { QueryEvents, IBuildingCallOptionsEventArgs, IQueryErrorEventArgs } from '../../events/QueryEvents';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { InitializationEvents } from '../../events/InitializationEvents';\nimport { SettingsEvents } from '../../events/SettingsEvents';\nimport { ISettingsPopulateMenuArgs } from '../Settings/Settings';\nimport { DomUtils } from '../../utils/DomUtils';\nimport { $$ } from '../../utils/Dom';\nimport { Initialization } from '../Base/Initialization';\nimport { l } from '../../strings/Strings';\nimport { ModalBox } from '../../ExternalModulesShim';\nimport { MissingAuthenticationError } from '../../rest/MissingAuthenticationError';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\nimport 'styling/_AuthenticationProvider';\nimport { SVGIcons } from '../../utils/SVGIcons';\n\nexport interface IAuthenticationProviderOptions {\n  name?: string;\n  caption?: string;\n  useIFrame?: boolean;\n  showIFrame?: boolean;\n}\n\n/**\n * The `AuthenticationProvider` component makes it possible to execute queries with an identity that the end user\n * can obtain using an authentication provider configured on the Coveo REST Search API\n * (see [Claims Authentication](https://docs.coveo.com/en/113/)).\n *\n * When necessary, this component handles redirecting the browser to the address that starts the authentication process.\n *\n * You can use the `data-tab` attribute to enable the `AuthenticationProvider` component only for the tabs of your\n * search interface that require authentication (see the [`Tab`]{@link Tab} component).\n */\nexport class AuthenticationProvider extends Component {\n  static ID = 'AuthenticationProvider';\n\n  static doExport = () => {\n    exportGlobally({\n      AuthenticationProvider: AuthenticationProvider\n    });\n  };\n\n  /**\n   * The options for the component.\n   * @componentOptions\n   */\n  static options: IAuthenticationProviderOptions = {\n    /**\n     * Specifies the name of the authentication provider.\n     *\n     * See [SAML Authentication](https://docs.coveo.com/en/91/).\n     */\n    name: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies the display name of the authentication provider. This is the name that you want to appear in the user\n     * interface when the end user is logging in.\n     *\n     * Default value is the [`name`]{@link AuthenticationProvider.options.name} option value.\n     */\n    caption: ComponentOptions.buildStringOption({ postProcessing: (value, options) => value || options.name }),\n\n    /**\n     * Specifies whether to use an `<iframe>` to host the chain of redirection that make up the authentication\n     * process.\n     *\n     * Using an `<iframe>` prevents leaving the search page as part of the authentication process. However, some login\n     * providers refuse to load in an `<iframe>`.\n     *\n     * Default value is `false`.\n     */\n    useIFrame: ComponentOptions.buildBooleanOption({\n      defaultValue: false,\n      alias: ['useIframe']\n    }),\n\n    /**\n     * If the [`useIFrame`]{@link AuthenticationProvider.options.useIFrame} option is `true`, specifies whether to make\n     * the authentication `<iframe>` visible to the user (inside a popup).\n     *\n     * When the underlying authentication provider requires no user interaction (for example, when a user authenticates\n     * using Windows authentication along with SharePoint claims), setting this option to `false` reduces the visual\n     * impact of the authentication process.\n     *\n     * Default value is `true`.\n     */\n    showIFrame: ComponentOptions.buildBooleanOption({\n      defaultValue: true,\n      alias: ['showIframe'],\n      depend: 'useIFrame'\n    })\n  };\n\n  private handlers: ((...args: any[]) => void)[];\n  private redirectCount: number;\n\n  /**\n   * Creates a new `AuthenticationProvider` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `AuthenticationProvider` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IAuthenticationProviderOptions = {},\n    bindings?: IComponentBindings,\n    public _window?: Window\n  ) {\n    super(element, AuthenticationProvider.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, AuthenticationProvider, options);\n\n    Assert.exists(this.options.name);\n\n    this.handlers = [];\n\n    this._window = this._window || window;\n    this.redirectCount = 0;\n\n    this.bind.onRootElement(QueryEvents.buildingCallOptions, this.handleBuildingCallOptions);\n    this.bind.onRootElement(QueryEvents.queryError, this.handleQueryError);\n    this.bind.onRootElement(InitializationEvents.nuke, this.handleNuke);\n\n    this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\n      args.menuData.push({\n        text: l('Reauthenticate', this.options.caption),\n        className: 'coveo-authentication-provider',\n        onOpen: () => this.authenticateWithProvider(),\n        svgIcon: SVGIcons.icons.dropdownAuthenticate,\n        svgIconClassName: 'coveo-authentication-provider-svg'\n      });\n    });\n  }\n\n  private handleBuildingCallOptions(args: IBuildingCallOptionsEventArgs) {\n    args.options.authentication.push(this.options.name);\n  }\n\n  private handleQueryError(args: IQueryErrorEventArgs) {\n    let missingAuthError = <MissingAuthenticationError>args.error;\n\n    if (\n      missingAuthError.isMissingAuthentication &&\n      missingAuthError.provider === this.options.name &&\n      this.redirectCount < 2 &&\n      this.redirectCount !== -1\n    ) {\n      ++this.redirectCount;\n      this.authenticateWithProvider();\n    } else {\n      this.logger.error('The AuthenticationProvider is in a redirect loop. This may be due to a back-end configuration problem.');\n      this.redirectCount = -1;\n    }\n  }\n\n  private authenticateWithProvider() {\n    this.options.useIFrame ? this.authenticateWithIFrame() : this.redirectToAuthenticationProvider();\n  }\n\n  private redirectToAuthenticationProvider() {\n    this.logger.info(`Redirecting to authentication provider ${this.options.name}`);\n    this._window.location.href = this.getAuthenticationProviderUriForRedirect();\n  }\n\n  private authenticateWithIFrame() {\n    this.logger.info(`Using iframe to retrieve authentication for provider ${this.options.name}`);\n\n    let iframe = $$('iframe', {\n      src: this.getAuthenticationProviderUriForIFrame()\n    }).el;\n\n    let modalbox: Coveo.ModalBox.ModalBox;\n    modalbox = this.options.showIFrame ? this.createPopupForVisibleIFrame(iframe) : this.createPopupForWaitMessage(iframe);\n\n    let handler = this.createHandler(modalbox, iframe);\n    $$(<any>this._window).one('message', handler);\n    this.handlers.push(handler);\n  }\n\n  private createHandler(modalbox: Coveo.ModalBox.ModalBox, iframe: HTMLElement): () => void {\n    return () => {\n      $$(iframe).detach();\n      this.logger.info(`Got authentication for provider ${this.options.name}; retrying query.`);\n      modalbox.close();\n      this.queryController.executeQuery();\n    };\n  }\n\n  private handleNuke() {\n    _.each(this.handlers, handler => $$(<any>this._window).off('message', handler));\n  }\n\n  private createPopupForWaitMessage(iframe: HTMLElement): Coveo.ModalBox.ModalBox {\n    let popup = $$(\n      'div',\n      {\n        className: 'coveo-waiting-for-authentication-popup'\n      },\n      DomUtils.getBasicLoadingAnimation()\n    ).el;\n\n    $$(iframe).hide();\n    document.body.appendChild(iframe);\n\n    ModalBox.open(popup, {\n      title: l('Authenticating', this.options.caption),\n      sizeMod: 'small',\n      body: this.searchInterface.options.modalContainer\n    });\n    return ModalBox;\n  }\n\n  private createPopupForVisibleIFrame(iframe: HTMLElement): Coveo.ModalBox.ModalBox {\n    $$(iframe).addClass('coveo-authentication-iframe');\n    let popup = $$('div', {}, iframe).el;\n\n    ModalBox.open(popup, {\n      title: l('Authenticating', this.options.caption),\n      className: 'coveo-authentication-popup',\n      sizeMod: 'big',\n      body: this.searchInterface.options.modalContainer\n    });\n    return ModalBox;\n  }\n\n  private getAuthenticationProviderUriForRedirect(): string {\n    return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, this._window.location.href, undefined);\n  }\n\n  private getAuthenticationProviderUriForIFrame(): string {\n    return this.queryController.getEndpoint().getAuthenticationProviderUri(this.options.name, undefined, 'success');\n  }\n}\n\nInitialization.registerAutoCreateComponent(AuthenticationProvider);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/AuthenticationProvider/AuthenticationProvider.ts"],"sourceRoot":""}