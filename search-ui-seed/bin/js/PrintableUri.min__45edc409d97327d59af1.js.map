{"version":3,"sources":["PrintableUri.min__45edc409d97327d59af1.js","./src/ui/PrintableUri/PrintableUri.ts","./src/ui/ResultLink/ResultLink.ts"],"names":["webpackJsonpCoveo__temporary","263","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","defineProperty","value","element","options","bindings","result","PrintableUri","ID","links","ComponentOptions","initComponentOptions","_","extend","componentOptionsModel","get","ComponentOptionsModel","attributesEnum","resultLink","renderUri","addAccessibilityAttributes","_this","openLink","logAnalytics","last","openLinkInNewWindow","openLinkAsConfigured","parentsXml","Utils","getFieldValue","renderParents","parents","parseXmlParents","firstIndexToRender","maxNumOfParts","DeviceUtils","isMobileDevice","titleTemplate","link","ResultLink","buildElementForResultLink","printableUri","push","appendChild","makeLinkAccessible","renderShortenedUri","buildSeparator","$$","className","role","el","buildHtmlToken","name","uri","modifiedName","charAt","toUpperCase","slice","resultPart","clickUri","title","titleHighlights","getModifiedHighlightsForModifiedResultTitle","elements","parseXml","getElementsByTagName","item","renderOptions","empty","lastIndex","beforeLastIndex","maxMiddleParts","lastMiddlePartIndex","Math","min","partsBetweenMiddlePartsAndLastPart","optionallyRenderFirstEllipsis","renderMiddleParts","renderLastEllipsis","max","renderLastPart","nextRenderOptions","appendEllipsis","appendSeparator","lastIndexToRender","appendToken","buildEllipsis","firstChild","focus","part","getAttribute","stringAndHoles","indexOf","StringAndHoles","shortenUri","width","shortenPath","shortenedUri","HighlightUtils","highlightString","printableUriHighlights","holes","action","button","AccessibleButton","withElement","withLabel","l","withSelectAction","build","newTitle","getRestHighlightsForAllTerms","termsToHighlight","phrasesToHighlight","DefaultStreamHighlightOptions","setAttribute","doExport","exportGlobally","Component","Initialization","registerAutoCreateComponent","532","633","92","os","logOpenDocument","debounce","queryController","saveLastQuery","documentURL","undefined","escapedClickUri","usageAnalytics","logClickEvent","analyticsActionCauseList","documentOpen","documentTitle","author","root","Defer","flush","initialOptions","resultLinkOptions","resolveResult","openQuickview","raw","Assert","exists","quickviewShouldBeOpened","once","on","window","setTimeout","clearTimeout","bindEventToOpen","test","innerHTML","getDisplayedTitle","getDisplayedTitleAsText","location","href","getResultUri","open","openLinkInOutlook","hasOutlookField","toExecuteOnOpen","bindOnClickIfNotUndefined","bindOpenQuickviewIfNotUndefined","setHrefIfNotAlready","openLinkThatIsNotAnAnchor","StringUtils","buildStringTemplateFromResult","StreamHighlightUtils","highlightStreamText","container","setHtml","text","escape","enumerable","configurable","onClick","e","resultElement","trigger","ResultListEvents","preventDefault","elementIsAnAnchor","alwaysOpenInNewWindow","openInOutlook","isNonEmptyString","filterProtocol","isAbsolute","isRelative","hrefTemplate","field","setField","tagName","OSUtils","OS_NAME","MACOSX","WINDOWS","isUriThatMustBeOpenedInQuickview","toLowerCase","QueryUtils","hasHTMLVersion","buildFieldOption","buildBooleanOption","defaultValue","buildStringOption","buildCustomOption"],"mappings":"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","file":"PrintableUri.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([35,63],{\n\n/***/ 263:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ComponentOptions_1 = __webpack_require__(8);\nvar HighlightUtils_1 = __webpack_require__(68);\nvar Initialization_1 = __webpack_require__(2);\nvar Utils_1 = __webpack_require__(4);\nvar Dom_1 = __webpack_require__(1);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(633);\nvar ResultLink_1 = __webpack_require__(92);\nvar StreamHighlightUtils_1 = __webpack_require__(114);\nvar _ = __webpack_require__(0);\nvar ComponentOptionsModel_1 = __webpack_require__(28);\nvar Component_1 = __webpack_require__(7);\nvar AccessibleButton_1 = __webpack_require__(15);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar Strings_1 = __webpack_require__(6);\n/**\n * The `PrintableUri` component inherits from the [ `ResultLink` ]{@link ResultLink} component and supports all of its options.\n *\n * This component displays the URI, or path, to access a result.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar PrintableUri = /** @class */ (function (_super) {\n    __extends(PrintableUri, _super);\n    /**\n     * Creates a new PrintableUri.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the PrintableUri component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     */\n    function PrintableUri(element, options, bindings, result) {\n        var _this = _super.call(this, element, PrintableUri.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.links = [];\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, PrintableUri, options);\n        _this.options = _.extend({}, _this.options, _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink));\n        _this.renderUri(_this.result);\n        _this.addAccessibilityAttributes();\n        return _this;\n    }\n    /**\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    PrintableUri.prototype.openLink = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        _.last(this.links).openLink(logAnalytics);\n    };\n    /**\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    PrintableUri.prototype.openLinkInNewWindow = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        _.last(this.links).openLinkInNewWindow(logAnalytics);\n    };\n    /**\n     * Opens the link in the same manner the end user would.\n     *\n     * This essentially simulates a click on the result link.\n     *\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    PrintableUri.prototype.openLinkAsConfigured = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        _.last(this.links).openLinkAsConfigured(logAnalytics);\n    };\n    PrintableUri.prototype.renderUri = function (result) {\n        var parentsXml = Utils_1.Utils.getFieldValue(result, 'parents');\n        if (parentsXml) {\n            this.renderParents({\n                parents: this.parseXmlParents(parentsXml),\n                firstIndexToRender: 0,\n                maxNumOfParts: DeviceUtils_1.DeviceUtils.isMobileDevice() ? 3 : 5\n            });\n        }\n        else if (this.options.titleTemplate) {\n            var link = new ResultLink_1.ResultLink(this.buildElementForResultLink(result.printableUri), this.options, this.bindings, this.result);\n            this.links.push(link);\n            this.element.appendChild(this.makeLinkAccessible(link.element));\n        }\n        else {\n            this.renderShortenedUri();\n        }\n    };\n    PrintableUri.prototype.buildSeparator = function () {\n        var separator = Dom_1.$$('span', { className: 'coveo-printable-uri-separator', role: 'separator' }, ' > ');\n        return separator.el;\n    };\n    PrintableUri.prototype.buildHtmlToken = function (name, uri) {\n        var modifiedName = name.charAt(0).toUpperCase() + name.slice(1);\n        var resultPart = _.extend({}, this.result, {\n            clickUri: uri,\n            title: modifiedName,\n            titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(modifiedName)\n        });\n        var link = new ResultLink_1.ResultLink(this.buildElementForResultLink(modifiedName), this.options, this.bindings, resultPart);\n        this.links.push(link);\n        return link.element;\n    };\n    PrintableUri.prototype.parseXmlParents = function (parentsXml) {\n        var elements = Utils_1.Utils.parseXml(parentsXml).getElementsByTagName('parent');\n        var parents = [];\n        for (var i = 0; i < elements.length; i++) {\n            parents.push(elements.item(i));\n        }\n        return parents;\n    };\n    PrintableUri.prototype.renderParents = function (renderOptions) {\n        Dom_1.$$(this.element).empty();\n        var lastIndex = renderOptions.parents.length - 1;\n        var beforeLastIndex = lastIndex - 1;\n        var maxMiddleParts = renderOptions.maxNumOfParts - 1;\n        var lastMiddlePartIndex = Math.min(beforeLastIndex, renderOptions.firstIndexToRender + maxMiddleParts - 1);\n        var partsBetweenMiddlePartsAndLastPart = beforeLastIndex - lastMiddlePartIndex;\n        this.optionallyRenderFirstEllipsis(renderOptions);\n        this.renderMiddleParts(renderOptions, lastMiddlePartIndex);\n        if (partsBetweenMiddlePartsAndLastPart > 0) {\n            this.renderLastEllipsis(__assign({}, renderOptions, { firstIndexToRender: Math.min(Math.max(lastMiddlePartIndex + 1, 0), renderOptions.parents.length - renderOptions.maxNumOfParts) }));\n        }\n        this.renderLastPart(renderOptions);\n    };\n    PrintableUri.prototype.optionallyRenderFirstEllipsis = function (nextRenderOptions) {\n        if (nextRenderOptions.firstIndexToRender > 0) {\n            this.appendEllipsis(__assign({}, nextRenderOptions, { firstIndexToRender: Math.max(0, nextRenderOptions.firstIndexToRender - nextRenderOptions.maxNumOfParts + 1) }));\n            this.appendSeparator();\n        }\n    };\n    PrintableUri.prototype.renderMiddleParts = function (renderOptions, lastIndexToRender) {\n        for (var i = renderOptions.firstIndexToRender; i <= lastIndexToRender; i++) {\n            if (i > renderOptions.firstIndexToRender) {\n                this.appendSeparator();\n            }\n            this.appendToken(renderOptions.parents[i]);\n        }\n    };\n    PrintableUri.prototype.renderLastEllipsis = function (nextRenderOptions) {\n        this.appendSeparator();\n        this.appendEllipsis(nextRenderOptions);\n    };\n    PrintableUri.prototype.renderLastPart = function (renderOptions) {\n        this.appendSeparator();\n        this.appendToken(renderOptions.parents[renderOptions.parents.length - 1]);\n    };\n    PrintableUri.prototype.appendSeparator = function () {\n        this.element.appendChild(this.buildSeparator());\n    };\n    PrintableUri.prototype.appendEllipsis = function (nextRenderOptions) {\n        var _this = this;\n        this.element.appendChild(this.buildEllipsis(function () {\n            _this.renderParents(nextRenderOptions);\n            _this.element.firstChild.firstChild.focus();\n        }));\n    };\n    PrintableUri.prototype.appendToken = function (part) {\n        this.element.appendChild(this.makeLinkAccessible(this.buildHtmlToken(part.getAttribute('name'), part.getAttribute('uri'))));\n    };\n    PrintableUri.prototype.renderShortenedUri = function () {\n        var stringAndHoles;\n        if (this.result.printableUri.indexOf('\\\\') == -1) {\n            stringAndHoles = HighlightUtils_1.StringAndHoles.shortenUri(this.result.printableUri, Dom_1.$$(this.element).width());\n        }\n        else {\n            stringAndHoles = HighlightUtils_1.StringAndHoles.shortenPath(this.result.printableUri, Dom_1.$$(this.element).width());\n        }\n        var shortenedUri = HighlightUtils_1.HighlightUtils.highlightString(stringAndHoles.value, this.result.printableUriHighlights, stringAndHoles.holes, 'coveo-highlight');\n        var resultPart = _.extend({}, this.result, {\n            title: shortenedUri,\n            titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(shortenedUri)\n        });\n        var link = new ResultLink_1.ResultLink(this.buildElementForResultLink(this.result.printableUri), this.options, this.bindings, resultPart);\n        this.links.push(link);\n        this.element.appendChild(this.makeLinkAccessible(link.element));\n    };\n    PrintableUri.prototype.makeLinkAccessible = function (link) {\n        return Dom_1.$$('span', {\n            className: 'coveo-printable-uri-part',\n            role: 'listitem'\n        }, link).el;\n    };\n    PrintableUri.prototype.buildEllipsis = function (action) {\n        var button = Dom_1.$$('button', {}, '...');\n        var element = Dom_1.$$('span', {\n            className: 'coveo-printable-uri-ellipsis',\n            role: 'listitem'\n        }, button).el;\n        new AccessibleButton_1.AccessibleButton()\n            .withElement(button)\n            .withLabel(Strings_1.l('CollapsedUriParts'))\n            .withSelectAction(action)\n            .build();\n        return element;\n    };\n    PrintableUri.prototype.buildElementForResultLink = function (title) {\n        return Dom_1.$$('a', {\n            className: 'CoveoResultLink',\n            title: title\n        }).el;\n    };\n    PrintableUri.prototype.getModifiedHighlightsForModifiedResultTitle = function (newTitle) {\n        return StreamHighlightUtils_1.getRestHighlightsForAllTerms(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight, new StreamHighlightUtils_1.DefaultStreamHighlightOptions());\n    };\n    PrintableUri.prototype.addAccessibilityAttributes = function () {\n        this.element.setAttribute('role', 'list');\n    };\n    PrintableUri.ID = 'PrintableUri';\n    PrintableUri.options = {};\n    PrintableUri.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            PrintableUri: PrintableUri\n        });\n    };\n    return PrintableUri;\n}(Component_1.Component));\nexports.PrintableUri = PrintableUri;\nPrintableUri.options = _.extend({}, PrintableUri.options, ResultLink_1.ResultLink.options);\nInitialization_1.Initialization.registerAutoCreateComponent(PrintableUri);\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 633:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar ComponentOptionsModel_1 = __webpack_require__(28);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar HighlightUtils_1 = __webpack_require__(68);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar OSUtils_1 = __webpack_require__(181);\nvar Initialization_1 = __webpack_require__(2);\nvar QueryUtils_1 = __webpack_require__(21);\nvar Assert_1 = __webpack_require__(5);\nvar Utils_1 = __webpack_require__(4);\nvar Defer_1 = __webpack_require__(31);\nvar Dom_1 = __webpack_require__(1);\nvar StreamHighlightUtils_1 = __webpack_require__(114);\nvar StringUtils_1 = __webpack_require__(22);\nvar underscore_1 = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(532);\nvar AccessibleButton_1 = __webpack_require__(15);\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar ResultLink = /** @class */ (function (_super) {\n    __extends(ResultLink, _super);\n    /**\n     * Creates a new `ResultLink` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `ResultLink` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param os\n     */\n    function ResultLink(element, options, bindings, result, os) {\n        var _this = _super.call(this, element, ResultLink.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.os = os;\n        _this.logOpenDocument = underscore_1.debounce(function () {\n            _this.queryController.saveLastQuery();\n            var documentURL = Dom_1.$$(_this.element).getAttribute('href');\n            if (documentURL == undefined || documentURL == '') {\n                documentURL = _this.escapedClickUri;\n            }\n            _this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentOpen, {\n                documentURL: documentURL,\n                documentTitle: _this.result.title,\n                author: Utils_1.Utils.getFieldValue(_this.result, 'author')\n            }, _this.result, _this.root);\n            Defer_1.Defer.flush();\n        }, 1500, true);\n        var initialOptions = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultLink, options);\n        var resultLinkOptions = _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink);\n        _this.options = underscore_1.extend({}, initialOptions, resultLinkOptions);\n        _this.result = result || _this.resolveResult();\n        if (_this.options.openQuickview == null) {\n            _this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils_1.DeviceUtils.isMobileDevice();\n        }\n        _this.element.setAttribute('tabindex', '0');\n        Assert_1.Assert.exists(_this.componentOptionsModel);\n        Assert_1.Assert.exists(_this.result);\n        if (!_this.quickviewShouldBeOpened()) {\n            // Bind on multiple \"click\" or \"mouse\" events.\n            // Create a function that will be executed only once, so as not to log multiple events\n            // Once a result link has been opened, and that we log at least one analytics event,\n            // it should not matter if the end user open the same link multiple times with different methods.\n            // It's still only one \"click\" event as far as UA is concerned.\n            // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n            var executeOnlyOnce_1 = underscore_1.once(function () { return _this.logOpenDocument(); });\n            Dom_1.$$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce_1);\n            var longPressTimer_1;\n            Dom_1.$$(element).on('touchstart', function () {\n                longPressTimer_1 = window.setTimeout(executeOnlyOnce_1, 1000);\n            });\n            Dom_1.$$(element).on('touchend', function () {\n                if (longPressTimer_1) {\n                    clearTimeout(longPressTimer_1);\n                }\n            });\n        }\n        _this.renderUri(element, result);\n        _this.bindEventToOpen();\n        return _this;\n    }\n    ResultLink.prototype.renderUri = function (element, result) {\n        if (/^\\s*$/.test(this.element.innerHTML)) {\n            var title = this.getDisplayedTitle();\n            this.element.innerHTML = title;\n            if (!this.element.title) {\n                this.element.title = this.getDisplayedTitleAsText();\n            }\n        }\n    };\n    /**\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLink = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logOpenDocument();\n        }\n        window.location.href = this.getResultUri();\n    };\n    /**\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInNewWindow = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logOpenDocument();\n        }\n        window.open(this.getResultUri(), '_blank');\n    };\n    /**\n     * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n     *\n     * Normally, this implies the result should be a link to an email.\n     *\n     * If the needed fields are not present, this method does nothing.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInOutlook = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.hasOutlookField()) {\n            if (logAnalytics) {\n                this.logOpenDocument();\n            }\n            this.openLink();\n        }\n    };\n    /**\n     * Opens the link in the same manner the end user would.\n     *\n     * This essentially simulates a click on the result link.\n     *\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkAsConfigured = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.toExecuteOnOpen) {\n            if (logAnalytics) {\n                this.logOpenDocument();\n            }\n            this.toExecuteOnOpen();\n        }\n    };\n    ResultLink.prototype.bindEventToOpen = function () {\n        return (this.bindOnClickIfNotUndefined() ||\n            this.bindOpenQuickviewIfNotUndefined() ||\n            this.setHrefIfNotAlready() ||\n            this.openLinkThatIsNotAnAnchor());\n    };\n    ResultLink.prototype.getDisplayedTitle = function () {\n        if (!this.options.titleTemplate) {\n            return this.result.title\n                ? HighlightUtils_1.HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n                : this.escapedClickUri;\n        }\n        else {\n            var newTitle = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n            return newTitle\n                ? StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n                : this.escapedClickUri;\n        }\n    };\n    ResultLink.prototype.getDisplayedTitleAsText = function () {\n        var container = Dom_1.$$('div');\n        container.setHtml(this.getDisplayedTitle());\n        return container.text();\n    };\n    Object.defineProperty(ResultLink.prototype, \"escapedClickUri\", {\n        get: function () {\n            return underscore_1.escape(this.result.clickUri);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultLink.prototype.bindOnClickIfNotUndefined = function () {\n        var _this = this;\n        if (this.options.onClick != undefined) {\n            this.toExecuteOnOpen = function (e) {\n                _this.options.onClick.call(_this, e, _this.result);\n            };\n            new AccessibleButton_1.AccessibleButton()\n                .withElement(this.element)\n                .withLabel(this.result.title)\n                .withSelectAction(function (e) { return _this.toExecuteOnOpen(e); })\n                .build();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.bindOpenQuickviewIfNotUndefined = function () {\n        var _this = this;\n        if (this.quickviewShouldBeOpened()) {\n            this.toExecuteOnOpen = function () {\n                Dom_1.$$(_this.bindings.resultElement).trigger(ResultListEvents_1.ResultListEvents.openQuickview);\n            };\n            Dom_1.$$(this.element).on('click', function (e) {\n                e.preventDefault();\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.openLinkThatIsNotAnAnchor = function () {\n        var _this = this;\n        if (!this.elementIsAnAnchor()) {\n            this.toExecuteOnOpen = function () {\n                if (_this.options.alwaysOpenInNewWindow) {\n                    if (_this.options.openInOutlook) {\n                        _this.openLinkInOutlook();\n                    }\n                    else {\n                        _this.openLinkInNewWindow();\n                    }\n                }\n                else {\n                    _this.openLink();\n                }\n            };\n            Dom_1.$$(this.element).on('click', function () {\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.setHrefIfNotAlready = function () {\n        // Do not erase any value put in href by the template, etc. Allows\n        // using custom click urls while still keeping analytics recording\n        // and other behavior brought by the component.\n        if (this.elementIsAnAnchor() && !Utils_1.Utils.isNonEmptyString(Dom_1.$$(this.element).getAttribute('href'))) {\n            Dom_1.$$(this.element).setAttribute('href', this.getResultUri());\n            if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n                Dom_1.$$(this.element).setAttribute('target', '_blank');\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.filterProtocol = function (uri) {\n        var isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n        var isRelative = /^\\//.test(uri);\n        return isAbsolute || isRelative ? uri : '';\n    };\n    ResultLink.prototype.getResultUri = function () {\n        if (this.options.hrefTemplate) {\n            var uri = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n            return this.filterProtocol(uri);\n        }\n        if (this.options.field == undefined && this.options.openInOutlook) {\n            this.setField();\n        }\n        if (this.options.field != undefined) {\n            return this.filterProtocol(Utils_1.Utils.getFieldValue(this.result, this.options.field));\n        }\n        return this.filterProtocol(this.result.clickUri);\n    };\n    ResultLink.prototype.elementIsAnAnchor = function () {\n        return this.element.tagName == 'A';\n    };\n    ResultLink.prototype.setField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.hasOutlookField()) {\n            this.options.field = '@outlookformacuri';\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.hasOutlookField()) {\n            this.options.field = '@outlookuri';\n        }\n    };\n    ResultLink.prototype.hasOutlookField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n            return true;\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.isUriThatMustBeOpenedInQuickview = function () {\n        return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n    };\n    ResultLink.prototype.quickviewShouldBeOpened = function () {\n        return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils_1.QueryUtils.hasHTMLVersion(this.result);\n    };\n    ResultLink.ID = 'ResultLink';\n    ResultLink.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            ResultLink: ResultLink\n        });\n    };\n    /**\n     * The options for the ResultLink\n     * @componentOptions\n     */\n    ResultLink.options = {\n        /**\n         * Specifies the field to use to output the component `href` attribute value.\n         *\n         * **Tip:**\n         * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n         * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n         *\n         * **Examples:**\n         * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n         * default field):\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n         * ```\n         *\n         * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n         *\n         * ```html\n         * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n         *   <div class='CoveoIcon>'></div>\n         *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n         *   <div class=\"CoveoExcerpt\"></div>\n         * </script>\n         * ```\n         *\n         * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n         *\n         * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n         */\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption(),\n        /**\n         * Specifies whether the component should try to open its link in Microsoft Outlook.\n         *\n         * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * Default value is `false`.\n         */\n        openInOutlook: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n         * loading through the original URL.\n         *\n         * Default value is `false`.\n         */\n        openQuickview: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in a new window instead of opening it in the current\n         * context.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * **Note:**\n         * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n         * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n         * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n         * > open their links in a new window when the end user clicks them, no matter what the value of their\n         * > `alwaysOpenInNewWindow` option is.\n         *\n         * Default value is `false`.\n         */\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n         *\n         * The template literal can reference any number of fields from the parent result. It can also reference global\n         * scope properties.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n         * ```\n         *\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n         * ```\n         *\n         * Default value is `undefined`.\n         */\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` display title (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the default `ResultLink` display title behavior.\n         *\n         * The template literal can reference any number of fields from the parent result. However, if the template literal\n         * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n         * name of this key instead.\n         *\n         * This option is ignored if the `ResultLink` innerHTML contains any value.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n         * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n         * ```\n         *\n         * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n         * in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n         * ```\n         *\n         * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n         * not empty:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n         * ```\n         *\n         * Default value is `undefined`.\n         *\n         * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n         */\n        titleTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n         *\n         * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n         * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n         *\n         * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n         *\n         * **Note:**\n         * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n         * > [`init`]{@link init} call of your search interface (see\n         * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n         * > or before the `init` call, using the `options` top-level function (see\n         * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n         *\n         * **Example:**\n         * ```javascript\n         * // You can set the option in the 'init' call:\n         * Coveo.init(document.querySelector(\"#search\"), {\n         *   ResultLink : {\n         *     onClick : function(e, result) {\n         *       e.preventDefault();\n         *       // Custom code to execute with the item URI and title.\n         *       openUriInASpecialTab(result.clickUri, result.title);\n         *     }\n         *   }\n         * });\n         *\n         * // Or before the 'init' call, using the 'options' top-level function:\n         * // Coveo.options(document.querySelector('#search'), {\n         * //   ResultLink : {\n         * //     onClick : function(e, result) {\n         * //       e.preventDefault();\n         * //       // Custom code to execute with the item URI and title.\n         * //       openUriInASpecialTab(result.clickUri, result.title);\n         * //     }\n         * //   }\n         * // });\n         * ```\n         */\n        onClick: ComponentOptions_1.ComponentOptions.buildCustomOption(function () {\n            return null;\n        })\n    };\n    return ResultLink;\n}(Component_1.Component));\nexports.ResultLink = ResultLink;\nInitialization_1.Initialization.registerAutoCreateComponent(ResultLink);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// PrintableUri.min__45edc409d97327d59af1.js","import { ComponentOptions } from '../Base/ComponentOptions';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { HighlightUtils, StringAndHoles } from '../../utils/HighlightUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { Utils } from '../../utils/Utils';\nimport { $$ } from '../../utils/Dom';\nimport { exportGlobally } from '../../GlobalExports';\nimport 'styling/_PrintableUri';\nimport { ResultLink } from '../ResultLink/ResultLink';\nimport { IResultLinkOptions } from '../ResultLink/ResultLinkOptions';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { getRestHighlightsForAllTerms, DefaultStreamHighlightOptions } from '../../utils/StreamHighlightUtils';\nimport * as _ from 'underscore';\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\nimport { Component } from '../Base/Component';\nimport { IHighlight } from '../../rest/Highlight';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { l } from '../../strings/Strings';\n\nexport interface IPrintableUriOptions extends IResultLinkOptions {}\n\ninterface IPrintableUriRenderOptions {\n  parents: Element[];\n  firstIndexToRender: number;\n  maxNumOfParts: number;\n}\n\n/**\n * The `PrintableUri` component inherits from the [ `ResultLink` ]{@link ResultLink} component and supports all of its options.\n *\n * This component displays the URI, or path, to access a result.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class PrintableUri extends Component {\n  static ID = 'PrintableUri';\n  static options: IPrintableUriOptions = {};\n  static doExport = () => {\n    exportGlobally({\n      PrintableUri: PrintableUri\n    });\n  };\n\n  private links: ResultLink[] = [];\n\n  /**\n   * Creates a new PrintableUri.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the PrintableUri component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IPrintableUriOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult\n  ) {\n    super(element, PrintableUri.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, PrintableUri, options);\n    this.options = _.extend({}, this.options, this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink));\n    this.renderUri(this.result);\n    this.addAccessibilityAttributes();\n  }\n\n  /**\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLink(logAnalytics = true) {\n    _.last(this.links).openLink(logAnalytics);\n  }\n\n  /**\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInNewWindow(logAnalytics = true) {\n    _.last(this.links).openLinkInNewWindow(logAnalytics);\n  }\n\n  /**\n   * Opens the link in the same manner the end user would.\n   *\n   * This essentially simulates a click on the result link.\n   *\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkAsConfigured(logAnalytics = true) {\n    _.last(this.links).openLinkAsConfigured(logAnalytics);\n  }\n\n  private renderUri(result: IQueryResult) {\n    const parentsXml = Utils.getFieldValue(result, 'parents');\n    if (parentsXml) {\n      this.renderParents({\n        parents: this.parseXmlParents(parentsXml),\n        firstIndexToRender: 0,\n        maxNumOfParts: DeviceUtils.isMobileDevice() ? 3 : 5\n      });\n    } else if (this.options.titleTemplate) {\n      const link = new ResultLink(this.buildElementForResultLink(result.printableUri), this.options, this.bindings, this.result);\n      this.links.push(link);\n      this.element.appendChild(this.makeLinkAccessible(link.element));\n    } else {\n      this.renderShortenedUri();\n    }\n  }\n\n  private buildSeparator(): HTMLElement {\n    const separator = $$('span', { className: 'coveo-printable-uri-separator', role: 'separator' }, ' > ');\n    return separator.el;\n  }\n\n  private buildHtmlToken(name: string, uri: string): HTMLElement {\n    let modifiedName = name.charAt(0).toUpperCase() + name.slice(1);\n    const resultPart: IQueryResult = _.extend({}, this.result, {\n      clickUri: uri,\n      title: modifiedName,\n      titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(modifiedName)\n    });\n    const link = new ResultLink(this.buildElementForResultLink(modifiedName), this.options, this.bindings, resultPart);\n    this.links.push(link);\n    return link.element;\n  }\n\n  private parseXmlParents(parentsXml: string): Element[] {\n    const elements = Utils.parseXml(parentsXml).getElementsByTagName('parent');\n    const parents: Element[] = [];\n    for (let i = 0; i < elements.length; i++) {\n      parents.push(elements.item(i));\n    }\n    return parents;\n  }\n\n  private renderParents(renderOptions: IPrintableUriRenderOptions) {\n    $$(this.element).empty();\n    const lastIndex = renderOptions.parents.length - 1;\n    const beforeLastIndex = lastIndex - 1;\n    const maxMiddleParts = renderOptions.maxNumOfParts - 1;\n    const lastMiddlePartIndex = Math.min(beforeLastIndex, renderOptions.firstIndexToRender + maxMiddleParts - 1);\n    const partsBetweenMiddlePartsAndLastPart = beforeLastIndex - lastMiddlePartIndex;\n\n    this.optionallyRenderFirstEllipsis(renderOptions);\n    this.renderMiddleParts(renderOptions, lastMiddlePartIndex);\n    if (partsBetweenMiddlePartsAndLastPart > 0) {\n      this.renderLastEllipsis({\n        ...renderOptions,\n        firstIndexToRender: Math.min(Math.max(lastMiddlePartIndex + 1, 0), renderOptions.parents.length - renderOptions.maxNumOfParts)\n      });\n    }\n    this.renderLastPart(renderOptions);\n  }\n\n  private optionallyRenderFirstEllipsis(nextRenderOptions: IPrintableUriRenderOptions) {\n    if (nextRenderOptions.firstIndexToRender > 0) {\n      this.appendEllipsis({\n        ...nextRenderOptions,\n        firstIndexToRender: Math.max(0, nextRenderOptions.firstIndexToRender - nextRenderOptions.maxNumOfParts + 1)\n      });\n      this.appendSeparator();\n    }\n  }\n\n  private renderMiddleParts(renderOptions: IPrintableUriRenderOptions, lastIndexToRender: number) {\n    for (let i = renderOptions.firstIndexToRender; i <= lastIndexToRender; i++) {\n      if (i > renderOptions.firstIndexToRender) {\n        this.appendSeparator();\n      }\n      this.appendToken(renderOptions.parents[i]);\n    }\n  }\n\n  private renderLastEllipsis(nextRenderOptions: IPrintableUriRenderOptions) {\n    this.appendSeparator();\n    this.appendEllipsis(nextRenderOptions);\n  }\n\n  private renderLastPart(renderOptions: IPrintableUriRenderOptions) {\n    this.appendSeparator();\n    this.appendToken(renderOptions.parents[renderOptions.parents.length - 1]);\n  }\n\n  private appendSeparator() {\n    this.element.appendChild(this.buildSeparator());\n  }\n\n  private appendEllipsis(nextRenderOptions: IPrintableUriRenderOptions) {\n    this.element.appendChild(\n      this.buildEllipsis(() => {\n        this.renderParents(nextRenderOptions);\n        (this.element.firstChild.firstChild as HTMLElement).focus();\n      })\n    );\n  }\n\n  private appendToken(part: Element) {\n    this.element.appendChild(this.makeLinkAccessible(this.buildHtmlToken(part.getAttribute('name'), part.getAttribute('uri'))));\n  }\n\n  private renderShortenedUri() {\n    let stringAndHoles: StringAndHoles;\n    if (this.result.printableUri.indexOf('\\\\') == -1) {\n      stringAndHoles = StringAndHoles.shortenUri(this.result.printableUri, $$(this.element).width());\n    } else {\n      stringAndHoles = StringAndHoles.shortenPath(this.result.printableUri, $$(this.element).width());\n    }\n    const shortenedUri = HighlightUtils.highlightString(\n      stringAndHoles.value,\n      this.result.printableUriHighlights,\n      stringAndHoles.holes,\n      'coveo-highlight'\n    );\n    const resultPart: IQueryResult = _.extend({}, this.result, {\n      title: shortenedUri,\n      titleHighlights: this.getModifiedHighlightsForModifiedResultTitle(shortenedUri)\n    });\n    const link = new ResultLink(this.buildElementForResultLink(this.result.printableUri), this.options, this.bindings, resultPart);\n    this.links.push(link);\n    this.element.appendChild(this.makeLinkAccessible(link.element));\n  }\n\n  private makeLinkAccessible(link: HTMLElement) {\n    return $$(\n      'span',\n      {\n        className: 'coveo-printable-uri-part',\n        role: 'listitem'\n      },\n      link\n    ).el;\n  }\n\n  private buildEllipsis(action: (e: Event) => void) {\n    const button = $$('button', {}, '...');\n    const element = $$(\n      'span',\n      {\n        className: 'coveo-printable-uri-ellipsis',\n        role: 'listitem'\n      },\n      button\n    ).el;\n    new AccessibleButton()\n      .withElement(button)\n      .withLabel(l('CollapsedUriParts'))\n      .withSelectAction(action)\n      .build();\n    return element;\n  }\n\n  private buildElementForResultLink(title: string): HTMLElement {\n    return $$('a', {\n      className: 'CoveoResultLink',\n      title\n    }).el;\n  }\n\n  private getModifiedHighlightsForModifiedResultTitle(newTitle: string): IHighlight[] {\n    return getRestHighlightsForAllTerms(\n      newTitle,\n      this.result.termsToHighlight,\n      this.result.phrasesToHighlight,\n      new DefaultStreamHighlightOptions()\n    );\n  }\n\n  private addAccessibilityAttributes() {\n    this.element.setAttribute('role', 'list');\n  }\n}\n\nPrintableUri.options = _.extend({}, PrintableUri.options, ResultLink.options);\nInitialization.registerAutoCreateComponent(PrintableUri);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/PrintableUri/PrintableUri.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { IResultLinkOptions } from './ResultLinkOptions';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { HighlightUtils } from '../../utils/HighlightUtils';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { OS_NAME, OSUtils } from '../../utils/OSUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Assert } from '../../misc/Assert';\nimport { Utils } from '../../utils/Utils';\nimport { Defer } from '../../misc/Defer';\nimport { $$ } from '../../utils/Dom';\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { once, debounce, extend, escape } from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_ResultLink';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\n\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class ResultLink extends Component {\n  static ID = 'ResultLink';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultLink: ResultLink\n    });\n  };\n\n  /**\n   * The options for the ResultLink\n   * @componentOptions\n   */\n  static options: IResultLinkOptions = {\n    /**\n     * Specifies the field to use to output the component `href` attribute value.\n     *\n     * **Tip:**\n     * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n     * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n     *\n     * **Examples:**\n     * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n     * default field):\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n     * ```\n     *\n     * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n     *\n     * ```html\n     * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n     *   <div class='CoveoIcon>'></div>\n     *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n     *   <div class=\"CoveoExcerpt\"></div>\n     * </script>\n     * ```\n     *\n     * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n     *\n     * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n     */\n    field: ComponentOptions.buildFieldOption(),\n\n    /**\n     * Specifies whether the component should try to open its link in Microsoft Outlook.\n     *\n     * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * Default value is `false`.\n     */\n    openInOutlook: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n     * loading through the original URL.\n     *\n     * Default value is `false`.\n     */\n    openQuickview: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in a new window instead of opening it in the current\n     * context.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * **Note:**\n     * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n     * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n     * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n     * > open their links in a new window when the end user clicks them, no matter what the value of their\n     * > `alwaysOpenInNewWindow` option is.\n     *\n     * Default value is `false`.\n     */\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n     *\n     * The template literal can reference any number of fields from the parent result. It can also reference global\n     * scope properties.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n     * ```\n     *\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n     * ```\n     *\n     * Default value is `undefined`.\n     */\n    hrefTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` display title (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the default `ResultLink` display title behavior.\n     *\n     * The template literal can reference any number of fields from the parent result. However, if the template literal\n     * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n     * name of this key instead.\n     *\n     * This option is ignored if the `ResultLink` innerHTML contains any value.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n     * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n     * ```\n     *\n     * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n     * in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n     * ```\n     *\n     * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n     * not empty:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n     * ```\n     *\n     * Default value is `undefined`.\n     *\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n     */\n    titleTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n     *\n     * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n     * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n     *\n     * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n     *\n     * **Note:**\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n     * > [`init`]{@link init} call of your search interface (see\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n     * > or before the `init` call, using the `options` top-level function (see\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n     *\n     * **Example:**\n     * ```javascript\n     * // You can set the option in the 'init' call:\n     * Coveo.init(document.querySelector(\"#search\"), {\n     *   ResultLink : {\n     *     onClick : function(e, result) {\n     *       e.preventDefault();\n     *       // Custom code to execute with the item URI and title.\n     *       openUriInASpecialTab(result.clickUri, result.title);\n     *     }\n     *   }\n     * });\n     *\n     * // Or before the 'init' call, using the 'options' top-level function:\n     * // Coveo.options(document.querySelector('#search'), {\n     * //   ResultLink : {\n     * //     onClick : function(e, result) {\n     * //       e.preventDefault();\n     * //       // Custom code to execute with the item URI and title.\n     * //       openUriInASpecialTab(result.clickUri, result.title);\n     * //     }\n     * //   }\n     * // });\n     * ```\n     */\n    onClick: ComponentOptions.buildCustomOption<(e: Event, result: IQueryResult) => any>(() => {\n      return null;\n    })\n  };\n\n  private toExecuteOnOpen: (e?: Event) => void;\n\n  /**\n   * Creates a new `ResultLink` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultLink` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param os\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IResultLinkOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    public os?: OS_NAME\n  ) {\n    super(element, ResultLink.ID, bindings);\n\n    const initialOptions = ComponentOptions.initComponentOptions(element, ResultLink, options);\n    const resultLinkOptions = this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink);\n    this.options = extend({}, initialOptions, resultLinkOptions);\n\n    this.result = result || this.resolveResult();\n\n    if (this.options.openQuickview == null) {\n      this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils.isMobileDevice();\n    }\n    this.element.setAttribute('tabindex', '0');\n\n    Assert.exists(this.componentOptionsModel);\n    Assert.exists(this.result);\n\n    if (!this.quickviewShouldBeOpened()) {\n      // Bind on multiple \"click\" or \"mouse\" events.\n      // Create a function that will be executed only once, so as not to log multiple events\n      // Once a result link has been opened, and that we log at least one analytics event,\n      // it should not matter if the end user open the same link multiple times with different methods.\n      // It's still only one \"click\" event as far as UA is concerned.\n      // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n\n      const executeOnlyOnce = once(() => this.logOpenDocument());\n\n      $$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce);\n      let longPressTimer: number;\n      $$(element).on('touchstart', () => {\n        longPressTimer = window.setTimeout(executeOnlyOnce, 1000);\n      });\n      $$(element).on('touchend', () => {\n        if (longPressTimer) {\n          clearTimeout(longPressTimer);\n        }\n      });\n    }\n    this.renderUri(element, result);\n    this.bindEventToOpen();\n  }\n  public renderUri(element: HTMLElement, result?: IQueryResult) {\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      const title = this.getDisplayedTitle();\n      this.element.innerHTML = title;\n      if (!this.element.title) {\n        this.element.title = this.getDisplayedTitleAsText();\n      }\n    }\n  }\n  /**\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLink(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logOpenDocument();\n    }\n    window.location.href = this.getResultUri();\n  }\n\n  /**\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInNewWindow(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logOpenDocument();\n    }\n    window.open(this.getResultUri(), '_blank');\n  }\n\n  /**\n   * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n   *\n   * Normally, this implies the result should be a link to an email.\n   *\n   * If the needed fields are not present, this method does nothing.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInOutlook(logAnalytics = true) {\n    if (this.hasOutlookField()) {\n      if (logAnalytics) {\n        this.logOpenDocument();\n      }\n      this.openLink();\n    }\n  }\n\n  /**\n   * Opens the link in the same manner the end user would.\n   *\n   * This essentially simulates a click on the result link.\n   *\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkAsConfigured(logAnalytics = true) {\n    if (this.toExecuteOnOpen) {\n      if (logAnalytics) {\n        this.logOpenDocument();\n      }\n      this.toExecuteOnOpen();\n    }\n  }\n\n  protected bindEventToOpen(): boolean {\n    return (\n      this.bindOnClickIfNotUndefined() ||\n      this.bindOpenQuickviewIfNotUndefined() ||\n      this.setHrefIfNotAlready() ||\n      this.openLinkThatIsNotAnAnchor()\n    );\n  }\n\n  private getDisplayedTitle() {\n    if (!this.options.titleTemplate) {\n      return this.result.title\n        ? HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n        : this.escapedClickUri;\n    } else {\n      let newTitle = StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n      return newTitle\n        ? StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n        : this.escapedClickUri;\n    }\n  }\n\n  private getDisplayedTitleAsText() {\n    const container = $$('div');\n    container.setHtml(this.getDisplayedTitle());\n    return container.text();\n  }\n\n  private get escapedClickUri() {\n    return escape(this.result.clickUri);\n  }\n\n  private bindOnClickIfNotUndefined() {\n    if (this.options.onClick != undefined) {\n      this.toExecuteOnOpen = (e: MouseEvent) => {\n        this.options.onClick.call(this, e, this.result);\n      };\n\n      new AccessibleButton()\n        .withElement(this.element)\n        .withLabel(this.result.title)\n        .withSelectAction((e: Event) => this.toExecuteOnOpen(e))\n        .build();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private bindOpenQuickviewIfNotUndefined() {\n    if (this.quickviewShouldBeOpened()) {\n      this.toExecuteOnOpen = () => {\n        $$(this.bindings.resultElement).trigger(ResultListEvents.openQuickview);\n      };\n\n      $$(this.element).on('click', (e: Event) => {\n        e.preventDefault();\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private openLinkThatIsNotAnAnchor() {\n    if (!this.elementIsAnAnchor()) {\n      this.toExecuteOnOpen = () => {\n        if (this.options.alwaysOpenInNewWindow) {\n          if (this.options.openInOutlook) {\n            this.openLinkInOutlook();\n          } else {\n            this.openLinkInNewWindow();\n          }\n        } else {\n          this.openLink();\n        }\n      };\n\n      $$(this.element).on('click', () => {\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  private setHrefIfNotAlready() {\n    // Do not erase any value put in href by the template, etc. Allows\n    // using custom click urls while still keeping analytics recording\n    // and other behavior brought by the component.\n    if (this.elementIsAnAnchor() && !Utils.isNonEmptyString($$(this.element).getAttribute('href'))) {\n      $$(this.element).setAttribute('href', this.getResultUri());\n      if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n        $$(this.element).setAttribute('target', '_blank');\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private logOpenDocument = debounce(\n    () => {\n      this.queryController.saveLastQuery();\n      let documentURL = $$(this.element).getAttribute('href');\n      if (documentURL == undefined || documentURL == '') {\n        documentURL = this.escapedClickUri;\n      }\n      this.usageAnalytics.logClickEvent(\n        analyticsActionCauseList.documentOpen,\n        {\n          documentURL: documentURL,\n          documentTitle: this.result.title,\n          author: Utils.getFieldValue(this.result, 'author')\n        },\n        this.result,\n        this.root\n      );\n      Defer.flush();\n    },\n    1500,\n    true\n  );\n\n  private filterProtocol(uri: string) {\n    const isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n    const isRelative = /^\\//.test(uri);\n\n    return isAbsolute || isRelative ? uri : '';\n  }\n\n  private getResultUri(): string {\n    if (this.options.hrefTemplate) {\n      const uri = StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n      return this.filterProtocol(uri);\n    }\n\n    if (this.options.field == undefined && this.options.openInOutlook) {\n      this.setField();\n    }\n\n    if (this.options.field != undefined) {\n      return this.filterProtocol(Utils.getFieldValue(this.result, <string>this.options.field));\n    }\n\n    return this.filterProtocol(this.result.clickUri);\n  }\n\n  private elementIsAnAnchor() {\n    return this.element.tagName == 'A';\n  }\n\n  private setField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.hasOutlookField()) {\n      this.options.field = '@outlookformacuri';\n    } else if (os == OS_NAME.WINDOWS && this.hasOutlookField()) {\n      this.options.field = '@outlookuri';\n    }\n  }\n\n  private hasOutlookField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n      return true;\n    } else if (os == OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n      return true;\n    }\n    return false;\n  }\n\n  private isUriThatMustBeOpenedInQuickview(): boolean {\n    return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n  }\n\n  private quickviewShouldBeOpened() {\n    return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils.hasHTMLVersion(this.result);\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultLink);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultLink/ResultLink.ts"],"sourceRoot":""}