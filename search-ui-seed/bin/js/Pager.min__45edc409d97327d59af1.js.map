{"version":3,"sources":["Pager.min__45edc409d97327d59af1.js","./src/utils/ResultListUtils.ts","./src/ui/ResultList/ResultListRenderer.ts","./src/ui/Pager/Pager.ts","./src/ui/Facet/FacetUtils.ts","./src/ui/Templates/TableTemplate.ts","./src/ui/Templates/DefaultRecommendationTemplate.ts","./src/ui/Templates/TemplateToHtml.ts","./src/ui/Templates/CoreHelpers.ts","./src/ui/ResponsiveComponents/ResponsiveDefaultResultTemplate.ts","./src/ui/ResultList/ResultContainer.ts","./src/ui/ResultList/ResultListCardRenderer.ts","./src/ui/ResultList/ResultListTableRenderer.ts","./src/ui/ResultList/ResultList.ts"],"names":["webpackJsonpCoveo__temporary","111","module","exports","__webpack_require__","Object","defineProperty","value","hideIfInfiniteScrollEnabled","cmp","ResultListUtils","isInfiniteScrollEnabled","searchInterface","element","disable","$$","hide","warnIfComponentNotNeeded","enable","unhide","root","resultList","getActiveResultList","options","enableInfiniteScroll","scrollToTop","Logger","this","warn","window","scrollTo","searchInterfacePosition","getBoundingClientRect","top","scrollContainer","infiniteScrollContainer","pageYOffset","scrollTop","resultLists","getResultLists","find","disabled","findAll","cssClass","map","el","Component","get","ResultList","computeCssClassName","allResultListsUseInfiniteScroll","notNeededComponentWarning","filter","length","cmpCssClass","computeCssClassNameForType","type","message","211","resultListOptions","autoCreateComponentsFn","renderResults","resultElements","append","resultDisplayedCallback","Promise","all","getStartFragment","getEndFragment","then","startFrag","endFrag","resultsFragment","document","createDocumentFragment","appendChild","_","each","resultElement","getResult","resultsContainer","resolve","ResultListRenderer","260","__extends","extendStatics","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","bindings","Pager","ID","listenToQueryStateChange","ignoreNextQuerySuccess","needToReset","ComponentOptions","initComponentOptions","currentPage","bind","onRootElement","QueryEvents","newQuery","args","handleNewQuery","buildingQuery","handleBuildingQuery","querySuccess","handleQuerySuccess","queryError","handleQueryError","noResults","handleNoResults","onQueryState","MODEL_EVENTS","CHANGE_ONE","QUERY_STATE_ATTRIBUTES","FIRST","data","handleQueryStateFirstResultChanged","NUMBER_OF_RESULTS","handleQueryStateNumberOfResultsPerPageChanged","addAlwaysActiveListeners","list","className","role","ariaLabel","l","_this","_currentPage","set","sanitizedValue","isNaN","logger","Math","max","min","getMaxNumberOfPagesForCurrentResultsPerPage","floor","enumerable","configurable","setPage","pageNumber","analyticCause","analyticsActionCauseList","pagerNumber","Assert","exists","updateQueryStateModel","getFirstResultNumber","usageAnalytics","logCustomEvent","queryController","executeQuery","ignoreWarningSearchEvent","keepLastSearchUid","origin","previousPage","pagerPrevious","nextPage","pagerNext","addEventListener","ResultListEvents","newResultsDisplayed","ceil","maximumNumberOfResultsFromIndex","resultsPerPage","triggeredByPagerOrDebugMode","attrValue","queryStateModel","QueryStateModel","attributesEnum","first","reset","isNotUndefined","firstResult","query","count","results","totalCountFiltered","pagerBoundary","computePagerBoundary","end","start","this_1","i","listItemValue","tabindex","ariaHidden","toString","page","listItem","isCurrentPage","addClass","setAttribute","clickAction","handleClickPage","AccessibleButton","withElement","withLabel","withClickAction","withEnterKeyboardAction","build","enableNavigationButton","lastResultPage","renderNavigationButton","lastValidPage","totalCount","possibleValidPage","retryTheQuery","empty","eventArgs","getQueryEventArgs","queryBuilder","numberOfResults","maxResultNumber","numOfExcessResults","resultPerPage","lastPageNumber","halfLength","numberOfPages","firstPageNumber","endPageNumber","previous","renderPreviousButton","insertBefore","firstChild","next","renderNextButton","previousButton","previousLink","title","previousIcon","SVGIcons","icons","pagerLeftArrow","SVGDom","addClassToSVGInContainer","withSelectAction","handleClickPrevious","nextButton","nextLink","nextIcon","pagerRightArrow","handleClickNext","fromFirstResultsToPageNumber","doExport","exportGlobally","buildNumberOption","defaultFunction","DeviceUtils","isMobileDevice","buildBooleanOption","defaultValue","maxNumberOfPages","undefined","deprecated","Initialization","registerAutoCreateComponent","39","getRegexToUseForFacetSearch","ignoreAccent","RegExp","StringUtils","stringToRegex","getDisplayValueFromValueCaption","field","valueCaption","returnValue","tryToGetTranslatedCaption","getValuesToUseForSearchInFacet","original","facet","ret","regex","facetSearchIgnoreAccents","chain","pairs","pair","test","match","push","QueryUtils","isStratusAgnosticField","FileTypes","getFileTypeCaptions","key","range","month","DateUtils","monthToString","substr","buildFacetSearchPattern","values","Utils","escapeRegexCharacter","join","needAnotherFacetSearch","currentSearchLength","newSearchLength","oldSearchLength","desiredSearchLength","addNoStateCssClassToFacetValues","container","getSelected","noStates","noState","found","toLowerCase","getFileType","caption","getObjectType","FacetUtils","isMonthFieldValue","parseInt","isNonEmptyString","asInt","462","defaultTemplate","defaultRoledTemplates","instantiateRoleToString","roledTemplate","templates","t","instantiateToString","instantiateRoleToElement","instantiateToElement","tmpl","Template","layout","getFallbackTemplate","hasTemplateWithRole","TemplateList","TableTemplate","463","_super","apply","arguments","object","reject","div","createElement","innerHTML","DefaultRecommendationTemplate","464","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","e","rejected","result","done","__generator","body","verb","n","v","op","f","TypeError","y","call","label","ops","pop","trys","g","sent","throw","return","Symbol","iterator","buildResults","currentlyDisplayedResults","res","resultsPromises","_a","index","buildResult","elem","idx","resultCurrentlyBeingRendered","pluck","sortBy","setStateObjectOnQueryResult","setSearchInterfaceObjectOnQueryResult","createHtmlElement","bindResultToElement","autoCreateComponentsInsideResult","initResult","verifyChildren","automaticallyCreateComponentsInsideResult","resultTemplate","wrapInDiv","checkCondition","currentLayout","responsiveComponents","TemplateToHtml","466","resolveQueryResult","getComponentRef","quickview","resolveTermsToHighlight","currentQueryResult","termsToHighlight","resolvePhrasesToHighlight","phrasesToHighlight","termsToHighlightAreDefined","isNonEmptyArray","keys","__assign","assign","s","exportAllHelpersGlobally","scope","TemplateHelpers","getHelpers","helper","name","CoreHelpers","registerFieldHelper","javascriptEncode","executeShorten","content","strAndHoles","StringAndHoles","shortenString","highlights","HighlightUtils","highlightString","holes","registerTemplateHelper","executeShortenPath","shortenPath","executeShortenUri","shortenUri","executeHighlight","executeHighlightStreamText","StreamHighlightUtils","highlightStreamText","opts","mergedOptions","executeHighlightStreamHTML","highlightStreamHTML","numberValue","Number","format","isString","htmlEncode","Globalize","dateToString","convertFromJsonDateIfNeeded","timeToString","dateTimeToString","defaultOptions","includeTimeIfThisWeek","optionsToUse","extend","CurrencyUtils","currencyToString","isMilliseconds","TimeSpan","getHHMMSS","companyDomain","me","lengthLimit","truncateName","isObject","listOfAddresses","EmailUtils","splitSemicolonSeparatedListOfEmailAddresses","emailAddressesToHyperlinks","isArray","target","removeClass","hasClass","siblings","sibling","parentElement","href","AnchorUtils","buildAnchor","src","srcTemplate","ImageUtils","buildImage","buildStringTemplateFromResult","alt","height","width","endpoint","hasThumbnail","buildImageFromResult","SearchEndpoint","endpoints","icon","createIcon","outerHTML","replace","templatesToLoad","once","defaultTmpl","atLeastOneWasLoaded","toLoad","obj","omit","condition","id","getHelper","byteMeasure","size","precision","base","pow","isNullOrUndefined","TemplateCache","getTemplate","encodeCarriageReturn","getDeviceName","522","523","524","525","coveoRoot","responsiveDropdown","SearchInterface","currentMode","init","component","trace","ResponsiveComponentsManager","register","ResponsiveDefaultResultTemplate","registerComponent","accept","handleResizeEvent","lastResults","getLastResults","needSmallMode","elements","getSmallScreenWidth","526","resultContainer","resultContainerElement","detachComponentsInside","classToAdd","isEmpty","hideChildren","children","forEach","child","getResultElements","ResultContainer","527","needToBeRemoved","toRemove","remove","times","ResultListCardRenderer","528","shouldDisplayHeader","shouldDisplayFooter","renderRoledTemplate","frag","ResultListTableRenderer","631","87","elementClassId","reachedTheEndOfResults","disableLayoutChange","successiveScrollCount","showOrHideElementsDependingOnState","duringQuery","handleDuringQuery","on","changeLayout","handleChangeLayout","handlePageChanged","handleScrollOfResultList","initResultContainer","initWaitAnimationContainer","waitAnimationContainer","setupTemplatesVersusLayouts","ResultLayoutEvents","populateResultLayout","layouts","setupRenderer","makeElementFocusable","ensureHasId","getDefaultTemplate","template","loadTemplatesFromCache","Coveo","DefaultResultTemplate","pageTemplateNames","getResultListTemplateNames","compact","templateName","getAutoSelectedFieldsToInclude","getFields","concat","getMinimalFieldsToInclude","unique","layoutClassToAdd","renderer","triggerNewResultDisplayed","triggerNewResultsDisplayed","templateToHtml","displayMoreResults","isLargerOrEqualsThan","isCurrentlyFetchingMoreResults","hasPotentiallyMoreResultsToDisplay","enableInfiniteScrollWaitingAnimation","showWaitingAnimationForInfiniteScrolling","fetchAndRenderMoreResults","templateToHtmlArgs","getDisplayedResults","getDisplayedResultsElements","resultLayoutSelectors","resultLayoutSelector","enableLayouts","otherLayoutsStillActive","otherResultLists","otherResultList","contains","disableLayouts","item","trigger","newResultDisplayed","e_1","fetchingMoreResults","fetchMore","pagerScrolling","renderNewResults","resetStateAfterFetchingMoreResults","_b","hideWaitingAnimationForInfiniteScrolling","Defer","defer","MAX_AMOUNT_OF_SUCESSIVE_REQUESTS","info","cancelFetchingMoreResultsIfNeeded","showWaitingAnimation","hideWaitingAnimation","mobileScrollContainer","scrollToTopIfEnabled","isScrollingOfResultListAlmostAtTheBottom","infiniteScrollPageSize","deferredQuerySuccess","setTimeout","enableScrollToTop","allResultLists","getComponents","without","fieldsToInclude","addFieldsToInclude","autoSelectFieldsToInclude","otherFields","flatten","addRequiredFields","includeRequiredFields","InitializationPlaceholder","withVisibleRootElement","withPlaceholderForResultList","isWindow","Window","isScrollAtBottomForWindowElement","isScrollAtBottomForHtmlElement","win","Win","windowHeight","scrollY","Doc","elementHeight","clientHeight","scrollHeight","hasQuery","hasResults","showIfQuery","showIfNoQuery","showIfResults","showIfNoResults","toggle","waitAnimation","DomUtils","getBasicLoadingAnimation","spinner","detach","getLoadingSpinner","previousSpinnerContainer","previousSpinner","spinnerContainer","spinners","containers","elemType","initResultContainerAddToDom","initParameters","originalOptionsObject","automaticallyCreateComponentsInside","uniqueId","buildChildHtmlElementOption","alias","TemplateComponentOptions","buildTemplateOption","buildStringOption","postProcessing","depend","findParentScrolling","buildSelectorOption","querySelector","buildFieldsOption","includeInResults","required"],"mappings":"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","file":"Pager.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([15,17],{\n\n/***/ 111:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ResultList_1 = __webpack_require__(87);\nvar Dom_1 = __webpack_require__(1);\nvar underscore_1 = __webpack_require__(0);\nvar Logger_1 = __webpack_require__(9);\nvar ResultListUtils = /** @class */ (function () {\n    function ResultListUtils() {\n    }\n    ResultListUtils.hideIfInfiniteScrollEnabled = function (cmp) {\n        var infiniteScrollEnabled = ResultListUtils.isInfiniteScrollEnabled(cmp.searchInterface.element);\n        if (infiniteScrollEnabled) {\n            cmp.disable();\n            Dom_1.$$(cmp.element).hide();\n            ResultListUtils.warnIfComponentNotNeeded(cmp);\n        }\n        else {\n            cmp.enable();\n            Dom_1.$$(cmp.element).unhide();\n        }\n    };\n    ResultListUtils.isInfiniteScrollEnabled = function (root) {\n        var resultList = ResultListUtils.getActiveResultList(root);\n        return resultList ? !!resultList.options.enableInfiniteScroll : false;\n    };\n    ResultListUtils.scrollToTop = function (root) {\n        var resultList = ResultListUtils.getActiveResultList(root);\n        if (!resultList) {\n            new Logger_1.Logger(this).warn('No active ResultList, scrolling to the top of the Window');\n            return window.scrollTo(0, 0);\n        }\n        var searchInterfacePosition = resultList.searchInterface.element.getBoundingClientRect().top;\n        if (searchInterfacePosition > 0) {\n            return;\n        }\n        var scrollContainer = resultList.options.infiniteScrollContainer;\n        if (typeof scrollContainer.scrollTo === 'function') {\n            scrollContainer.scrollTo(0, window.pageYOffset + searchInterfacePosition);\n        }\n        else {\n            scrollContainer.scrollTop = 0;\n        }\n    };\n    ResultListUtils.getActiveResultList = function (root) {\n        var resultLists = ResultListUtils.getResultLists(root);\n        return underscore_1.find(resultLists, function (resultList) { return !resultList.disabled; });\n    };\n    ResultListUtils.getResultLists = function (root) {\n        return Dom_1.$$(root)\n            .findAll(\".\" + ResultListUtils.cssClass())\n            .map(function (el) { return Component_1.Component.get(el, ResultList_1.ResultList); });\n    };\n    ResultListUtils.cssClass = function () {\n        return Component_1.Component.computeCssClassName(ResultList_1.ResultList);\n    };\n    ResultListUtils.warnIfComponentNotNeeded = function (cmp) {\n        var root = cmp.searchInterface.root;\n        var allListsUseInfiniteScroll = ResultListUtils.allResultListsUseInfiniteScroll(root);\n        allListsUseInfiniteScroll && ResultListUtils.notNeededComponentWarning(cmp);\n    };\n    ResultListUtils.allResultListsUseInfiniteScroll = function (root) {\n        var listsWithInfiniteScrollDisabled = ResultListUtils.getResultLists(root).filter(function (resultList) { return !resultList.options.enableInfiniteScroll; });\n        return listsWithInfiniteScrollDisabled.length === 0;\n    };\n    ResultListUtils.notNeededComponentWarning = function (cmp) {\n        var cmpCssClass = Component_1.Component.computeCssClassNameForType(cmp.type);\n        var message = \"The \" + cmpCssClass + \" component is not needed because all \" + ResultListUtils.cssClass() + \" components have enableInfiniteScroll set to 'true'.\\n    For the best performance, remove the \" + cmpCssClass + \" component from your search page.\";\n        new Logger_1.Logger(cmp).warn(message);\n    };\n    return ResultListUtils;\n}());\nexports.ResultListUtils = ResultListUtils;\n\n\n/***/ }),\n\n/***/ 211:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar _ = __webpack_require__(0);\nvar ResultListRenderer = /** @class */ (function () {\n    function ResultListRenderer(resultListOptions, autoCreateComponentsFn) {\n        this.resultListOptions = resultListOptions;\n        this.autoCreateComponentsFn = autoCreateComponentsFn;\n    }\n    ResultListRenderer.prototype.renderResults = function (resultElements, append, resultDisplayedCallback) {\n        var _this = this;\n        if (append === void 0) { append = false; }\n        return Promise.all([this.getStartFragment(resultElements, append), this.getEndFragment(resultElements, append)]).then(function (_a) {\n            var startFrag = _a[0], endFrag = _a[1];\n            var resultsFragment = document.createDocumentFragment();\n            if (startFrag) {\n                resultsFragment.appendChild(startFrag);\n            }\n            _.each(resultElements, function (resultElement) {\n                resultsFragment.appendChild(resultElement);\n                resultDisplayedCallback(Component_1.Component.getResult(resultElement), resultElement);\n            });\n            if (endFrag) {\n                resultsFragment.appendChild(endFrag);\n            }\n            _this.resultListOptions.resultsContainer.appendChild(resultsFragment);\n        });\n    };\n    ResultListRenderer.prototype.getStartFragment = function (resultElements, append) {\n        return Promise.resolve(document.createDocumentFragment());\n    };\n    ResultListRenderer.prototype.getEndFragment = function (resultElements, append) {\n        return Promise.resolve(document.createDocumentFragment());\n    };\n    return ResultListRenderer;\n}());\nexports.ResultListRenderer = ResultListRenderer;\n\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(631);\nvar QueryEvents_1 = __webpack_require__(11);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar GlobalExports_1 = __webpack_require__(3);\nvar Assert_1 = __webpack_require__(5);\nvar Model_1 = __webpack_require__(18);\nvar QueryStateModel_1 = __webpack_require__(13);\nvar Strings_1 = __webpack_require__(6);\nvar AccessibleButton_1 = __webpack_require__(15);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar Dom_1 = __webpack_require__(1);\nvar ResultListUtils_1 = __webpack_require__(111);\nvar SVGDom_1 = __webpack_require__(16);\nvar SVGIcons_1 = __webpack_require__(12);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Initialization_1 = __webpack_require__(2);\n/**\n * The Pager component attaches itself to a `div` element and renders widgets that allow the end user to navigate\n * through the different result pages.\n *\n * This component takes care of triggering a query with the correct result range whenever the end user selects a page or\n * uses the navigation buttons (**Previous** and **Next**).\n */\nvar Pager = /** @class */ (function (_super) {\n    __extends(Pager, _super);\n    /**\n     * Creates a new Pager. Binds multiple query events ({@link QueryEvents.newQuery}, {@link QueryEvents.buildingQuery},\n     * {@link QueryEvents.querySuccess}, {@link QueryEvents.queryError} and {@link QueryEvents.noResults}. Renders itself\n     * on every query success.\n     * @param element The HTMLElement on which to instantiate the component (normally a `div`).\n     * @param options The options for the Pager component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     */\n    function Pager(element, options, bindings) {\n        var _this = _super.call(this, element, Pager.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.listenToQueryStateChange = true;\n        _this.ignoreNextQuerySuccess = false;\n        // The normal behavior of this component is to reset to page 1 when a new\n        // query is performed by other components (i.e. not pagers).\n        //\n        // This behavior is overridden when the 'first' state is\n        // programmatically modified.\n        _this.needToReset = true;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Pager, options);\n        _this.currentPage = 1;\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.newQuery, function (args) { return _this.handleNewQuery(args); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingQuery, function (args) { return _this.handleBuildingQuery(args); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.querySuccess, function (args) { return _this.handleQuerySuccess(args); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.queryError, function () { return _this.handleQueryError(); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.noResults, function (args) { return _this.handleNoResults(args); });\n        _this.bind.onQueryState(Model_1.MODEL_EVENTS.CHANGE_ONE, QueryStateModel_1.QUERY_STATE_ATTRIBUTES.FIRST, function (data) {\n            return _this.handleQueryStateFirstResultChanged(data);\n        });\n        _this.bind.onQueryState(Model_1.MODEL_EVENTS.CHANGE_ONE, QueryStateModel_1.QUERY_STATE_ATTRIBUTES.NUMBER_OF_RESULTS, function (data) {\n            return _this.handleQueryStateNumberOfResultsPerPageChanged(data);\n        });\n        _this.addAlwaysActiveListeners();\n        _this.list = Dom_1.$$('ul', {\n            className: 'coveo-pager-list',\n            role: 'navigation',\n            ariaLabel: Strings_1.l('Pagination')\n        }).el;\n        element.appendChild(_this.list);\n        return _this;\n    }\n    Object.defineProperty(Pager.prototype, \"currentPage\", {\n        /**\n         * The current page (1-based index).\n         */\n        get: function () {\n            return this._currentPage;\n        },\n        set: function (value) {\n            var sanitizedValue = value;\n            if (isNaN(value)) {\n                this.logger.warn(\"Unable to set pager current page to an invalid value: \" + value + \". Resetting to 1.\");\n                sanitizedValue = 1;\n            }\n            sanitizedValue = Math.max(Math.min(sanitizedValue, this.getMaxNumberOfPagesForCurrentResultsPerPage()), 1);\n            sanitizedValue = Math.floor(sanitizedValue);\n            this._currentPage = sanitizedValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the current page, then executes a query.\n     *\n     * Also logs an event in the usage analytics (`pageNumber` by default) with the new current page number as meta data.\n     *\n     * @param pageNumber The page number to navigate to.\n     * @param analyticCause The event to log in the usage analytics.\n     */\n    Pager.prototype.setPage = function (pageNumber, analyticCause) {\n        if (analyticCause === void 0) { analyticCause = AnalyticsActionListMeta_1.analyticsActionCauseList.pagerNumber; }\n        Assert_1.Assert.exists(pageNumber);\n        this.currentPage = pageNumber;\n        this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n        this.usageAnalytics.logCustomEvent(analyticCause, { pagerNumber: this.currentPage }, this.element);\n        this.queryController.executeQuery({\n            ignoreWarningSearchEvent: true,\n            keepLastSearchUid: true,\n            origin: this\n        });\n    };\n    /**\n     * Navigates to the previous page, then executes a query.\n     *\n     * Also logs the `pagePrevious` event in the usage analytics with the new current page number as meta data.\n     */\n    Pager.prototype.previousPage = function () {\n        this.setPage(this.currentPage - 1, AnalyticsActionListMeta_1.analyticsActionCauseList.pagerPrevious);\n    };\n    /**\n     * Navigates to the next page, then executes a query.\n     *\n     * Also logs the `pageNext` event in the usage analytics with the new current page number as meta data.\n     */\n    Pager.prototype.nextPage = function () {\n        this.setPage(this.currentPage + 1, AnalyticsActionListMeta_1.analyticsActionCauseList.pagerNext);\n    };\n    Pager.prototype.addAlwaysActiveListeners = function () {\n        var _this = this;\n        this.searchInterface.element.addEventListener(ResultListEvents_1.ResultListEvents.newResultsDisplayed, function () {\n            return ResultListUtils_1.ResultListUtils.hideIfInfiniteScrollEnabled(_this);\n        });\n    };\n    Pager.prototype.getMaxNumberOfPagesForCurrentResultsPerPage = function () {\n        return Math.ceil(this.options.maximumNumberOfResultsFromIndex / this.searchInterface.resultsPerPage);\n    };\n    Pager.prototype.handleNewQuery = function (data) {\n        var triggeredByPagerOrDebugMode = data && data.origin && (data.origin.type == Pager.ID || data.origin.type == 'Debug');\n        if (this.needToReset && !triggeredByPagerOrDebugMode) {\n            this.currentPage = 1;\n            this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n        }\n        this.needToReset = true;\n    };\n    Pager.prototype.updateQueryStateModel = function (attrValue) {\n        this.listenToQueryStateChange = false;\n        this.queryStateModel.set(QueryStateModel_1.QueryStateModel.attributesEnum.first, attrValue);\n        this.listenToQueryStateChange = true;\n    };\n    Pager.prototype.handleQueryError = function () {\n        this.reset();\n    };\n    Pager.prototype.handleQuerySuccess = function (data) {\n        var _this = this;\n        this.reset();\n        if (this.ignoreNextQuerySuccess) {\n            this.ignoreNextQuerySuccess = false;\n        }\n        else {\n            Assert_1.Assert.isNotUndefined(data);\n            var firstResult = data.query.firstResult;\n            var count = data.results.totalCountFiltered;\n            var pagerBoundary = this.computePagerBoundary(firstResult, count);\n            this.currentPage = pagerBoundary.currentPage;\n            if (pagerBoundary.end - pagerBoundary.start > 0) {\n                var _loop_1 = function (i) {\n                    var listItemValue = Dom_1.$$('a', {\n                        className: 'coveo-pager-list-item-text coveo-pager-anchor',\n                        tabindex: -1,\n                        ariaHidden: 'true'\n                    }, i.toString(10)).el;\n                    var page = i;\n                    var listItem = Dom_1.$$('li', {\n                        className: 'coveo-pager-list-item',\n                        tabindex: 0\n                    }).el;\n                    var isCurrentPage = page === this_1.currentPage;\n                    if (isCurrentPage) {\n                        Dom_1.$$(listItem).addClass('coveo-active');\n                    }\n                    Dom_1.$$(listItem).setAttribute('aria-pressed', isCurrentPage.toString());\n                    var clickAction = function () { return _this.handleClickPage(page); };\n                    new AccessibleButton_1.AccessibleButton()\n                        .withElement(listItem)\n                        .withLabel(Strings_1.l('PageNumber', i.toString(10)))\n                        .withClickAction(clickAction)\n                        .withEnterKeyboardAction(clickAction)\n                        .build();\n                    listItem.appendChild(listItemValue);\n                    this_1.list.appendChild(listItem);\n                };\n                var this_1 = this;\n                for (var i = pagerBoundary.start; i <= pagerBoundary.end; i++) {\n                    _loop_1(i);\n                }\n                if (this.options.enableNavigationButton && pagerBoundary.lastResultPage > 1) {\n                    this.renderNavigationButton(pagerBoundary);\n                }\n            }\n        }\n    };\n    Pager.prototype.handleNoResults = function (data) {\n        var lastValidPage;\n        if (data.results.totalCount > 0) {\n            // First scenario : The index returned less results than expected (because of folding).\n            // Recalculate the last valid page, and change to that new page.\n            var possibleValidPage = this.computePagerBoundary(data.results.totalCountFiltered, data.results.totalCount).lastResultPage;\n            if (this.currentPage > possibleValidPage) {\n                lastValidPage = possibleValidPage;\n            }\n        }\n        else if (this.currentPage > this.getMaxNumberOfPagesForCurrentResultsPerPage()) {\n            // Second scenario : Someone tried to access a non-valid page by the URL for example, which is  higher than the current possible with the number of\n            // possible results. The last valid page will be the maximum number of results avaiable from the index.\n            lastValidPage = this.getMaxNumberOfPagesForCurrentResultsPerPage();\n        }\n        // This needs to be deferred because we still want all the \"querySuccess\" callbacks the complete their execution\n        // before triggering/queuing the next query;\n        // if we cannot find a lastValidPage to go to, do nothing : this means it's a query that simply return nothing.\n        if (lastValidPage != null) {\n            this.currentPage = lastValidPage;\n            data.retryTheQuery = true;\n            this.needToReset = false;\n            this.ignoreNextQuerySuccess = false;\n            this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n        }\n    };\n    Pager.prototype.reset = function () {\n        Dom_1.$$(this.list).empty();\n    };\n    Pager.prototype.handleBuildingQuery = function (data) {\n        Assert_1.Assert.exists(data);\n        var eventArgs = this.getQueryEventArgs();\n        data.queryBuilder.firstResult = eventArgs.first;\n        // Set the number of results only if it was not already set by external code\n        // Most of the time this will be set by either : the SearchInterface with the resultsPerPage option\n        // Or by the ResultsPerPage component (so the end user decides).\n        // Pager will realistically never set this value itself.\n        if (data.queryBuilder.numberOfResults == null) {\n            data.queryBuilder.numberOfResults = eventArgs.count;\n        }\n        var maxResultNumber = data.queryBuilder.firstResult + data.queryBuilder.numberOfResults;\n        var numOfExcessResults = Math.max(0, maxResultNumber - this.options.maximumNumberOfResultsFromIndex);\n        data.queryBuilder.numberOfResults -= numOfExcessResults;\n    };\n    Pager.prototype.computePagerBoundary = function (firstResult, totalCount) {\n        var resultPerPage = this.searchInterface.resultsPerPage;\n        var currentPage = Math.floor(firstResult / resultPerPage) + 1;\n        var lastPageNumber = Math.min(Math.ceil(totalCount / resultPerPage), this.getMaxNumberOfPagesForCurrentResultsPerPage());\n        lastPageNumber = Math.max(lastPageNumber, 1);\n        var halfLength = Math.floor(this.options.numberOfPages / 2);\n        var firstPageNumber = currentPage - halfLength;\n        firstPageNumber = Math.max(firstPageNumber, 1);\n        var endPageNumber = firstPageNumber + this.options.numberOfPages - 1;\n        endPageNumber = Math.min(endPageNumber, lastPageNumber);\n        return {\n            start: firstPageNumber,\n            end: endPageNumber,\n            lastResultPage: lastPageNumber,\n            currentPage: currentPage\n        };\n    };\n    Pager.prototype.renderNavigationButton = function (pagerBoundary) {\n        if (this.currentPage > 1) {\n            var previous = this.renderPreviousButton();\n            this.list.insertBefore(previous.el, this.list.firstChild);\n        }\n        if (this.currentPage < pagerBoundary.lastResultPage) {\n            var next = this.renderNextButton();\n            this.list.appendChild(next.el);\n        }\n    };\n    Pager.prototype.renderPreviousButton = function () {\n        var _this = this;\n        var previousButton = Dom_1.$$('li', {\n            className: 'coveo-pager-previous coveo-pager-anchor coveo-pager-list-item'\n        });\n        var previousLink = Dom_1.$$('a', {\n            title: Strings_1.l('Previous'),\n            tabindex: -1,\n            ariaHidden: 'true'\n        });\n        var previousIcon = Dom_1.$$('span', {\n            className: 'coveo-pager-previous-icon'\n        }, SVGIcons_1.SVGIcons.icons.pagerLeftArrow);\n        SVGDom_1.SVGDom.addClassToSVGInContainer(previousIcon.el, 'coveo-pager-previous-icon-svg');\n        previousLink.append(previousIcon.el);\n        previousButton.append(previousLink.el);\n        new AccessibleButton_1.AccessibleButton()\n            .withElement(previousButton)\n            .withLabel(Strings_1.l('Previous'))\n            .withSelectAction(function () { return _this.handleClickPrevious(); })\n            .build();\n        return previousButton;\n    };\n    Pager.prototype.renderNextButton = function () {\n        var _this = this;\n        var nextButton = Dom_1.$$('li', {\n            className: 'coveo-pager-next coveo-pager-anchor coveo-pager-list-item'\n        });\n        var nextLink = Dom_1.$$('a', {\n            title: Strings_1.l('Next'),\n            tabindex: -1,\n            ariaHidden: 'true'\n        });\n        var nextIcon = Dom_1.$$('span', {\n            className: 'coveo-pager-next-icon'\n        }, SVGIcons_1.SVGIcons.icons.pagerRightArrow);\n        SVGDom_1.SVGDom.addClassToSVGInContainer(nextIcon.el, 'coveo-pager-next-icon-svg');\n        nextLink.append(nextIcon.el);\n        nextButton.append(nextLink.el);\n        new AccessibleButton_1.AccessibleButton()\n            .withElement(nextButton)\n            .withLabel(Strings_1.l('Next'))\n            .withSelectAction(function () { return _this.handleClickNext(); })\n            .build();\n        return nextButton;\n    };\n    Pager.prototype.handleQueryStateFirstResultChanged = function (data) {\n        if (!this.listenToQueryStateChange) {\n            return;\n        }\n        Assert_1.Assert.exists(data);\n        this.needToReset = false;\n        var firstResult = data.value;\n        this.currentPage = this.fromFirstResultsToPageNumber(firstResult);\n    };\n    Pager.prototype.handleQueryStateNumberOfResultsPerPageChanged = function (data) {\n        var firstResult = this.queryStateModel.get(QueryStateModel_1.QUERY_STATE_ATTRIBUTES.FIRST);\n        this.searchInterface.resultsPerPage = data.value;\n        this.currentPage = this.fromFirstResultsToPageNumber(firstResult);\n    };\n    Pager.prototype.handleClickPage = function (pageNumber) {\n        Assert_1.Assert.exists(pageNumber);\n        this.setPage(pageNumber);\n    };\n    Pager.prototype.handleClickPrevious = function () {\n        this.previousPage();\n    };\n    Pager.prototype.handleClickNext = function () {\n        this.nextPage();\n    };\n    Pager.prototype.fromFirstResultsToPageNumber = function (firstResult) {\n        return firstResult / this.searchInterface.resultsPerPage + 1;\n    };\n    Pager.prototype.getFirstResultNumber = function (pageNumber) {\n        if (pageNumber === void 0) { pageNumber = this.currentPage; }\n        return (pageNumber - 1) * this.searchInterface.resultsPerPage;\n    };\n    Pager.prototype.getQueryEventArgs = function () {\n        return {\n            count: this.searchInterface.resultsPerPage,\n            first: this.getFirstResultNumber()\n        };\n    };\n    Pager.ID = 'Pager';\n    Pager.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            Pager: Pager\n        });\n    };\n    /**\n     * The options for the Pager\n     * @componentOptions\n     */\n    Pager.options = {\n        /**\n         * Specifies how many page links to display in the pager.\n         *\n         * Default value is `5` on a desktop computers and `3` on a mobile device. Minimum value is `1`.\n         */\n        numberOfPages: ComponentOptions_1.ComponentOptions.buildNumberOption({\n            defaultFunction: function () {\n                if (DeviceUtils_1.DeviceUtils.isMobileDevice()) {\n                    return 3;\n                }\n                else {\n                    return 5;\n                }\n            },\n            min: 1\n        }),\n        /**\n         * Specifies whether the **Previous** and **Next** buttons should appear at each end of the pager when appropriate.\n         *\n         * The default value is `true`.\n         */\n        enableNavigationButton: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true }),\n        /**\n         * Specifies the maximum number of pages to display if enough results are available.\n         *\n         * This property is typically set when the default number of accessible results from the index has been changed from its default value of `1000` (10 results per page X 100 `maxNumberOfPages`).\n         * Default value is `100`\n         *\n         * @deprecated This is a deprecated option. The `Pager` now automatically adapts itself on each new query, so you no longer need to specify a value for this option. However, if the default maximum number of accessible results value was changed on your Coveo index, you should use the [`maximumNumberOfResultsFromIndex`]{@link Pager.options.maximumNumberOfResultsFromIndex} option to specify the new value.\n         */\n        maxNumberOfPages: ComponentOptions_1.ComponentOptions.buildNumberOption({\n            defaultValue: undefined,\n            deprecated: 'This is a deprecated option. The pager will automatically adapt itself on each new query. You no longer need to specify this option. Use maximumNumberOfResultsFromIndex instead.'\n        }),\n        /**\n         * Specifies the maximum number of results that the index can return for any query.\n         *\n         * Default value is `1000` in a Coveo index.\n         *\n         * If this value was modified in your Coveo index, you must specify the new value in this option for the Pager component to work properly\n         */\n        maximumNumberOfResultsFromIndex: ComponentOptions_1.ComponentOptions.buildNumberOption({\n            defaultValue: 1000\n        })\n    };\n    return Pager;\n}(Component_1.Component));\nexports.Pager = Pager;\nInitialization_1.Initialization.registerAutoCreateComponent(Pager);\n\n\n/***/ }),\n\n/***/ 39:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference path='Facet.ts' />\nvar StringUtils_1 = __webpack_require__(22);\nvar QueryUtils_1 = __webpack_require__(21);\nvar FileTypes_1 = __webpack_require__(113);\nvar DateUtils_1 = __webpack_require__(32);\nvar Utils_1 = __webpack_require__(4);\nvar Dom_1 = __webpack_require__(1);\nvar _ = __webpack_require__(0);\nvar Strings_1 = __webpack_require__(6);\nvar FacetUtils = /** @class */ (function () {\n    function FacetUtils() {\n    }\n    FacetUtils.getRegexToUseForFacetSearch = function (value, ignoreAccent) {\n        return new RegExp(StringUtils_1.StringUtils.stringToRegex(value, ignoreAccent), 'i');\n    };\n    FacetUtils.getDisplayValueFromValueCaption = function (value, field, valueCaption) {\n        var returnValue = this.tryToGetTranslatedCaption(field, value);\n        return valueCaption[value] || returnValue;\n    };\n    FacetUtils.getValuesToUseForSearchInFacet = function (original, facet) {\n        var ret = [original];\n        var regex = this.getRegexToUseForFacetSearch(original, facet.options.facetSearchIgnoreAccents);\n        if (facet.options.valueCaption) {\n            _.chain(facet.options.valueCaption)\n                .pairs()\n                .filter(function (pair) {\n                return regex.test(pair[1]);\n            })\n                .each(function (match) {\n                ret.push(match[0]);\n            });\n            if (QueryUtils_1.QueryUtils.isStratusAgnosticField(facet.options.field, '@objecttype') ||\n                QueryUtils_1.QueryUtils.isStratusAgnosticField(facet.options.field, '@filetype')) {\n                _.each(FileTypes_1.FileTypes.getFileTypeCaptions(), function (value, key) {\n                    if (!(key in facet.options.valueCaption) && regex.test(value)) {\n                        ret.push(key);\n                    }\n                });\n            }\n        }\n        else if (QueryUtils_1.QueryUtils.isStratusAgnosticField(facet.options.field, '@objecttype') ||\n            QueryUtils_1.QueryUtils.isStratusAgnosticField(facet.options.field, '@filetype')) {\n            _.each(_.filter(_.pairs(FileTypes_1.FileTypes.getFileTypeCaptions()), function (pair) {\n                return regex.test(pair[1]);\n            }), function (match) {\n                ret.push(match[0]);\n            });\n        }\n        else if (QueryUtils_1.QueryUtils.isStratusAgnosticField(facet.options.field, '@month')) {\n            _.each(_.range(1, 13), function (month) {\n                if (regex.test(DateUtils_1.DateUtils.monthToString(month - 1))) {\n                    ret.push(('0' + month.toString()).substr(-2));\n                }\n            });\n        }\n        return ret;\n    };\n    FacetUtils.buildFacetSearchPattern = function (values) {\n        values = _.map(values, function (value) {\n            return Utils_1.Utils.escapeRegexCharacter(value);\n        });\n        values[0] = '.*' + values[0] + '.*';\n        return values.join('|');\n    };\n    FacetUtils.needAnotherFacetSearch = function (currentSearchLength, newSearchLength, oldSearchLength, desiredSearchLength) {\n        // Something was removed (currentSearch < newSearch)\n        // && we might want to display more facet search result(currentSearch < desiredSearch)\n        // && the new query returned more stuff than the old one so there's still more results(currentSearchLength > oldLength)\n        return currentSearchLength < newSearchLength && currentSearchLength < desiredSearchLength && currentSearchLength > oldSearchLength;\n    };\n    FacetUtils.addNoStateCssClassToFacetValues = function (facet, container) {\n        // This takes care of adding the correct css class on each facet value checkbox (empty white box) if at least one value is selected in that facet\n        if (facet.values.getSelected().length != 0) {\n            var noStates = Dom_1.$$(container).findAll('li:not(.coveo-selected)');\n            _.each(noStates, function (noState) {\n                Dom_1.$$(noState).addClass('coveo-no-state');\n            });\n        }\n    };\n    FacetUtils.tryToGetTranslatedCaption = function (field, value) {\n        var found;\n        if (QueryUtils_1.QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@filetype')) {\n            found = FileTypes_1.FileTypes.getFileType(value).caption;\n        }\n        else if (QueryUtils_1.QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@objecttype')) {\n            found = FileTypes_1.FileTypes.getObjectType(value).caption;\n        }\n        else if (FacetUtils.isMonthFieldValue(field, value)) {\n            var month = parseInt(value, 10);\n            found = DateUtils_1.DateUtils.monthToString(month - 1);\n        }\n        else {\n            found = Strings_1.l(value);\n        }\n        return found != undefined && Utils_1.Utils.isNonEmptyString(found) ? found : value;\n    };\n    FacetUtils.isMonthFieldValue = function (field, value) {\n        if (!QueryUtils_1.QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@month')) {\n            return false;\n        }\n        var asInt = parseInt(value, 10);\n        if (isNaN(asInt)) {\n            return false;\n        }\n        if (asInt < 1 || asInt > 12) {\n            return false;\n        }\n        return true;\n    };\n    return FacetUtils;\n}());\nexports.FacetUtils = FacetUtils;\n\n\n/***/ }),\n\n/***/ 462:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template_1 = __webpack_require__(27);\nvar TemplateList_1 = __webpack_require__(90);\nvar _ = __webpack_require__(0);\nvar TableTemplate = /** @class */ (function (_super) {\n    __extends(TableTemplate, _super);\n    function TableTemplate() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.defaultTemplate = \"<td><a class=\\\"CoveoResultLink\\\"></a></td>\\n                             <td><span class=\\\"CoveoExcerpt\\\"></span></td>\\n                             <td><span class=\\\"CoveoFieldValue\\\" data-field=\\\"@date\\\" data-helper=\\\"date\\\"></span></td>\";\n        _this.defaultRoledTemplates = {\n            'table-header': \"<th style=\\\"width: 40%\\\">Link</th>\\n                     <th>Excerpt</th>\\n                     <th style=\\\"width: 20%\\\"\\n                         class=\\\"CoveoSort coveo-table-header-sort\\\"\\n                         data-sort-criteria=\\\"date ascending,date descending\\\"\\n                         data-display-unselected-icon=\\\"false\\\">Date</th>\",\n            'table-footer': \"<th>Link</th>\\n                     <th>Excerpt</th>\\n                     <th>Date</th>\"\n        };\n        return _this;\n    }\n    TableTemplate.prototype.instantiateRoleToString = function (role) {\n        var roledTemplate = _.find(this.templates, function (t) { return t.role === role; });\n        if (roledTemplate) {\n            return roledTemplate.instantiateToString(undefined, {});\n        }\n        else {\n            return this.defaultRoledTemplates[role];\n        }\n    };\n    TableTemplate.prototype.instantiateRoleToElement = function (role) {\n        var _this = this;\n        var roledTemplate = _.find(this.templates, function (t) { return t.role === role; });\n        if (roledTemplate) {\n            return roledTemplate.instantiateToElement(undefined, {});\n        }\n        else {\n            var tmpl = new Template_1.Template(function () { return _this.defaultRoledTemplates[role]; });\n            tmpl.layout = 'table';\n            return tmpl.instantiateToElement(undefined);\n        }\n    };\n    TableTemplate.prototype.getFallbackTemplate = function () {\n        var _this = this;\n        return new Template_1.Template(function () { return _this.defaultTemplate; });\n    };\n    TableTemplate.prototype.hasTemplateWithRole = function (role) {\n        return _.find(this.templates, function (t) { return t.role === role; });\n    };\n    return TableTemplate;\n}(TemplateList_1.TemplateList));\nexports.TableTemplate = TableTemplate;\n\n\n/***/ }),\n\n/***/ 463:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template_1 = __webpack_require__(27);\nvar DefaultRecommendationTemplate = /** @class */ (function (_super) {\n    __extends(DefaultRecommendationTemplate, _super);\n    function DefaultRecommendationTemplate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DefaultRecommendationTemplate.prototype.instantiateToString = function (object) {\n        var template = \"<div class=\\\"coveo-result-frame\\\">\\n        <div class=\\\"coveo-result-row\\\">\\n          <div class=\\\"coveo-result-cell\\\" style=\\\"width:40px;text-align:center;vertical-align:middle;\\\">\\n            <span class=\\\"CoveoIcon\\\" data-small=\\\"true\\\" data-with-label=\\\"false\\\">\\n            </span>\\n          </div>\\n          <div class=\\\"coveo-result-cell\\\" style=\\\"padding:0 0 3px 5px;vertical-align:middle\\\">\\n            <div class=\\\"coveo-result-row\\\">\\n              <div class=\\\"coveo-result-cell\\\" style=\\\"font-size:10pt;\\\">\\n                <a class=\\\"CoveoResultLink\\\" style=\\\"display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis\\\">\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\";\n        return template;\n    };\n    DefaultRecommendationTemplate.prototype.instantiateToElement = function (object) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var div = document.createElement('div');\n            div.innerHTML = _this.instantiateToString(object);\n            resolve(div);\n        });\n    };\n    return DefaultRecommendationTemplate;\n}(Template_1.Template));\nexports.DefaultRecommendationTemplate = DefaultRecommendationTemplate;\n\n\n/***/ }),\n\n/***/ 464:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Core_1 = __webpack_require__(20);\nvar ResultList_1 = __webpack_require__(87);\nvar underscore_1 = __webpack_require__(0);\nvar Dom_1 = __webpack_require__(1);\nvar Logger_1 = __webpack_require__(9);\nvar TemplateToHtml = /** @class */ (function () {\n    function TemplateToHtml(args) {\n        this.args = args;\n    }\n    TemplateToHtml.prototype.buildResults = function (results, layout, currentlyDisplayedResults) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            var res, resultsPromises;\n            return __generator(this, function (_a) {\n                res = [];\n                resultsPromises = underscore_1.map(results.results, function (result, index) {\n                    return _this.buildResult(result, layout, currentlyDisplayedResults).then(function (resultElement) {\n                        if (resultElement != null) {\n                            res.push({ elem: resultElement, idx: index });\n                        }\n                        ResultList_1.ResultList.resultCurrentlyBeingRendered = null;\n                        return resultElement;\n                    });\n                });\n                // We need to sort by the original index order, because in lazy loading mode, it's possible that results does not gets rendered\n                // in the correct order returned by the index, depending on the time it takes to load all the results component for a given result template\n                return [2 /*return*/, Promise.all(resultsPromises).then(function () {\n                        return underscore_1.pluck(underscore_1.sortBy(res, 'idx'), 'elem');\n                    })];\n            });\n        });\n    };\n    TemplateToHtml.prototype.buildResult = function (result, layout, currentlyDisplayedResults) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resultElement;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        Core_1.Assert.exists(result);\n                        Core_1.QueryUtils.setStateObjectOnQueryResult(this.args.queryStateModel.get(), result);\n                        Core_1.QueryUtils.setSearchInterfaceObjectOnQueryResult(this.args.searchInterface, result);\n                        ResultList_1.ResultList.resultCurrentlyBeingRendered = result;\n                        return [4 /*yield*/, this.createHtmlElement(result, layout)];\n                    case 1:\n                        resultElement = _a.sent();\n                        if (resultElement != null) {\n                            Core_1.Component.bindResultToElement(resultElement, result);\n                        }\n                        currentlyDisplayedResults.push(result);\n                        return [4 /*yield*/, this.autoCreateComponentsInsideResult(resultElement, result).initResult];\n                    case 2:\n                        _a.sent();\n                        this.verifyChildren(resultElement);\n                        return [2 /*return*/, resultElement];\n                }\n            });\n        });\n    };\n    TemplateToHtml.prototype.autoCreateComponentsInsideResult = function (element, result) {\n        Core_1.Assert.exists(element);\n        return Core_1.Initialization.automaticallyCreateComponentsInsideResult(element, result);\n    };\n    TemplateToHtml.prototype.createHtmlElement = function (result, layout) {\n        return this.args.resultTemplate.instantiateToElement(result, {\n            wrapInDiv: true,\n            checkCondition: true,\n            currentLayout: layout,\n            responsiveComponents: this.args.searchInterface.responsiveComponents\n        });\n    };\n    TemplateToHtml.prototype.verifyChildren = function (element) {\n        var containsResultLink = !!Dom_1.$$(element).find('.CoveoResultLink');\n        if (containsResultLink) {\n            return;\n        }\n        var msg = \"Result does not contain a \\\"CoveoResultLink\\\" component, please verify the result template\";\n        new Logger_1.Logger(element).warn(msg, this.args.resultTemplate);\n    };\n    return TemplateToHtml;\n}());\nexports.TemplateToHtml = TemplateToHtml;\n\n\n/***/ }),\n\n/***/ 466:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TemplateHelpers_1 = __webpack_require__(115);\nvar HighlightUtils_1 = __webpack_require__(68);\nvar DateUtils_1 = __webpack_require__(32);\nvar CurrencyUtils_1 = __webpack_require__(130);\nvar HtmlUtils_1 = __webpack_require__(179);\nvar Utils_1 = __webpack_require__(4);\nvar StringUtils_1 = __webpack_require__(22);\nvar TimeSpanUtils_1 = __webpack_require__(70);\nvar EmailUtils_1 = __webpack_require__(178);\nvar QueryUtils_1 = __webpack_require__(21);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar Dom_1 = __webpack_require__(1);\nvar SearchEndpoint_1 = __webpack_require__(50);\nvar StreamHighlightUtils_1 = __webpack_require__(114);\nvar FacetUtils_1 = __webpack_require__(39);\nvar Globalize = __webpack_require__(23);\nvar _ = __webpack_require__(0);\nvar Component_1 = __webpack_require__(7);\nvar TemplateCache_1 = __webpack_require__(66);\nvar CoreHelpers = /** @class */ (function () {\n    function CoreHelpers() {\n    }\n    /**\n     * For backward compatibility reason, the \"global\" template helper should be available under the\n     * coveo namespace.\n     * @param scope\n     */\n    CoreHelpers.exportAllHelpersGlobally = function (scope) {\n        _.each(TemplateHelpers_1.TemplateHelpers.getHelpers(), function (helper, name) {\n            if (scope[name] == undefined) {\n                scope[name] = helper;\n            }\n        });\n    };\n    return CoreHelpers;\n}());\nexports.CoreHelpers = CoreHelpers;\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('javascriptEncode', function (value) {\n    return Utils_1.Utils.exists(value) ? StringUtils_1.StringUtils.javascriptEncode(value) : undefined;\n});\nvar executeShorten = function (content, options) {\n    var strAndHoles = HighlightUtils_1.StringAndHoles.shortenString(content, options.length, '...');\n    if (Utils_1.Utils.exists(options.highlights)) {\n        return HighlightUtils_1.HighlightUtils.highlightString(strAndHoles.value, options.highlights, strAndHoles.holes, options.cssClass || 'highlight');\n    }\n    else {\n        return strAndHoles.value;\n    }\n};\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('shorten', function (content, length, highlights, cssClass) {\n    return executeShorten(content, {\n        length: length,\n        highlights: highlights,\n        cssClass: cssClass\n    });\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('shortenv2', function (content, options) {\n    return executeShorten(content, options);\n});\nvar executeShortenPath = function (content, options) {\n    var strAndHoles = HighlightUtils_1.StringAndHoles.shortenPath(content, options.length);\n    if (Utils_1.Utils.exists(options.highlights)) {\n        return HighlightUtils_1.HighlightUtils.highlightString(strAndHoles.value, options.highlights, strAndHoles.holes, options.cssClass || 'highlight');\n    }\n    else {\n        return strAndHoles.value;\n    }\n};\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('shortenPath', function (content, length, highlights, cssClass) {\n    return executeShortenPath(content, {\n        length: length,\n        highlights: highlights,\n        cssClass: cssClass\n    });\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('shortenPathv2', function (content, options) {\n    return executeShortenPath(content, options);\n});\nvar executeShortenUri = function (content, options) {\n    var strAndHoles = HighlightUtils_1.StringAndHoles.shortenUri(content, options.length);\n    if (Utils_1.Utils.exists(options.highlights)) {\n        return HighlightUtils_1.HighlightUtils.highlightString(strAndHoles.value, options.highlights, strAndHoles.holes, options.cssClass || 'highlight');\n    }\n    else {\n        return strAndHoles.value;\n    }\n};\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('shortenUri', function (content, length, highlights, cssClass) {\n    return executeShortenUri(content, {\n        length: length,\n        highlights: highlights,\n        cssClass: cssClass\n    });\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('shortenUriv2', function (content, options) {\n    return executeShortenUri(content, options);\n});\nvar executeHighlight = function (content, options) {\n    if (Utils_1.Utils.exists(content)) {\n        if (Utils_1.Utils.exists(options.highlights)) {\n            return HighlightUtils_1.HighlightUtils.highlightString(content, options.highlights, null, options.cssClass || 'highlight');\n        }\n        else {\n            return content;\n        }\n    }\n    else {\n        return undefined;\n    }\n};\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('highlight', function (content, highlights, cssClass) {\n    return executeHighlight(content, {\n        highlights: highlights,\n        cssClass: cssClass\n    });\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('highlightv2', function (content, options) {\n    return executeHighlight(content, options);\n});\nvar executeHighlightStreamText = function (content, options) {\n    if (Utils_1.Utils.exists(content) && Utils_1.Utils.exists(options.termsToHighlight) && Utils_1.Utils.exists(options.phrasesToHighlight)) {\n        if (termsToHighlightAreDefined(options.termsToHighlight, options.phrasesToHighlight)) {\n            return StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(content, options.termsToHighlight, options.phrasesToHighlight, options.opts);\n        }\n        else {\n            return content;\n        }\n    }\n    else {\n        return undefined;\n    }\n};\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('highlightStreamText', function (content, termsToHighlight, phrasesToHighlight, opts) {\n    if (termsToHighlight === void 0) { termsToHighlight = resolveTermsToHighlight(); }\n    if (phrasesToHighlight === void 0) { phrasesToHighlight = resolvePhrasesToHighlight(); }\n    return executeHighlightStreamText(content, {\n        termsToHighlight: termsToHighlight,\n        phrasesToHighlight: phrasesToHighlight,\n        opts: opts\n    });\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('highlightStreamTextv2', function (content, options) {\n    var mergedOptions = __assign({ termsToHighlight: resolveTermsToHighlight(), phrasesToHighlight: resolvePhrasesToHighlight() }, options);\n    return executeHighlightStreamText(content, mergedOptions);\n});\nvar executeHighlightStreamHTML = function (content, options) {\n    if (Utils_1.Utils.exists(content) && Utils_1.Utils.exists(options.termsToHighlight) && Utils_1.Utils.exists(options.phrasesToHighlight)) {\n        if (termsToHighlightAreDefined(options.termsToHighlight, options.phrasesToHighlight)) {\n            return StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamHTML(content, options.termsToHighlight, options.phrasesToHighlight, options.opts);\n        }\n        else {\n            return content;\n        }\n    }\n    else {\n        return undefined;\n    }\n};\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('highlightStreamHTML', function (content, termsToHighlight, phrasesToHighlight, opts) {\n    if (termsToHighlight === void 0) { termsToHighlight = resolveTermsToHighlight(); }\n    if (phrasesToHighlight === void 0) { phrasesToHighlight = resolvePhrasesToHighlight(); }\n    return executeHighlightStreamHTML(content, {\n        termsToHighlight: termsToHighlight,\n        phrasesToHighlight: phrasesToHighlight,\n        opts: opts\n    });\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('highlightStreamHTMLv2', function (content, options) {\n    var mergedOptions = __assign({ termsToHighlight: resolveTermsToHighlight(), phrasesToHighlight: resolvePhrasesToHighlight() }, options);\n    return executeHighlightStreamHTML(content, mergedOptions);\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('number', function (value, options) {\n    if (!Utils_1.Utils.exists(value)) {\n        return undefined;\n    }\n    var numberValue = Number(value);\n    var format = _.isString(options) ? options : options && options.format;\n    if (!format) {\n        return StringUtils_1.StringUtils.htmlEncode(numberValue.toString());\n    }\n    return StringUtils_1.StringUtils.htmlEncode(Globalize.format(numberValue, format));\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('date', function (value, options) {\n    return DateUtils_1.DateUtils.dateToString(DateUtils_1.DateUtils.convertFromJsonDateIfNeeded(value), options);\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('time', function (value, options) {\n    return DateUtils_1.DateUtils.timeToString(DateUtils_1.DateUtils.convertFromJsonDateIfNeeded(value), options);\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('dateTime', function (value, options) {\n    return DateUtils_1.DateUtils.dateTimeToString(DateUtils_1.DateUtils.convertFromJsonDateIfNeeded(value), options);\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('emailDateTime', function (value, options) {\n    var defaultOptions = {};\n    defaultOptions.includeTimeIfThisWeek = true;\n    var optionsToUse = _.extend(options, defaultOptions);\n    return value ? DateUtils_1.DateUtils.dateTimeToString(DateUtils_1.DateUtils.convertFromJsonDateIfNeeded(value), optionsToUse) : undefined;\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('currency', function (value, options) {\n    return CurrencyUtils_1.CurrencyUtils.currencyToString(value, options);\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('timeSpan', function (value, options) {\n    if (options === void 0) { options = { isMilliseconds: false }; }\n    return new TimeSpanUtils_1.TimeSpan(value, options.isMilliseconds).getHHMMSS();\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('email', function (value) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    // support old arguments (value: any, companyDomain: string, me: string, lengthLimit = 2, truncateName = false)\n    var companyDomain;\n    var me;\n    var lengthLimit;\n    var truncateName;\n    if (_.isObject(args[0])) {\n        companyDomain = args[0]['companyDomain'];\n        me = args[0]['me'];\n        lengthLimit = args[0]['lengthLimit'];\n        truncateName = args[0]['truncateName'];\n    }\n    else {\n        companyDomain = args[0];\n        me = args[1];\n        lengthLimit = args[2];\n        truncateName = args[3];\n    }\n    if (lengthLimit == undefined) {\n        lengthLimit = 2;\n    }\n    if (truncateName == undefined) {\n        truncateName = false;\n    }\n    if (_.isString(value)) {\n        var listOfAddresses = EmailUtils_1.EmailUtils.splitSemicolonSeparatedListOfEmailAddresses(value);\n        return EmailUtils_1.EmailUtils.emailAddressesToHyperlinks(listOfAddresses, companyDomain, me, lengthLimit, truncateName);\n    }\n    else if (_.isArray(value)) {\n        return EmailUtils_1.EmailUtils.emailAddressesToHyperlinks(value, companyDomain, me, lengthLimit, truncateName);\n    }\n    else {\n        return undefined;\n    }\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('excessEmailToggle', function (target) {\n    Dom_1.$$(target).removeClass('coveo-active');\n    if (Dom_1.$$(target).hasClass('coveo-emails-excess-collapsed')) {\n        _.each(Dom_1.$$(target).siblings('.coveo-emails-excess-expanded'), function (sibling) {\n            Dom_1.$$(sibling).addClass('coveo-active');\n        });\n    }\n    else if (Dom_1.$$(target).hasClass('coveo-hide-expanded')) {\n        Dom_1.$$(target.parentElement).addClass('coveo-inactive');\n        _.each(Dom_1.$$(target.parentElement).siblings('.coveo-emails-excess-collapsed'), function (sibling) {\n            Dom_1.$$(sibling).addClass('coveo-active');\n        });\n    }\n    return undefined;\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('anchor', function (href, options) {\n    return HtmlUtils_1.AnchorUtils.buildAnchor(href, options);\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('image', function (src, options, result) {\n    if (result === void 0) { result = resolveQueryResult(); }\n    if (options && options.srcTemplate) {\n        return HtmlUtils_1.ImageUtils.buildImage(StringUtils_1.StringUtils.buildStringTemplateFromResult(options.srcTemplate, result), {\n            alt: options.alt,\n            height: options.height,\n            width: options.width\n        });\n    }\n    return HtmlUtils_1.ImageUtils.buildImage(src, options);\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('thumbnail', function (result, endpoint, options) {\n    if (result === void 0) { result = resolveQueryResult(); }\n    if (endpoint === void 0) { endpoint = 'default'; }\n    if (QueryUtils_1.QueryUtils.hasThumbnail(result)) {\n        return HtmlUtils_1.ImageUtils.buildImageFromResult(result, SearchEndpoint_1.SearchEndpoint.endpoints[endpoint], options);\n    }\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('fromFileTypeToIcon', function (result, options) {\n    if (result === void 0) { result = resolveQueryResult(); }\n    if (options === void 0) { options = {}; }\n    var icon = Component_1.Component.getComponentRef('Icon');\n    if (icon) {\n        return icon.createIcon(result, options).outerHTML;\n    }\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('attrEncode', function (value) {\n    return ('' + value) /* Forces the conversion to string. */\n        .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n        .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n        .replace(/'/g, '&quot;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('loadTemplates', function (templatesToLoad, once) {\n    if (once === void 0) { once = true; }\n    var ret = '';\n    var data = resolveQueryResult();\n    var atLeastOneWasLoaded = false;\n    var toLoad = templatesToLoad;\n    var defaultTmpl;\n    _.each(templatesToLoad, function (value, key, obj) {\n        if (value == 'default') {\n            defaultTmpl = key;\n        }\n    });\n    if (defaultTmpl != undefined) {\n        toLoad = _.omit(templatesToLoad, defaultTmpl);\n    }\n    _.each(toLoad, function (condition, id, obj) {\n        if (!atLeastOneWasLoaded || !once) {\n            atLeastOneWasLoaded = atLeastOneWasLoaded || condition;\n            ret += TemplateHelpers_1.TemplateHelpers.getHelper('loadTemplate')(id, condition, data);\n        }\n    });\n    if (!atLeastOneWasLoaded && defaultTmpl != undefined) {\n        ret += TemplateHelpers_1.TemplateHelpers.getHelper('loadTemplate')(defaultTmpl, true, data);\n    }\n    return ret;\n});\nvar byteMeasure = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB'];\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('size', function (value, options) {\n    var size = parseInt(value, 10);\n    var precision = options != null && options.precision != null ? options.precision : 2;\n    var base = options != null && options.base != null ? options.base : 0;\n    while (size > 1024 && base + 1 < byteMeasure.length) {\n        size /= 1024;\n        base++;\n    }\n    size = Math.floor(size * Math.pow(10, precision)) / Math.pow(10, precision);\n    return size + ' ' + byteMeasure[base];\n});\nTemplateHelpers_1.TemplateHelpers.registerFieldHelper('translatedCaption', function (value) {\n    return FacetUtils_1.FacetUtils.tryToGetTranslatedCaption('@filetype', value);\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('loadTemplate', function (id, condition, data) {\n    if (condition === void 0) { condition = true; }\n    if (Utils_1.Utils.isNullOrUndefined(data)) {\n        data = resolveQueryResult();\n    }\n    if (condition) {\n        return TemplateCache_1.TemplateCache.getTemplate(id).instantiateToString(data, {\n            checkCondition: false\n        });\n    }\n    return '';\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('encodeCarriageReturn', function (data) {\n    if (Utils_1.Utils.isNullOrUndefined(data)) {\n        return undefined;\n    }\n    else {\n        return StringUtils_1.StringUtils.encodeCarriageReturn(data);\n    }\n});\nTemplateHelpers_1.TemplateHelpers.registerTemplateHelper('isMobileDevice', function () {\n    return DeviceUtils_1.DeviceUtils.isMobileDevice() ? DeviceUtils_1.DeviceUtils.getDeviceName() : null;\n});\nfunction resolveQueryResult() {\n    var found;\n    var resultList = Component_1.Component.getComponentRef('ResultList');\n    if (resultList) {\n        found = resultList.resultCurrentlyBeingRendered;\n    }\n    if (!found) {\n        var quickview = Component_1.Component.getComponentRef('Quickview');\n        if (quickview) {\n            found = quickview.resultCurrentlyBeingRendered;\n        }\n    }\n    return found;\n}\nfunction resolveTermsToHighlight() {\n    var currentQueryResult = resolveQueryResult();\n    if (currentQueryResult) {\n        return currentQueryResult.termsToHighlight;\n    }\n}\nfunction resolvePhrasesToHighlight() {\n    var currentQueryResult = resolveQueryResult();\n    if (currentQueryResult) {\n        return currentQueryResult.phrasesToHighlight;\n    }\n}\nfunction termsToHighlightAreDefined(termsToHighlight, phrasesToHighlight) {\n    return Utils_1.Utils.isNonEmptyArray(_.keys(termsToHighlight)) || Utils_1.Utils.isNonEmptyArray(_.keys(phrasesToHighlight));\n}\n\n\n/***/ }),\n\n/***/ 522:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 523:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResponsiveComponentsManager_1 = __webpack_require__(60);\nvar SearchInterface_1 = __webpack_require__(19);\nvar ResultList_1 = __webpack_require__(87);\nvar Dom_1 = __webpack_require__(1);\nvar Component_1 = __webpack_require__(7);\nvar Logger_1 = __webpack_require__(9);\nvar ResponsiveDefaultResultTemplate = /** @class */ (function () {\n    function ResponsiveDefaultResultTemplate(coveoRoot, ID, options, responsiveDropdown) {\n        this.coveoRoot = coveoRoot;\n        this.ID = ID;\n        this.searchInterface = Component_1.Component.get(this.coveoRoot.el, SearchInterface_1.SearchInterface, false);\n        this.currentMode = 'large';\n    }\n    ResponsiveDefaultResultTemplate.init = function (root, component, options) {\n        if (!Dom_1.$$(root).find(\".\" + Component_1.Component.computeCssClassName(ResultList_1.ResultList))) {\n            var logger = new Logger_1.Logger('ResponsiveDefaultResultTemplate');\n            logger.trace('No ResultLayout component found : Cannot instantiate ResponsiveResultLayout');\n            return;\n        }\n        ResponsiveComponentsManager_1.ResponsiveComponentsManager.register(ResponsiveDefaultResultTemplate, Dom_1.$$(root), ResultList_1.ResultList.ID, component, options);\n    };\n    ResponsiveDefaultResultTemplate.prototype.registerComponent = function (accept) {\n        if (accept instanceof ResultList_1.ResultList) {\n            this.resultList = accept;\n            return true;\n        }\n        return false;\n    };\n    ResponsiveDefaultResultTemplate.prototype.handleResizeEvent = function () {\n        var _this = this;\n        var lastResults = this.resultList.queryController.getLastResults();\n        if (this.needSmallMode()) {\n            Dom_1.$$(this.resultList.options.resultsContainer).addClass('coveo-card-layout-container');\n            Dom_1.$$(this.resultList.options.resultsContainer).removeClass(\"coveo-list-layout-container\");\n            if (this.currentMode != 'small') {\n                if (lastResults) {\n                    this.resultList.buildResults(lastResults).then(function (elements) {\n                        _this.resultList.renderResults(elements);\n                    });\n                }\n                this.currentMode = 'small';\n            }\n        }\n        else {\n            Dom_1.$$(this.resultList.options.resultsContainer).removeClass('coveo-card-layout-container');\n            Dom_1.$$(this.resultList.options.resultsContainer).addClass(\"coveo-list-layout-container\");\n            if (this.currentMode != 'large') {\n                if (lastResults) {\n                    this.resultList.buildResults(lastResults).then(function (elements) {\n                        _this.resultList.renderResults(elements);\n                    });\n                }\n                this.currentMode = 'large';\n            }\n        }\n    };\n    ResponsiveDefaultResultTemplate.prototype.needSmallMode = function () {\n        return this.coveoRoot.width() <= this.searchInterface.responsiveComponents.getSmallScreenWidth();\n    };\n    return ResponsiveDefaultResultTemplate;\n}());\nexports.ResponsiveDefaultResultTemplate = ResponsiveDefaultResultTemplate;\n\n\n/***/ }),\n\n/***/ 526:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Dom_1 = __webpack_require__(1);\nvar ResultContainer = /** @class */ (function () {\n    function ResultContainer(resultContainer, searchInterface) {\n        this.searchInterface = searchInterface;\n        this.resultContainerElement = Dom_1.$$(resultContainer);\n    }\n    ResultContainer.prototype.empty = function () {\n        this.searchInterface.detachComponentsInside(this.resultContainerElement.el);\n        Dom_1.$$(this.resultContainerElement).empty();\n    };\n    ResultContainer.prototype.addClass = function (classToAdd) {\n        this.resultContainerElement.addClass(classToAdd);\n    };\n    ResultContainer.prototype.isEmpty = function () {\n        return this.resultContainerElement.isEmpty();\n    };\n    ResultContainer.prototype.hideChildren = function () {\n        this.resultContainerElement.children().forEach(function (child) { return Dom_1.$$(child).hide(); });\n    };\n    ResultContainer.prototype.getResultElements = function () {\n        return this.resultContainerElement.findAll('.CoveoResult');\n    };\n    Object.defineProperty(ResultContainer.prototype, \"el\", {\n        get: function () {\n            return this.resultContainerElement.el;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultContainer.resultCurrentlyBeingRendered = null;\n    return ResultContainer;\n}());\nexports.ResultContainer = ResultContainer;\n\n\n/***/ }),\n\n/***/ 527:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResultListRenderer_1 = __webpack_require__(211);\nvar Dom_1 = __webpack_require__(1);\nvar _ = __webpack_require__(0);\nvar ResultListCardRenderer = /** @class */ (function (_super) {\n    __extends(ResultListCardRenderer, _super);\n    function ResultListCardRenderer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ResultListCardRenderer.prototype.getEndFragment = function (resultElements) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (!_.isEmpty(resultElements)) {\n                // with infinite scrolling, we want the additional results to append at the end of the previous query.\n                // For this, we need to remove the padding.\n                if (_this.resultListOptions.enableInfiniteScroll) {\n                    var needToBeRemoved = Dom_1.$$(_this.resultListOptions.resultsContainer).findAll('.coveo-card-layout-padding');\n                    _.each(needToBeRemoved, function (toRemove) { return Dom_1.$$(toRemove).remove(); });\n                }\n                // Used to prevent last card from spanning the grid's whole width\n                var emptyCards_1 = document.createDocumentFragment();\n                _.times(3, function () { return emptyCards_1.appendChild(Dom_1.$$('div', { className: 'coveo-card-layout coveo-card-layout-padding' }).el); });\n                resolve(emptyCards_1);\n            }\n            resolve(null);\n        });\n    };\n    return ResultListCardRenderer;\n}(ResultListRenderer_1.ResultListRenderer));\nexports.ResultListCardRenderer = ResultListCardRenderer;\n\n\n/***/ }),\n\n/***/ 528:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResultListRenderer_1 = __webpack_require__(211);\nvar TableTemplate_1 = __webpack_require__(462);\nvar Dom_1 = __webpack_require__(1);\nvar _ = __webpack_require__(0);\nvar ResultListTableRenderer = /** @class */ (function (_super) {\n    __extends(ResultListTableRenderer, _super);\n    function ResultListTableRenderer(resultListOptions, autoCreateComponentsFn) {\n        var _this = _super.call(this, resultListOptions, autoCreateComponentsFn) || this;\n        _this.resultListOptions = resultListOptions;\n        _this.autoCreateComponentsFn = autoCreateComponentsFn;\n        _this.shouldDisplayHeader = true;\n        _this.shouldDisplayFooter = false;\n        if (_this.resultListOptions.resultTemplate instanceof TableTemplate_1.TableTemplate) {\n            if (_this.resultListOptions.resultTemplate.hasTemplateWithRole('table-footer')) {\n                _this.shouldDisplayFooter = true;\n            }\n            // If custom templates are defined but no header template, do not display it.\n            if (_this.resultListOptions.resultTemplate.templates.length !== 0 &&\n                !_this.resultListOptions.resultTemplate.hasTemplateWithRole('table-header')) {\n                _this.shouldDisplayHeader = false;\n            }\n        }\n        return _this;\n    }\n    ResultListTableRenderer.prototype.getStartFragment = function (resultElements, append) {\n        if (!append && !_.isEmpty(resultElements) && this.shouldDisplayHeader) {\n            return this.renderRoledTemplate('table-header');\n        }\n    };\n    ResultListTableRenderer.prototype.getEndFragment = function (resultElements, append) {\n        if (!append && !_.isEmpty(resultElements) && this.shouldDisplayFooter) {\n            return this.renderRoledTemplate('table-footer');\n        }\n    };\n    ResultListTableRenderer.prototype.renderRoledTemplate = function (role) {\n        return __awaiter(this, void 0, void 0, function () {\n            var elem, frag;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.resultListOptions.resultTemplate.instantiateRoleToElement(role)];\n                    case 1:\n                        elem = _a.sent();\n                        Dom_1.$$(elem).addClass(\"coveo-result-list-\" + role);\n                        this.autoCreateComponentsFn(elem, undefined);\n                        frag = document.createDocumentFragment();\n                        frag.appendChild(elem);\n                        return [2 /*return*/, frag];\n                }\n            });\n        });\n    };\n    return ResultListTableRenderer;\n}(ResultListRenderer_1.ResultListRenderer));\nexports.ResultListTableRenderer = ResultListTableRenderer;\n\n\n/***/ }),\n\n/***/ 631:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [0, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__webpack_require__(522);\n__webpack_require__(523);\n__webpack_require__(524);\nvar underscore_1 = __webpack_require__(0);\nvar QueryEvents_1 = __webpack_require__(11);\nvar ResultLayoutEvents_1 = __webpack_require__(129);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar GlobalExports_1 = __webpack_require__(3);\nvar Assert_1 = __webpack_require__(5);\nvar Defer_1 = __webpack_require__(31);\nvar Model_1 = __webpack_require__(18);\nvar QueryStateModel_1 = __webpack_require__(13);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar Dom_1 = __webpack_require__(1);\nvar DomUtils_1 = __webpack_require__(91);\nvar Utils_1 = __webpack_require__(4);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Initialization_1 = __webpack_require__(2);\nvar InitializationPlaceholder_1 = __webpack_require__(177);\nvar TemplateComponentOptions_1 = __webpack_require__(61);\nvar ResponsiveDefaultResultTemplate_1 = __webpack_require__(525);\nvar CoreHelpers_1 = __webpack_require__(466);\nvar DefaultRecommendationTemplate_1 = __webpack_require__(463);\nvar DefaultResultTemplate_1 = __webpack_require__(116);\nvar TableTemplate_1 = __webpack_require__(462);\nvar TemplateCache_1 = __webpack_require__(66);\nvar TemplateList_1 = __webpack_require__(90);\nvar ResultContainer_1 = __webpack_require__(526);\nvar ResultListCardRenderer_1 = __webpack_require__(527);\nvar ResultListRenderer_1 = __webpack_require__(211);\nvar ResultListTableRenderer_1 = __webpack_require__(528);\nvar ResultListUtils_1 = __webpack_require__(111);\nvar TemplateToHtml_1 = __webpack_require__(464);\nCoreHelpers_1.CoreHelpers.exportAllHelpersGlobally(window['Coveo']);\n/**\n * The `ResultList` component is responsible for displaying query results by applying one or several result templates\n * (see [Result Templates](https://docs.coveo.com/en/413/)).\n *\n * It is possible to include multiple `ResultList` components along with a single `ResultLayout`\n * component in a search page to provide different result layouts (see\n * [Result Layouts](https://docs.coveo.com/en/360/)).\n *\n * This component supports infinite scrolling (see the\n * [`enableInfiniteScroll`]{@link ResultList.options.enableInfiniteScroll} option).\n */\nvar ResultList = /** @class */ (function (_super) {\n    __extends(ResultList, _super);\n    /**\n     * Creates a new `ResultList` component. Binds various event related to queries (e.g., on querySuccess ->\n     * renderResults). Binds scroll event if the [`enableInfiniteScroll`]{@link ResultList.options.enableInfiniteScroll}\n     * option is `true`.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `ResultList` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param elementClassId The class that this component should instantiate. Components that extend the base ResultList\n     * use this. Default value is `CoveoResultList`.\n     */\n    function ResultList(element, options, bindings, elementClassId) {\n        if (elementClassId === void 0) { elementClassId = ResultList.ID; }\n        var _this = _super.call(this, element, elementClassId, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.currentlyDisplayedResults = [];\n        _this.reachedTheEndOfResults = false;\n        _this.disableLayoutChange = false;\n        // This variable serves to block some setup where the framework fails to correctly identify the \"real\" scrolling container.\n        // Since it's not technically feasible to correctly identify the scrolling container in every possible scenario without some very complex logic, we instead try to add some kind of mechanism to\n        // block runaway requests where UI will keep asking more results in the index, eventually bringing the browser to it's knee.\n        // Those successive request are needed in \"displayMoreResults\" to ensure we fill the scrolling container correctly.\n        // Since the container is not identified correctly, it is never \"full\", so we keep asking for more.\n        // It is reset every time the user actually scroll the container manually.\n        _this.successiveScrollCount = 0;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultList, options);\n        Assert_1.Assert.exists(element);\n        Assert_1.Assert.exists(_this.options);\n        Assert_1.Assert.exists(_this.options.resultTemplate);\n        Assert_1.Assert.exists(_this.options.infiniteScrollContainer);\n        _this.showOrHideElementsDependingOnState(false, false);\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.newQuery, function (args) { return _this.handleNewQuery(); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingQuery, function (args) {\n            return _this.handleBuildingQuery(args);\n        });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.querySuccess, function (args) {\n            return _this.handleQuerySuccess(args);\n        });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.duringQuery, function (args) { return _this.handleDuringQuery(); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.queryError, function (args) { return _this.handleQueryError(); });\n        Dom_1.$$(_this.root).on(ResultListEvents_1.ResultListEvents.changeLayout, function (e, args) { return _this.handleChangeLayout(args); });\n        if (_this.options.enableInfiniteScroll) {\n            _this.handlePageChanged();\n            _this.bind.on(_this.options.infiniteScrollContainer, 'scroll', function (e) {\n                _this.successiveScrollCount = 0;\n                _this.handleScrollOfResultList();\n            });\n        }\n        _this.bind.onQueryState(Model_1.MODEL_EVENTS.CHANGE_ONE, QueryStateModel_1.QUERY_STATE_ATTRIBUTES.FIRST, function () { return _this.handlePageChanged(); });\n        _this.resultContainer = _this.initResultContainer();\n        Assert_1.Assert.exists(_this.options.resultsContainer);\n        _this.initWaitAnimationContainer();\n        Assert_1.Assert.exists(_this.options.waitAnimationContainer);\n        _this.setupTemplatesVersusLayouts();\n        Dom_1.$$(_this.root).on(ResultLayoutEvents_1.ResultLayoutEvents.populateResultLayout, function (e, args) {\n            return args.layouts.push(_this.options.layout);\n        });\n        _this.setupRenderer();\n        _this.makeElementFocusable();\n        _this.ensureHasId();\n        return _this;\n    }\n    ResultList.getDefaultTemplate = function (e) {\n        var template = ResultList.loadTemplatesFromCache();\n        if (template != null) {\n            return template;\n        }\n        var component = Component_1.Component.get(e);\n        if (Coveo['Recommendation'] && component.searchInterface instanceof Coveo['Recommendation']) {\n            return new DefaultRecommendationTemplate_1.DefaultRecommendationTemplate();\n        }\n        return new DefaultResultTemplate_1.DefaultResultTemplate();\n    };\n    ResultList.loadTemplatesFromCache = function () {\n        var pageTemplateNames = TemplateCache_1.TemplateCache.getResultListTemplateNames();\n        if (pageTemplateNames.length > 0) {\n            return new TemplateList_1.TemplateList(underscore_1.compact(underscore_1.map(pageTemplateNames, function (templateName) { return TemplateCache_1.TemplateCache.getTemplate(templateName); })));\n        }\n        return null;\n    };\n    /**\n     * Get the fields needed to be automatically included in the query for this result list.\n     * @returns {string[]}\n     */\n    ResultList.prototype.getAutoSelectedFieldsToInclude = function () {\n        return underscore_1.chain(this.options.resultTemplate.getFields()).concat(this.getMinimalFieldsToInclude()).compact().unique().value();\n    };\n    ResultList.prototype.setupTemplatesVersusLayouts = function () {\n        var _this = this;\n        var layoutClassToAdd = \"coveo-\" + this.options.layout + \"-layout-container\";\n        this.resultContainer.addClass(layoutClassToAdd);\n        if (this.options.layout === 'table') {\n            this.options.resultTemplate = new TableTemplate_1.TableTemplate(this.options.resultTemplate.templates || []);\n        }\n        // A TemplateList is the scenario where the result template are directly embedded inside the ResultList\n        // This is the typical scenario when a page gets created by the interface editor, for example.\n        // In that case, we try to stick closely that what is actually configured inside the page, and do no \"special magic\".\n        // Stick to the \"hardcoded\" configuration present in the page.\n        // We only add the correct layout options if it has not been set manually.\n        if (this.options.resultTemplate instanceof TemplateList_1.TemplateList) {\n            underscore_1.each(this.options.resultTemplate.templates, function (tmpl) {\n                if (!tmpl.layout) {\n                    tmpl.layout = _this.options.layout;\n                }\n            });\n        }\n        else if (this.options.resultTemplate instanceof DefaultResultTemplate_1.DefaultResultTemplate && this.options.layout == 'list') {\n            ResponsiveDefaultResultTemplate_1.ResponsiveDefaultResultTemplate.init(this.root, this, {});\n        }\n    };\n    /**\n     * Empties the current result list content and appends the given array of HTMLElement.\n     *\n     * Can append to existing elements in the result list, or replace them.\n     *\n     * Triggers the `newResultsDisplayed` and `newResultDisplayed` events.\n     * @param resultsElement\n     * @param append\n     */\n    ResultList.prototype.renderResults = function (resultElements, append) {\n        var _this = this;\n        if (append === void 0) { append = false; }\n        if (!append) {\n            this.resultContainer.empty();\n        }\n        return this.renderer\n            .renderResults(resultElements, append, this.triggerNewResultDisplayed.bind(this))\n            .then(function () { return _this.triggerNewResultsDisplayed(); });\n    };\n    /**\n     * Builds and returns an array of HTMLElement with the given result set.\n     * @param results the result set to build an array of HTMLElement from.\n     */\n    ResultList.prototype.buildResults = function (results) {\n        var layout = this.options.layout;\n        return this.templateToHtml.buildResults(results, layout, this.currentlyDisplayedResults);\n    };\n    /**\n     * Builds and returns an HTMLElement for the given result.\n     * @param result the result to build an HTMLElement from.\n     * @returns {HTMLElement}\n     */\n    ResultList.prototype.buildResult = function (result) {\n        var layout = this.options.layout;\n        return this.templateToHtml.buildResult(result, layout, this.currentlyDisplayedResults);\n    };\n    /**\n     * Executes a query to fetch new results. After the query returns, renders the new results.\n     *\n     * Asserts that there are more results to display by verifying whether the last query has returned as many results as\n     * requested.\n     *\n     * Asserts that the `ResultList` is not currently fetching results.\n     * @param count The number of results to fetch and display.\n     */\n    ResultList.prototype.displayMoreResults = function (count) {\n        Assert_1.Assert.isLargerOrEqualsThan(1, count);\n        if (this.isCurrentlyFetchingMoreResults()) {\n            this.logger.warn(\"Ignoring request to display more results since we're already doing so\");\n            return;\n        }\n        if (!this.hasPotentiallyMoreResultsToDisplay()) {\n            this.logger.warn(\"Ignoring request to display more results since we know there aren't more to display\");\n            return;\n        }\n        if (this.options.enableInfiniteScrollWaitingAnimation) {\n            this.showWaitingAnimationForInfiniteScrolling();\n        }\n        return this.fetchAndRenderMoreResults(count);\n    };\n    Object.defineProperty(ResultList.prototype, \"templateToHtml\", {\n        get: function () {\n            var templateToHtmlArgs = {\n                resultTemplate: this.options.resultTemplate,\n                searchInterface: this.searchInterface,\n                queryStateModel: this.queryStateModel\n            };\n            return new TemplateToHtml_1.TemplateToHtml(templateToHtmlArgs);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the list of currently displayed result.\n     * @returns {IQueryResult[]}\n     */\n    ResultList.prototype.getDisplayedResults = function () {\n        return this.currentlyDisplayedResults;\n    };\n    /**\n     * Gets the list of currently displayed result HTMLElement.\n     * @returns {HTMLElement[]}\n     */\n    ResultList.prototype.getDisplayedResultsElements = function () {\n        return this.resultContainer.getResultElements();\n    };\n    ResultList.prototype.enable = function () {\n        var _this = this;\n        _super.prototype.enable.call(this);\n        this.disableLayoutChange = false;\n        underscore_1.each(this.resultLayoutSelectors, function (resultLayoutSelector) {\n            resultLayoutSelector.enableLayouts([_this.options.layout]);\n        });\n        Dom_1.$$(this.element).removeClass('coveo-hidden');\n    };\n    ResultList.prototype.disable = function () {\n        var _this = this;\n        _super.prototype.disable.call(this);\n        var otherLayoutsStillActive = underscore_1.map(this.otherResultLists, function (otherResultList) { return otherResultList.options.layout; });\n        if (!underscore_1.contains(otherLayoutsStillActive, this.options.layout) && !this.disableLayoutChange) {\n            underscore_1.each(this.resultLayoutSelectors, function (resultLayoutSelector) {\n                resultLayoutSelector.disableLayouts([_this.options.layout]);\n            });\n        }\n        this.disableLayoutChange = false;\n        Dom_1.$$(this.element).addClass('coveo-hidden');\n    };\n    ResultList.prototype.autoCreateComponentsInsideResult = function (element, result) {\n        return this.templateToHtml.autoCreateComponentsInsideResult(element, result);\n    };\n    ResultList.prototype.triggerNewResultDisplayed = function (result, resultElement) {\n        var args = {\n            result: result,\n            item: resultElement\n        };\n        Dom_1.$$(this.element).trigger(ResultListEvents_1.ResultListEvents.newResultDisplayed, args);\n    };\n    ResultList.prototype.triggerNewResultsDisplayed = function () {\n        var args = {\n            isInfiniteScrollEnabled: this.options.enableInfiniteScroll\n        };\n        Dom_1.$$(this.element).trigger(ResultListEvents_1.ResultListEvents.newResultsDisplayed, args);\n    };\n    ResultList.prototype.fetchAndRenderMoreResults = function (count) {\n        return __awaiter(this, void 0, void 0, function () {\n            var data, e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.fetchingMoreResults = this.queryController.fetchMore(count);\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.fetchingMoreResults];\n                    case 2:\n                        data = _a.sent();\n                        Assert_1.Assert.exists(data);\n                        this.usageAnalytics.logCustomEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.pagerScrolling, {}, this.element);\n                        this.reachedTheEndOfResults = count > data.results.length;\n                        this.renderNewResults(data);\n                        this.resetStateAfterFetchingMoreResults();\n                        return [2 /*return*/, data];\n                    case 3:\n                        e_1 = _a.sent();\n                        this.resetStateAfterFetchingMoreResults();\n                        return [2 /*return*/, Promise.reject(e_1)];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ResultList.prototype.renderNewResults = function (data) {\n        return __awaiter(this, void 0, void 0, function () {\n            var elements, _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this.buildResults(data)];\n                    case 1:\n                        elements = _b.sent();\n                        this.renderResults(elements, true);\n                        (_a = this.currentlyDisplayedResults).push.apply(_a, data.results);\n                        this.triggerNewResultsDisplayed();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ResultList.prototype.resetStateAfterFetchingMoreResults = function () {\n        var _this = this;\n        this.hideWaitingAnimationForInfiniteScrolling();\n        this.fetchingMoreResults = undefined;\n        Defer_1.Defer.defer(function () {\n            _this.successiveScrollCount++;\n            if (_this.successiveScrollCount <= ResultList.MAX_AMOUNT_OF_SUCESSIVE_REQUESTS) {\n                _this.handleScrollOfResultList();\n            }\n            else {\n                _this.logger.info(\"Result list has triggered 5 consecutive queries to try and fill up the scrolling container, but it is still unable to do so.\\n          Try explicitly setting the 'data-infinite-scroll-container-selector' option on the result list. See: https://coveo.github.io/search-ui/components/resultlist.html#options.infinitescrollcontainer\");\n            }\n        });\n    };\n    ResultList.prototype.handleDuringQuery = function () {\n        this.logger.trace('Emptying the result container');\n        this.cancelFetchingMoreResultsIfNeeded();\n        this.showWaitingAnimation();\n        this.showOrHideElementsDependingOnState(false, false);\n    };\n    ResultList.prototype.handleQueryError = function () {\n        this.hideWaitingAnimation();\n        this.resultContainer.empty();\n        this.currentlyDisplayedResults = [];\n        this.reachedTheEndOfResults = true;\n    };\n    ResultList.prototype.handleQuerySuccess = function (data) {\n        var _this = this;\n        Assert_1.Assert.exists(data);\n        Assert_1.Assert.exists(data.results);\n        var results = data.results;\n        this.logger.trace('Received query results from new query', results);\n        this.hideWaitingAnimation();\n        ResultList.resultCurrentlyBeingRendered = undefined;\n        this.reachedTheEndOfResults = data.query.numberOfResults > data.results.results.length;\n        this.currentlyDisplayedResults = [];\n        this.buildResults(data.results).then(function (elements) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.renderResults(elements)];\n                    case 1:\n                        _a.sent();\n                        this.showOrHideElementsDependingOnState(true, this.currentlyDisplayedResults.length != 0);\n                        if (DeviceUtils_1.DeviceUtils.isMobileDevice() && this.options.mobileScrollContainer != undefined) {\n                            this.options.mobileScrollContainer.scrollTop = 0;\n                        }\n                        if (this.options.enableInfiniteScroll && results.results.length == data.queryBuilder.numberOfResults) {\n                            // This will check right away if we need to add more results to make the scroll container full & scrolling.\n                            this.scrollToTopIfEnabled();\n                            this.handleScrollOfResultList();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    ResultList.prototype.handleScrollOfResultList = function () {\n        if (this.isCurrentlyFetchingMoreResults() || !this.options.enableInfiniteScroll) {\n            return;\n        }\n        if (this.isScrollingOfResultListAlmostAtTheBottom() && this.hasPotentiallyMoreResultsToDisplay()) {\n            this.displayMoreResults(this.options.infiniteScrollPageSize);\n        }\n    };\n    ResultList.prototype.handlePageChanged = function () {\n        var _this = this;\n        this.bind.onRootElement(QueryEvents_1.QueryEvents.deferredQuerySuccess, function () {\n            setTimeout(function () {\n                _this.scrollToTopIfEnabled();\n            }, 0);\n        });\n    };\n    ResultList.prototype.scrollToTopIfEnabled = function () {\n        if (!this.options.enableScrollToTop) {\n            return;\n        }\n        ResultListUtils_1.ResultListUtils.scrollToTop(this.root);\n    };\n    ResultList.prototype.handleNewQuery = function () {\n        Dom_1.$$(this.element).removeClass('coveo-hidden');\n        ResultList.resultCurrentlyBeingRendered = undefined;\n    };\n    Object.defineProperty(ResultList.prototype, \"otherResultLists\", {\n        get: function () {\n            var allResultLists = this.searchInterface.getComponents(ResultList.ID);\n            return underscore_1.without(allResultLists, this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResultList.prototype, \"resultLayoutSelectors\", {\n        get: function () {\n            return this.searchInterface.getComponents('ResultLayoutSelector');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultList.prototype.handleBuildingQuery = function (args) {\n        if (this.options.fieldsToInclude != null) {\n            // remove the @\n            args.queryBuilder.addFieldsToInclude(underscore_1.map(this.options.fieldsToInclude, function (field) { return field.substr(1); }));\n        }\n        if (this.options.autoSelectFieldsToInclude) {\n            var otherFields = underscore_1.flatten(underscore_1.map(this.otherResultLists, function (otherResultList) {\n                return otherResultList.getAutoSelectedFieldsToInclude();\n            }));\n            args.queryBuilder.addRequiredFields(underscore_1.unique(otherFields.concat(this.getAutoSelectedFieldsToInclude())));\n            args.queryBuilder.includeRequiredFields = true;\n        }\n    };\n    ResultList.prototype.handleChangeLayout = function (args) {\n        var _this = this;\n        if (args.layout === this.options.layout) {\n            this.disableLayoutChange = false;\n            this.enable();\n            this.options.resultTemplate.layout = this.options.layout;\n            if (args.results) {\n                // Prevent flickering when switching to a new layout that is empty\n                // add a temporary placeholder, the same that is used on initialization\n                if (this.resultContainer.isEmpty()) {\n                    new InitializationPlaceholder_1.InitializationPlaceholder(this.root).withVisibleRootElement().withPlaceholderForResultList();\n                }\n                Defer_1.Defer.defer(function () { return __awaiter(_this, void 0, void 0, function () {\n                    var elements;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0: return [4 /*yield*/, this.buildResults(args.results)];\n                            case 1:\n                                elements = _a.sent();\n                                this.renderResults(elements);\n                                this.showOrHideElementsDependingOnState(true, this.currentlyDisplayedResults.length !== 0);\n                                return [2 /*return*/];\n                        }\n                    });\n                }); });\n            }\n        }\n        else {\n            this.disableLayoutChange = true;\n            this.disable();\n            this.resultContainer.empty();\n        }\n    };\n    ResultList.prototype.isCurrentlyFetchingMoreResults = function () {\n        return Utils_1.Utils.exists(this.fetchingMoreResults);\n    };\n    ResultList.prototype.getMinimalFieldsToInclude = function () {\n        // these fields are needed for analytics click event\n        return ['author', 'language', 'urihash', 'objecttype', 'collection', 'source', 'language', 'permanentid'];\n    };\n    ResultList.prototype.isScrollingOfResultListAlmostAtTheBottom = function () {\n        // this is in a try catch because the unit test fail otherwise (Window does not exist for phantom js in the console)\n        var isWindow;\n        try {\n            isWindow = this.options.infiniteScrollContainer instanceof Window;\n        }\n        catch (e) {\n            isWindow = false;\n        }\n        return isWindow ? this.isScrollAtBottomForWindowElement() : this.isScrollAtBottomForHtmlElement();\n    };\n    ResultList.prototype.isScrollAtBottomForWindowElement = function () {\n        var win = new Dom_1.Win(window);\n        var windowHeight = win.height();\n        var scrollTop = win.scrollY();\n        var bodyHeight = new Dom_1.Doc(document).height();\n        return bodyHeight - (windowHeight + scrollTop) < windowHeight / 2;\n    };\n    ResultList.prototype.isScrollAtBottomForHtmlElement = function () {\n        var el = this.options.infiniteScrollContainer;\n        var elementHeight = el.clientHeight;\n        var scrollHeight = el.scrollHeight;\n        var bottomPosition = el.scrollTop + elementHeight;\n        return scrollHeight - bottomPosition < elementHeight / 2;\n    };\n    ResultList.prototype.hasPotentiallyMoreResultsToDisplay = function () {\n        return this.currentlyDisplayedResults.length > 0 && !this.reachedTheEndOfResults;\n    };\n    ResultList.prototype.cancelFetchingMoreResultsIfNeeded = function () {\n        if (this.isCurrentlyFetchingMoreResults()) {\n            this.logger.trace('Cancelling fetching more results');\n            Promise.reject(this.fetchingMoreResults);\n            this.fetchingMoreResults = undefined;\n        }\n    };\n    ResultList.prototype.showOrHideElementsDependingOnState = function (hasQuery, hasResults) {\n        var showIfQuery = Dom_1.$$(this.element).findAll('.coveo-show-if-query');\n        var showIfNoQuery = Dom_1.$$(this.element).findAll('.coveo-show-if-no-query');\n        var showIfResults = Dom_1.$$(this.element).findAll('.coveo-show-if-results');\n        var showIfNoResults = Dom_1.$$(this.element).findAll('.coveo-show-if-no-results');\n        underscore_1.each(showIfQuery, function (s) {\n            Dom_1.$$(s).toggle(hasQuery);\n        });\n        underscore_1.each(showIfNoQuery, function (s) {\n            Dom_1.$$(s).toggle(!hasQuery);\n        });\n        underscore_1.each(showIfResults, function (s) {\n            Dom_1.$$(s).toggle(hasQuery && hasResults);\n        });\n        underscore_1.each(showIfNoResults, function (s) {\n            Dom_1.$$(s).toggle(hasQuery && !hasResults);\n        });\n    };\n    Object.defineProperty(ResultList.prototype, \"waitAnimation\", {\n        get: function () {\n            return this.options.waitAnimation.toLowerCase();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultList.prototype.showWaitingAnimation = function () {\n        switch (this.waitAnimation) {\n            case 'fade':\n                Dom_1.$$(this.options.waitAnimationContainer).addClass('coveo-fade-out');\n                break;\n            case 'spinner':\n                this.resultContainer.hideChildren();\n                if (Dom_1.$$(this.options.waitAnimationContainer).find('.coveo-wait-animation') == undefined) {\n                    this.options.waitAnimationContainer.appendChild(DomUtils_1.DomUtils.getBasicLoadingAnimation());\n                }\n                break;\n        }\n    };\n    ResultList.prototype.hideWaitingAnimation = function () {\n        switch (this.waitAnimation) {\n            case 'fade':\n                Dom_1.$$(this.options.waitAnimationContainer).removeClass('coveo-fade-out');\n                break;\n            case 'spinner':\n                var spinner = Dom_1.$$(this.options.waitAnimationContainer).find('.coveo-loading-spinner');\n                if (spinner) {\n                    Dom_1.$$(spinner).detach();\n                }\n                break;\n        }\n    };\n    ResultList.prototype.showWaitingAnimationForInfiniteScrolling = function () {\n        var spinner = DomUtils_1.DomUtils.getLoadingSpinner();\n        if (this.options.layout == 'card' && this.options.enableInfiniteScroll) {\n            var previousSpinnerContainer = Dom_1.$$(this.options.waitAnimationContainer).findAll('.coveo-loading-spinner-container');\n            underscore_1.each(previousSpinnerContainer, function (previousSpinner) { return Dom_1.$$(previousSpinner).remove(); });\n            var spinnerContainer = Dom_1.$$('div', {\n                className: 'coveo-loading-spinner-container'\n            });\n            spinnerContainer.append(spinner);\n            this.options.waitAnimationContainer.appendChild(spinnerContainer.el);\n        }\n        else {\n            this.options.waitAnimationContainer.appendChild(DomUtils_1.DomUtils.getLoadingSpinner());\n        }\n    };\n    ResultList.prototype.hideWaitingAnimationForInfiniteScrolling = function () {\n        var spinners = Dom_1.$$(this.options.waitAnimationContainer).findAll('.coveo-loading-spinner');\n        var containers = Dom_1.$$(this.options.waitAnimationContainer).findAll('.coveo-loading-spinner-container');\n        underscore_1.each(spinners, function (spinner) { return Dom_1.$$(spinner).remove(); });\n        underscore_1.each(containers, function (container) { return Dom_1.$$(container).remove(); });\n    };\n    ResultList.prototype.initResultContainer = function () {\n        if (!this.options.resultsContainer) {\n            var elemType = this.options.layout === 'table' ? 'table' : 'div';\n            this.options.resultsContainer = Dom_1.$$(elemType, { className: 'coveo-result-list-container' }).el;\n            this.initResultContainerAddToDom();\n        }\n        return new ResultContainer_1.ResultContainer(this.options.resultsContainer, this.searchInterface);\n    };\n    ResultList.prototype.initResultContainerAddToDom = function () {\n        this.element.appendChild(this.options.resultsContainer);\n    };\n    ResultList.prototype.initWaitAnimationContainer = function () {\n        if (!this.options.waitAnimationContainer) {\n            this.options.waitAnimationContainer = this.resultContainer.el;\n        }\n    };\n    ResultList.prototype.setupRenderer = function () {\n        var initParameters = {\n            options: this.searchInterface.options.originalOptionsObject,\n            bindings: this.bindings\n        };\n        var autoCreateComponentsFn = function (elem) { return Initialization_1.Initialization.automaticallyCreateComponentsInside(elem, initParameters); };\n        switch (this.options.layout) {\n            case 'card':\n                this.renderer = new ResultListCardRenderer_1.ResultListCardRenderer(this.options, autoCreateComponentsFn);\n                break;\n            case 'table':\n                this.renderer = new ResultListTableRenderer_1.ResultListTableRenderer(this.options, autoCreateComponentsFn);\n                break;\n            case 'list':\n            default:\n                this.renderer = new ResultListRenderer_1.ResultListRenderer(this.options, autoCreateComponentsFn);\n                break;\n        }\n    };\n    ResultList.prototype.makeElementFocusable = function () {\n        Dom_1.$$(this.element).setAttribute('tabindex', '-1');\n    };\n    ResultList.prototype.ensureHasId = function () {\n        var currentId = this.element.id;\n        if (currentId === '') {\n            this.element.id = underscore_1.uniqueId('coveo-result-list');\n        }\n    };\n    ResultList.ID = 'ResultList';\n    ResultList.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            ResultList: ResultList\n        });\n    };\n    /**\n     * The options for the ResultList\n     * @componentOptions\n     */\n    ResultList.options = {\n        /**\n         * The element inside which to insert the rendered result templates.\n         *\n         * Performing a new query clears the content of this element.\n         *\n         * You can change the container by specifying its selector (e.g.,\n         * `data-result-container-selector='#someCssSelector'`).\n         *\n         * If you specify no value for this option, a `div` element will be dynamically created and appended to the result\n         * list. This element will then be used as a result container.\n         */\n        resultsContainer: ComponentOptions_1.ComponentOptions.buildChildHtmlElementOption({ alias: 'resultContainerSelector' }),\n        resultTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({ defaultFunction: ResultList.getDefaultTemplate }),\n        /**\n         * The type of animation to display while waiting for a query to return.\n         *\n         * The possible values are:\n         * - `fade`: Fades out the current list of results while the query is executing.\n         * - `spinner`: Shows a spinning animation while the query is executing.\n         * - `none`: Use no animation during queries.\n         *\n         * See also the [`waitAnimationContainer`]{@link ResultList.options.waitAnimationContainer} option.\n         *\n         * @examples spinner\n         */\n        waitAnimation: ComponentOptions_1.ComponentOptions.buildStringOption({ defaultValue: 'none' }),\n        /**\n         * The element inside which to display the [`waitAnimation`]{@link ResultList.options.waitAnimation}.\n         *\n         * You can change this by specifying a CSS selector (e.g.,\n         * `data-wait-animation-container-selector='#someCssSelector'`).\n         *\n         * Defaults to the value of the [`resultsContainer`]{@link ResultList.options.resultsContainer} option.\n         */\n        waitAnimationContainer: ComponentOptions_1.ComponentOptions.buildChildHtmlElementOption({\n            postProcessing: function (value, options) { return value || options.resultsContainer; }\n        }),\n        /**\n         * Whether to automatically retrieve an additional page of results and append it to the\n         * results that the `ResultList` is currently displaying when the user scrolls down to the bottom of the\n         * [`infiniteScrollContainer`]{@link ResultList.options.infiniteScrollContainer}.\n         *\n         * See also the [`infiniteScrollPageSize`]{@link ResultList.options.infiniteScrollPageSize} and\n         * [`enableInfiniteScrollWaitingAnimation`]{@link ResultList.options.enableInfiniteScrollWaitingAnimation} options.\n         *\n         * It is important to specify the `infiniteScrollContainer` option manually if you want the scrolling element to be\n         * something else than the default `window` element. Otherwise, you might find yourself in a strange state where the\n         * framework rapidly triggers multiple successive query.\n         */\n        enableInfiniteScroll: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * The number of additional results to fetch when the user scrolls down to the bottom of the\n         * [`infiniteScrollContainer`]{@link ResultList.options.infiniteScrollContainer}.\n         *\n         * @examples 5\n         */\n        infiniteScrollPageSize: ComponentOptions_1.ComponentOptions.buildNumberOption({\n            defaultValue: 10,\n            min: 1,\n            depend: 'enableInfiniteScroll'\n        }),\n        /**\n         * The element that triggers fetching additional results when the end user scrolls down to its bottom.\n         *\n         * You can change the container by specifying its selector (e.g.,\n         * `data-infinite-scroll-container-selector='#someCssSelector'`).\n         *\n         * By default, the framework uses the first vertically scrollable parent element it finds, starting from the\n         * `ResultList` element itself. A vertically scrollable element is an element whose CSS `overflow-y` attribute is\n         * `scroll`.\n         *\n         * This implies that if the framework can find no scrollable parent, it uses the `window` itself as a scrollable\n         * container.\n         *\n         * This heuristic is not perfect, for technical reasons. There are always some corner case CSS combination which the\n         * framework will not be able to correctly detect as 'scrollable'.\n         *\n         * It is highly recommended that you manually set this option if you wish something else than the `window` to be the\n         * scrollable element.\n         */\n        infiniteScrollContainer: ComponentOptions_1.ComponentOptions.buildChildHtmlElementOption({\n            depend: 'enableInfiniteScroll',\n            defaultFunction: function (element) { return ComponentOptions_1.ComponentOptions.findParentScrolling(element); }\n        }),\n        /**\n         * Whether to display the [`waitingAnimation`]{@link ResultList.options.waitAnimation} while fetching additional\n         * results.\n         */\n        enableInfiniteScrollWaitingAnimation: ComponentOptions_1.ComponentOptions.buildBooleanOption({\n            depend: 'enableInfiniteScroll',\n            defaultValue: true\n        }),\n        mobileScrollContainer: ComponentOptions_1.ComponentOptions.buildSelectorOption({\n            defaultFunction: function () { return document.querySelector('.coveo-results-column'); }\n        }),\n        /**\n         * Whether the `ResultList` should scan its result templates to discover which fields it must request to\n         * be able to render all results.\n         *\n         * Setting this option to `true` ensures that the Coveo Search API does not return fields that are unnecessary for\n         * the UI to function.\n         *\n         * **Notes:**\n         *\n         * - Many interfaces created with the JavaScript Search Interface Editor explicitly set this option to `true`.\n         * - You cannot set this option to `true` in the Coveo for Sitecore integration.\n         */\n        autoSelectFieldsToInclude: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * A list of fields to include in the query results.\n         *\n         * If you set the [`autoSelectFieldsToInclude`]{@link ResultList.options.autoSelectFieldsToInclude} option to\n         * `true`, the Coveo Search API returns the fields you specify for this option (if those fields are available) in\n         * addition to the fields which the `ResultList` automatically requests.\n         *\n         * Otherwise, the Coveo Search API only returns the fields you specify for this option (if those fields are\n         * available), unless you leave this option undefined, in which case the Coveo Search API returns all available\n         * fields.\n         */\n        fieldsToInclude: ComponentOptions_1.ComponentOptions.buildFieldsOption({ includeInResults: true }),\n        /**\n         * Specifies the layout to use when displaying results in this `ResultList` (see\n         * [Result Layouts](https://docs.coveo.com/en/360/)). Specifying a value for this option automatically\n         * populates a [`ResultLayout`]{@link ResultLayout} component with a switcher for the layout.\n         *\n         * For example, if there are two `ResultList` components in the page, one with its `layout` set to `list` and the\n         * other with the same option set to `card`, then the `ResultLayout` component will render two buttons respectively\n         * entitled **List** and **Card**.\n         *\n         * See the [`ValidLayout`]{@link ValidLayout} type for the list of possible values.\n         *\n         * @examples card\n         */\n        layout: ComponentOptions_1.ComponentOptions.buildStringOption({\n            defaultValue: 'list',\n            required: true\n        }),\n        /**\n         * Whether to scroll back to the top of the page when the end-user interacts with a facet.\n         *\n         * **Note:** Setting this option to `false` has no effect on dynamic facets. To disable this behavior on a `DynamicFacet` component, you must set its own [`enableScrollToTop`]{@link DynamicFacet.options.enableScrollToTop} option to `false`.\n         *\n         * @availablesince [July 2019 Release (v2.6459)](https://docs.coveo.com/en/2938/)\n         */\n        enableScrollToTop: ComponentOptions_1.ComponentOptions.buildBooleanOption({\n            defaultValue: true,\n            depend: 'enableInfiniteScroll'\n        })\n    };\n    ResultList.resultCurrentlyBeingRendered = null;\n    ResultList.MAX_AMOUNT_OF_SUCESSIVE_REQUESTS = 5;\n    return ResultList;\n}(Component_1.Component));\nexports.ResultList = ResultList;\nInitialization_1.Initialization.registerAutoCreateComponent(ResultList);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Pager.min__45edc409d97327d59af1.js","import { Component } from '../ui/Base/Component';\nimport { ResultList } from '../ui/ResultList/ResultList';\nimport { $$ } from './Dom';\nimport { find } from 'underscore';\nimport { Logger } from '../misc/Logger';\n\nexport class ResultListUtils {\n  public static hideIfInfiniteScrollEnabled(cmp: Component) {\n    const infiniteScrollEnabled = ResultListUtils.isInfiniteScrollEnabled(cmp.searchInterface.element);\n\n    if (infiniteScrollEnabled) {\n      cmp.disable();\n      $$(cmp.element).hide();\n      ResultListUtils.warnIfComponentNotNeeded(cmp);\n    } else {\n      cmp.enable();\n      $$(cmp.element).unhide();\n    }\n  }\n\n  public static isInfiniteScrollEnabled(root: HTMLElement) {\n    const resultList = ResultListUtils.getActiveResultList(root);\n    return resultList ? !!resultList.options.enableInfiniteScroll : false;\n  }\n\n  public static scrollToTop(root: HTMLElement) {\n    const resultList = ResultListUtils.getActiveResultList(root);\n    if (!resultList) {\n      new Logger(this).warn('No active ResultList, scrolling to the top of the Window');\n      return window.scrollTo(0, 0);\n    }\n\n    const searchInterfacePosition = resultList.searchInterface.element.getBoundingClientRect().top;\n    if (searchInterfacePosition > 0) {\n      return;\n    }\n\n    const scrollContainer = resultList.options.infiniteScrollContainer;\n\n    if (typeof scrollContainer.scrollTo === 'function') {\n      scrollContainer.scrollTo(0, window.pageYOffset + searchInterfacePosition);\n    } else {\n      (<HTMLElement>scrollContainer).scrollTop = 0;\n    }\n  }\n\n  private static getActiveResultList(root: HTMLElement) {\n    const resultLists = ResultListUtils.getResultLists(root);\n    return find(resultLists, resultList => !resultList.disabled);\n  }\n\n  private static getResultLists(root: HTMLElement) {\n    return $$(root)\n      .findAll(`.${ResultListUtils.cssClass()}`)\n      .map(el => <ResultList>Component.get(el, ResultList));\n  }\n\n  private static cssClass() {\n    return Component.computeCssClassName(ResultList);\n  }\n\n  private static warnIfComponentNotNeeded(cmp: Component) {\n    const root = cmp.searchInterface.root;\n    const allListsUseInfiniteScroll = ResultListUtils.allResultListsUseInfiniteScroll(root);\n\n    allListsUseInfiniteScroll && ResultListUtils.notNeededComponentWarning(cmp);\n  }\n\n  private static allResultListsUseInfiniteScroll(root: HTMLElement) {\n    const listsWithInfiniteScrollDisabled = ResultListUtils.getResultLists(root).filter(\n      resultList => !resultList.options.enableInfiniteScroll\n    );\n\n    return listsWithInfiniteScrollDisabled.length === 0;\n  }\n\n  private static notNeededComponentWarning(cmp: Component) {\n    const cmpCssClass = Component.computeCssClassNameForType(cmp.type);\n    const message = `The ${cmpCssClass} component is not needed because all ${ResultListUtils.cssClass()} components have enableInfiniteScroll set to 'true'.\n    For the best performance, remove the ${cmpCssClass} component from your search page.`;\n\n    new Logger(cmp).warn(message);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/ResultListUtils.ts","import { IQueryResult } from '../../rest/QueryResult';\nimport { Component } from '../Base/Component';\nimport { IResultListOptions } from './ResultListOptions';\nimport _ = require('underscore');\n\nexport class ResultListRenderer {\n  constructor(protected resultListOptions: IResultListOptions, protected autoCreateComponentsFn: Function) {}\n\n  renderResults(\n    resultElements: HTMLElement[],\n    append = false,\n    resultDisplayedCallback: (result: IQueryResult, resultElem: HTMLElement) => any\n  ) {\n    return Promise.all([this.getStartFragment(resultElements, append), this.getEndFragment(resultElements, append)]).then(\n      ([startFrag, endFrag]) => {\n        const resultsFragment = document.createDocumentFragment();\n        if (startFrag) {\n          resultsFragment.appendChild(startFrag);\n        }\n        _.each(resultElements, resultElement => {\n          resultsFragment.appendChild(resultElement);\n          resultDisplayedCallback(Component.getResult(resultElement), resultElement);\n        });\n        if (endFrag) {\n          resultsFragment.appendChild(endFrag);\n        }\n        this.resultListOptions.resultsContainer.appendChild(resultsFragment);\n      }\n    );\n  }\n\n  protected getStartFragment(resultElements: HTMLElement[], append: boolean): Promise<DocumentFragment> {\n    return Promise.resolve(document.createDocumentFragment());\n  }\n\n  protected getEndFragment(resultElements: HTMLElement[], append: boolean): Promise<DocumentFragment> {\n    return Promise.resolve(document.createDocumentFragment());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultList/ResultListRenderer.ts","import 'styling/_Pager';\nimport {\n  IBuildingQueryEventArgs,\n  INewQueryEventArgs,\n  INoResultsEventArgs,\n  IQuerySuccessEventArgs,\n  QueryEvents\n} from '../../events/QueryEvents';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { exportGlobally } from '../../GlobalExports';\nimport { Assert } from '../../misc/Assert';\nimport { IAttributeChangedEventArg, MODEL_EVENTS } from '../../models/Model';\nimport { QueryStateModel, QUERY_STATE_ATTRIBUTES } from '../../models/QueryStateModel';\nimport { l } from '../../strings/Strings';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { $$ } from '../../utils/Dom';\nimport { ResultListUtils } from '../../utils/ResultListUtils';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { analyticsActionCauseList, IAnalyticsActionCause, IAnalyticsPagerMeta } from '../Analytics/AnalyticsActionListMeta';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Initialization } from '../Base/Initialization';\n\nexport interface IPagerOptions {\n  numberOfPages: number;\n  enableNavigationButton: boolean;\n  maxNumberOfPages: number;\n  maximumNumberOfResultsFromIndex: number;\n}\n\n/**\n * The Pager component attaches itself to a `div` element and renders widgets that allow the end user to navigate\n * through the different result pages.\n *\n * This component takes care of triggering a query with the correct result range whenever the end user selects a page or\n * uses the navigation buttons (**Previous** and **Next**).\n */\nexport class Pager extends Component {\n  static ID = 'Pager';\n\n  static doExport = () => {\n    exportGlobally({\n      Pager: Pager\n    });\n  };\n\n  /**\n   * The options for the Pager\n   * @componentOptions\n   */\n  static options: IPagerOptions = {\n    /**\n     * Specifies how many page links to display in the pager.\n     *\n     * Default value is `5` on a desktop computers and `3` on a mobile device. Minimum value is `1`.\n     */\n    numberOfPages: ComponentOptions.buildNumberOption({\n      defaultFunction: () => {\n        if (DeviceUtils.isMobileDevice()) {\n          return 3;\n        } else {\n          return 5;\n        }\n      },\n      min: 1\n    }),\n\n    /**\n     * Specifies whether the **Previous** and **Next** buttons should appear at each end of the pager when appropriate.\n     *\n     * The default value is `true`.\n     */\n    enableNavigationButton: ComponentOptions.buildBooleanOption({ defaultValue: true }),\n\n    /**\n     * Specifies the maximum number of pages to display if enough results are available.\n     *\n     * This property is typically set when the default number of accessible results from the index has been changed from its default value of `1000` (10 results per page X 100 `maxNumberOfPages`).\n     * Default value is `100`\n     *\n     * @deprecated This is a deprecated option. The `Pager` now automatically adapts itself on each new query, so you no longer need to specify a value for this option. However, if the default maximum number of accessible results value was changed on your Coveo index, you should use the [`maximumNumberOfResultsFromIndex`]{@link Pager.options.maximumNumberOfResultsFromIndex} option to specify the new value.\n     */\n    maxNumberOfPages: ComponentOptions.buildNumberOption({\n      defaultValue: undefined,\n      deprecated:\n        'This is a deprecated option. The pager will automatically adapt itself on each new query. You no longer need to specify this option. Use maximumNumberOfResultsFromIndex instead.'\n    }),\n    /**\n     * Specifies the maximum number of results that the index can return for any query.\n     *\n     * Default value is `1000` in a Coveo index.\n     *\n     * If this value was modified in your Coveo index, you must specify the new value in this option for the Pager component to work properly\n     */\n    maximumNumberOfResultsFromIndex: ComponentOptions.buildNumberOption({\n      defaultValue: 1000\n    })\n  };\n\n  private listenToQueryStateChange = true;\n  private ignoreNextQuerySuccess = false;\n\n  private _currentPage: number;\n\n  // The normal behavior of this component is to reset to page 1 when a new\n  // query is performed by other components (i.e. not pagers).\n  //\n  // This behavior is overridden when the 'first' state is\n  // programmatically modified.\n  private needToReset = true;\n\n  private list: HTMLElement;\n\n  /**\n   * Creates a new Pager. Binds multiple query events ({@link QueryEvents.newQuery}, {@link QueryEvents.buildingQuery},\n   * {@link QueryEvents.querySuccess}, {@link QueryEvents.queryError} and {@link QueryEvents.noResults}. Renders itself\n   * on every query success.\n   * @param element The HTMLElement on which to instantiate the component (normally a `div`).\n   * @param options The options for the Pager component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options?: IPagerOptions, bindings?: IComponentBindings) {\n    super(element, Pager.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, Pager, options);\n    this.currentPage = 1;\n\n    this.bind.onRootElement(QueryEvents.newQuery, (args: INewQueryEventArgs) => this.handleNewQuery(args));\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\n    this.bind.onRootElement(QueryEvents.querySuccess, (args: IQuerySuccessEventArgs) => this.handleQuerySuccess(args));\n    this.bind.onRootElement(QueryEvents.queryError, () => this.handleQueryError());\n    this.bind.onRootElement(QueryEvents.noResults, (args: INoResultsEventArgs) => this.handleNoResults(args));\n    this.bind.onQueryState(MODEL_EVENTS.CHANGE_ONE, QUERY_STATE_ATTRIBUTES.FIRST, (data: IAttributeChangedEventArg) =>\n      this.handleQueryStateFirstResultChanged(data)\n    );\n    this.bind.onQueryState(MODEL_EVENTS.CHANGE_ONE, QUERY_STATE_ATTRIBUTES.NUMBER_OF_RESULTS, (data: IAttributeChangedEventArg) =>\n      this.handleQueryStateNumberOfResultsPerPageChanged(data)\n    );\n    this.addAlwaysActiveListeners();\n\n    this.list = $$('ul', {\n      className: 'coveo-pager-list',\n      role: 'navigation',\n      ariaLabel: l('Pagination')\n    }).el;\n    element.appendChild(this.list);\n  }\n\n  /**\n   * The current page (1-based index).\n   */\n  public get currentPage(): number {\n    return this._currentPage;\n  }\n\n  public set currentPage(value: number) {\n    let sanitizedValue = value;\n\n    if (isNaN(value)) {\n      this.logger.warn(`Unable to set pager current page to an invalid value: ${value}. Resetting to 1.`);\n      sanitizedValue = 1;\n    }\n\n    sanitizedValue = Math.max(Math.min(sanitizedValue, this.getMaxNumberOfPagesForCurrentResultsPerPage()), 1);\n    sanitizedValue = Math.floor(sanitizedValue);\n\n    this._currentPage = sanitizedValue;\n  }\n\n  /**\n   * Sets the current page, then executes a query.\n   *\n   * Also logs an event in the usage analytics (`pageNumber` by default) with the new current page number as meta data.\n   *\n   * @param pageNumber The page number to navigate to.\n   * @param analyticCause The event to log in the usage analytics.\n   */\n  public setPage(pageNumber: number, analyticCause: IAnalyticsActionCause = analyticsActionCauseList.pagerNumber) {\n    Assert.exists(pageNumber);\n    this.currentPage = pageNumber;\n    this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n    this.usageAnalytics.logCustomEvent<IAnalyticsPagerMeta>(analyticCause, { pagerNumber: this.currentPage }, this.element);\n    this.queryController.executeQuery({\n      ignoreWarningSearchEvent: true,\n      keepLastSearchUid: true,\n      origin: this\n    });\n  }\n\n  /**\n   * Navigates to the previous page, then executes a query.\n   *\n   * Also logs the `pagePrevious` event in the usage analytics with the new current page number as meta data.\n   */\n  public previousPage() {\n    this.setPage(this.currentPage - 1, analyticsActionCauseList.pagerPrevious);\n  }\n\n  /**\n   * Navigates to the next page, then executes a query.\n   *\n   * Also logs the `pageNext` event in the usage analytics with the new current page number as meta data.\n   */\n  public nextPage() {\n    this.setPage(this.currentPage + 1, analyticsActionCauseList.pagerNext);\n  }\n\n  private addAlwaysActiveListeners() {\n    this.searchInterface.element.addEventListener(ResultListEvents.newResultsDisplayed, () =>\n      ResultListUtils.hideIfInfiniteScrollEnabled(this)\n    );\n  }\n\n  private getMaxNumberOfPagesForCurrentResultsPerPage() {\n    return Math.ceil(this.options.maximumNumberOfResultsFromIndex / this.searchInterface.resultsPerPage);\n  }\n\n  private handleNewQuery(data: INewQueryEventArgs) {\n    const triggeredByPagerOrDebugMode = data && data.origin && (data.origin.type == Pager.ID || data.origin.type == 'Debug');\n    if (this.needToReset && !triggeredByPagerOrDebugMode) {\n      this.currentPage = 1;\n      this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n    }\n    this.needToReset = true;\n  }\n\n  private updateQueryStateModel(attrValue: number) {\n    this.listenToQueryStateChange = false;\n    this.queryStateModel.set(QueryStateModel.attributesEnum.first, attrValue);\n    this.listenToQueryStateChange = true;\n  }\n\n  private handleQueryError() {\n    this.reset();\n  }\n\n  private handleQuerySuccess(data: IQuerySuccessEventArgs) {\n    this.reset();\n    if (this.ignoreNextQuerySuccess) {\n      this.ignoreNextQuerySuccess = false;\n    } else {\n      Assert.isNotUndefined(data);\n\n      const firstResult = data.query.firstResult;\n      const count = data.results.totalCountFiltered;\n\n      const pagerBoundary = this.computePagerBoundary(firstResult, count);\n      this.currentPage = pagerBoundary.currentPage;\n      if (pagerBoundary.end - pagerBoundary.start > 0) {\n        for (let i = pagerBoundary.start; i <= pagerBoundary.end; i++) {\n          const listItemValue = $$(\n            'a',\n            {\n              className: 'coveo-pager-list-item-text coveo-pager-anchor',\n              tabindex: -1,\n              ariaHidden: 'true'\n            },\n            i.toString(10)\n          ).el;\n\n          const page = i;\n          const listItem = $$('li', {\n            className: 'coveo-pager-list-item',\n            tabindex: 0\n          }).el;\n          const isCurrentPage = page === this.currentPage;\n          if (isCurrentPage) {\n            $$(listItem).addClass('coveo-active');\n          }\n          $$(listItem).setAttribute('aria-pressed', isCurrentPage.toString());\n\n          const clickAction = () => this.handleClickPage(page);\n\n          new AccessibleButton()\n            .withElement(listItem)\n            .withLabel(l('PageNumber', i.toString(10)))\n            .withClickAction(clickAction)\n            .withEnterKeyboardAction(clickAction)\n            .build();\n\n          listItem.appendChild(listItemValue);\n          this.list.appendChild(listItem);\n        }\n\n        if (this.options.enableNavigationButton && pagerBoundary.lastResultPage > 1) {\n          this.renderNavigationButton(pagerBoundary);\n        }\n      }\n    }\n  }\n\n  private handleNoResults(data: INoResultsEventArgs) {\n    let lastValidPage;\n    if (data.results.totalCount > 0) {\n      // First scenario : The index returned less results than expected (because of folding).\n      // Recalculate the last valid page, and change to that new page.\n      const possibleValidPage = this.computePagerBoundary(data.results.totalCountFiltered, data.results.totalCount).lastResultPage;\n      if (this.currentPage > possibleValidPage) {\n        lastValidPage = possibleValidPage;\n      }\n    } else if (this.currentPage > this.getMaxNumberOfPagesForCurrentResultsPerPage()) {\n      // Second scenario : Someone tried to access a non-valid page by the URL for example, which is  higher than the current possible with the number of\n      // possible results. The last valid page will be the maximum number of results avaiable from the index.\n      lastValidPage = this.getMaxNumberOfPagesForCurrentResultsPerPage();\n    }\n\n    // This needs to be deferred because we still want all the \"querySuccess\" callbacks the complete their execution\n    // before triggering/queuing the next query;\n    // if we cannot find a lastValidPage to go to, do nothing : this means it's a query that simply return nothing.\n    if (lastValidPage != null) {\n      this.currentPage = lastValidPage;\n      data.retryTheQuery = true;\n      this.needToReset = false;\n      this.ignoreNextQuerySuccess = false;\n      this.updateQueryStateModel(this.getFirstResultNumber(this.currentPage));\n    }\n  }\n\n  private reset() {\n    $$(this.list).empty();\n  }\n\n  private handleBuildingQuery(data: IBuildingQueryEventArgs) {\n    Assert.exists(data);\n    const eventArgs = this.getQueryEventArgs();\n    data.queryBuilder.firstResult = eventArgs.first;\n\n    // Set the number of results only if it was not already set by external code\n    // Most of the time this will be set by either : the SearchInterface with the resultsPerPage option\n    // Or by the ResultsPerPage component (so the end user decides).\n    // Pager will realistically never set this value itself.\n    if (data.queryBuilder.numberOfResults == null) {\n      data.queryBuilder.numberOfResults = eventArgs.count;\n    }\n\n    const maxResultNumber = data.queryBuilder.firstResult + data.queryBuilder.numberOfResults;\n    const numOfExcessResults = Math.max(0, maxResultNumber - this.options.maximumNumberOfResultsFromIndex);\n\n    data.queryBuilder.numberOfResults -= numOfExcessResults;\n  }\n\n  private computePagerBoundary(firstResult: number, totalCount: number) {\n    const resultPerPage = this.searchInterface.resultsPerPage;\n    const currentPage = Math.floor(firstResult / resultPerPage) + 1;\n    let lastPageNumber = Math.min(Math.ceil(totalCount / resultPerPage), this.getMaxNumberOfPagesForCurrentResultsPerPage());\n    lastPageNumber = Math.max(lastPageNumber, 1);\n    const halfLength = Math.floor(this.options.numberOfPages / 2);\n    let firstPageNumber = currentPage - halfLength;\n    firstPageNumber = Math.max(firstPageNumber, 1);\n    let endPageNumber = firstPageNumber + this.options.numberOfPages - 1;\n    endPageNumber = Math.min(endPageNumber, lastPageNumber);\n    return {\n      start: firstPageNumber,\n      end: endPageNumber,\n      lastResultPage: lastPageNumber,\n      currentPage: currentPage\n    };\n  }\n\n  private renderNavigationButton(pagerBoundary: { start: number; end: number; lastResultPage: number; currentPage: number }) {\n    if (this.currentPage > 1) {\n      const previous = this.renderPreviousButton();\n      this.list.insertBefore(previous.el, this.list.firstChild);\n    }\n\n    if (this.currentPage < pagerBoundary.lastResultPage) {\n      const next = this.renderNextButton();\n      this.list.appendChild(next.el);\n    }\n  }\n\n  private renderPreviousButton() {\n    const previousButton = $$('li', {\n      className: 'coveo-pager-previous coveo-pager-anchor coveo-pager-list-item'\n    });\n\n    const previousLink = $$('a', {\n      title: l('Previous'),\n      tabindex: -1,\n      ariaHidden: 'true'\n    });\n\n    const previousIcon = $$(\n      'span',\n      {\n        className: 'coveo-pager-previous-icon'\n      },\n      SVGIcons.icons.pagerLeftArrow\n    );\n\n    SVGDom.addClassToSVGInContainer(previousIcon.el, 'coveo-pager-previous-icon-svg');\n\n    previousLink.append(previousIcon.el);\n    previousButton.append(previousLink.el);\n\n    new AccessibleButton()\n      .withElement(previousButton)\n      .withLabel(l('Previous'))\n      .withSelectAction(() => this.handleClickPrevious())\n      .build();\n\n    return previousButton;\n  }\n\n  private renderNextButton() {\n    const nextButton = $$('li', {\n      className: 'coveo-pager-next coveo-pager-anchor coveo-pager-list-item'\n    });\n\n    const nextLink = $$('a', {\n      title: l('Next'),\n      tabindex: -1,\n      ariaHidden: 'true'\n    });\n\n    const nextIcon = $$(\n      'span',\n      {\n        className: 'coveo-pager-next-icon'\n      },\n      SVGIcons.icons.pagerRightArrow\n    );\n\n    SVGDom.addClassToSVGInContainer(nextIcon.el, 'coveo-pager-next-icon-svg');\n\n    nextLink.append(nextIcon.el);\n    nextButton.append(nextLink.el);\n\n    new AccessibleButton()\n      .withElement(nextButton)\n      .withLabel(l('Next'))\n      .withSelectAction(() => this.handleClickNext())\n      .build();\n\n    return nextButton;\n  }\n\n  private handleQueryStateFirstResultChanged(data: IAttributeChangedEventArg) {\n    if (!this.listenToQueryStateChange) {\n      return;\n    }\n    Assert.exists(data);\n    this.needToReset = false;\n    const firstResult = data.value;\n    this.currentPage = this.fromFirstResultsToPageNumber(firstResult);\n  }\n\n  private handleQueryStateNumberOfResultsPerPageChanged(data: IAttributeChangedEventArg) {\n    const firstResult = this.queryStateModel.get(QUERY_STATE_ATTRIBUTES.FIRST);\n    this.searchInterface.resultsPerPage = data.value;\n    this.currentPage = this.fromFirstResultsToPageNumber(firstResult);\n  }\n\n  private handleClickPage(pageNumber: number) {\n    Assert.exists(pageNumber);\n    this.setPage(pageNumber);\n  }\n\n  private handleClickPrevious() {\n    this.previousPage();\n  }\n\n  private handleClickNext() {\n    this.nextPage();\n  }\n\n  private fromFirstResultsToPageNumber(firstResult: number): number {\n    return firstResult / this.searchInterface.resultsPerPage + 1;\n  }\n\n  private getFirstResultNumber(pageNumber: number = this.currentPage): number {\n    return (pageNumber - 1) * this.searchInterface.resultsPerPage;\n  }\n\n  private getQueryEventArgs() {\n    return {\n      count: this.searchInterface.resultsPerPage,\n      first: this.getFirstResultNumber()\n    };\n  }\n}\n\nInitialization.registerAutoCreateComponent(Pager);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Pager/Pager.ts","/// <reference path='Facet.ts' />\nimport { StringUtils } from '../../utils/StringUtils';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { FileTypes } from '../Misc/FileTypes';\nimport { DateUtils } from '../../utils/DateUtils';\nimport { Utils } from '../../utils/Utils';\nimport { $$ } from '../../utils/Dom';\nimport * as _ from 'underscore';\nimport FacetModuleDefinition = require('./Facet');\nimport { l } from '../../strings/Strings';\n\nexport class FacetUtils {\n  static getRegexToUseForFacetSearch(value: string, ignoreAccent: boolean) {\n    return new RegExp(StringUtils.stringToRegex(value, ignoreAccent), 'i');\n  }\n\n  static getDisplayValueFromValueCaption(value: string, field: string, valueCaption: Record<string, string>) {\n    const returnValue = this.tryToGetTranslatedCaption(field, value);\n    return valueCaption[value] || returnValue;\n  }\n\n  static getValuesToUseForSearchInFacet(original: string, facet: FacetModuleDefinition.Facet): string[] {\n    let ret = [original];\n    let regex = this.getRegexToUseForFacetSearch(original, facet.options.facetSearchIgnoreAccents);\n    if (facet.options.valueCaption) {\n      _.chain(facet.options.valueCaption)\n        .pairs()\n        .filter(pair => {\n          return regex.test(pair[1]);\n        })\n        .each(match => {\n          ret.push(match[0]);\n        });\n      if (\n        QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@objecttype') ||\n        QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@filetype')\n      ) {\n        _.each(FileTypes.getFileTypeCaptions(), (value: string, key: string) => {\n          if (!(key in facet.options.valueCaption) && regex.test(value)) {\n            ret.push(key);\n          }\n        });\n      }\n    } else if (\n      QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@objecttype') ||\n      QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@filetype')\n    ) {\n      _.each(\n        _.filter(_.pairs(FileTypes.getFileTypeCaptions()), pair => {\n          return regex.test(pair[1]);\n        }),\n        match => {\n          ret.push(match[0]);\n        }\n      );\n    } else if (QueryUtils.isStratusAgnosticField(<string>facet.options.field, '@month')) {\n      _.each(_.range(1, 13), month => {\n        if (regex.test(DateUtils.monthToString(month - 1))) {\n          ret.push(('0' + month.toString()).substr(-2));\n        }\n      });\n    }\n    return ret;\n  }\n\n  static buildFacetSearchPattern(values: string[]) {\n    values = _.map(values, value => {\n      return Utils.escapeRegexCharacter(value);\n    });\n    values[0] = '.*' + values[0] + '.*';\n    return values.join('|');\n  }\n\n  static needAnotherFacetSearch(\n    currentSearchLength: number,\n    newSearchLength: number,\n    oldSearchLength: number,\n    desiredSearchLength: number\n  ) {\n    // Something was removed (currentSearch < newSearch)\n    // && we might want to display more facet search result(currentSearch < desiredSearch)\n    // && the new query returned more stuff than the old one so there's still more results(currentSearchLength > oldLength)\n    return currentSearchLength < newSearchLength && currentSearchLength < desiredSearchLength && currentSearchLength > oldSearchLength;\n  }\n\n  static addNoStateCssClassToFacetValues(facet: FacetModuleDefinition.Facet, container: HTMLElement) {\n    // This takes care of adding the correct css class on each facet value checkbox (empty white box) if at least one value is selected in that facet\n    if (facet.values.getSelected().length != 0) {\n      let noStates = $$(container).findAll('li:not(.coveo-selected)');\n      _.each(noStates, noState => {\n        $$(noState).addClass('coveo-no-state');\n      });\n    }\n  }\n\n  static tryToGetTranslatedCaption(field: string, value: string) {\n    let found: string;\n\n    if (QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@filetype')) {\n      found = FileTypes.getFileType(value).caption;\n    } else if (QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@objecttype')) {\n      found = FileTypes.getObjectType(value).caption;\n    } else if (FacetUtils.isMonthFieldValue(field, value)) {\n      const month = parseInt(value, 10);\n      found = DateUtils.monthToString(month - 1);\n    } else {\n      found = l(value);\n    }\n    return found != undefined && Utils.isNonEmptyString(found) ? found : value;\n  }\n\n  static isMonthFieldValue(field: string, value: string) {\n    if (!QueryUtils.isStratusAgnosticField(field.toLowerCase(), '@month')) {\n      return false;\n    }\n\n    const asInt = parseInt(value, 10);\n\n    if (isNaN(asInt)) {\n      return false;\n    }\n\n    if (asInt < 1 || asInt > 12) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Facet/FacetUtils.ts","import { Template, TemplateRole } from './Template';\nimport { TemplateList } from './TemplateList';\nimport _ = require('underscore');\n\nexport class TableTemplate extends TemplateList {\n  instantiateRoleToString(role: TemplateRole) {\n    const roledTemplate = _.find(this.templates, t => t.role === role);\n    if (roledTemplate) {\n      return roledTemplate.instantiateToString(undefined, {});\n    } else {\n      return this.defaultRoledTemplates[role];\n    }\n  }\n  instantiateRoleToElement(role: TemplateRole) {\n    const roledTemplate = _.find(this.templates, t => t.role === role);\n    if (roledTemplate) {\n      return roledTemplate.instantiateToElement(undefined, {});\n    } else {\n      const tmpl = new Template(() => this.defaultRoledTemplates[role]);\n      tmpl.layout = 'table';\n      return tmpl.instantiateToElement(undefined);\n    }\n  }\n\n  private defaultTemplate = `<td><a class=\"CoveoResultLink\"></a></td>\n                             <td><span class=\"CoveoExcerpt\"></span></td>\n                             <td><span class=\"CoveoFieldValue\" data-field=\"@date\" data-helper=\"date\"></span></td>`;\n\n  private defaultRoledTemplates = {\n    'table-header': `<th style=\"width: 40%\">Link</th>\n                     <th>Excerpt</th>\n                     <th style=\"width: 20%\"\n                         class=\"CoveoSort coveo-table-header-sort\"\n                         data-sort-criteria=\"date ascending,date descending\"\n                         data-display-unselected-icon=\"false\">Date</th>`,\n    'table-footer': `<th>Link</th>\n                     <th>Excerpt</th>\n                     <th>Date</th>`\n  };\n\n  protected getFallbackTemplate(): Template {\n    return new Template(() => this.defaultTemplate);\n  }\n\n  hasTemplateWithRole(role: TemplateRole) {\n    return _.find(this.templates, t => t.role === role);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Templates/TableTemplate.ts","import { Template } from './Template';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class DefaultRecommendationTemplate extends Template {\n  instantiateToString(object?: IQueryResult): string {\n    var template = `<div class=\"coveo-result-frame\">\n        <div class=\"coveo-result-row\">\n          <div class=\"coveo-result-cell\" style=\"width:40px;text-align:center;vertical-align:middle;\">\n            <span class=\"CoveoIcon\" data-small=\"true\" data-with-label=\"false\">\n            </span>\n          </div>\n          <div class=\"coveo-result-cell\" style=\"padding:0 0 3px 5px;vertical-align:middle\">\n            <div class=\"coveo-result-row\">\n              <div class=\"coveo-result-cell\" style=\"font-size:10pt;\">\n                <a class=\"CoveoResultLink\" style=\"display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis\">\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>`;\n    return template;\n  }\n\n  instantiateToElement(object?: IQueryResult): Promise<HTMLElement> {\n    return new Promise((resolve, reject) => {\n      var div = document.createElement('div');\n      div.innerHTML = this.instantiateToString(object);\n      resolve(div);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Templates/DefaultRecommendationTemplate.ts","import { IQueryResults } from '../../rest/QueryResults';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Assert, QueryUtils, Component, Initialization, QueryStateModel } from '../../Core';\nimport { IInitResult } from '../Base/Initialization';\nimport { Template } from './Template';\nimport { SearchInterface } from '../../ui/SearchInterface/SearchInterface';\nimport { ResultList } from '../ResultList/ResultList';\nimport { RendererValidLayout } from '../ResultLayoutSelector/ValidLayout';\nimport { pluck, sortBy, map } from 'underscore';\nimport { $$ } from '../../utils/Dom';\nimport { Logger } from '../../misc/Logger';\n\nexport interface ITemplateToHtml {\n  resultTemplate: Template;\n  queryStateModel: QueryStateModel;\n  searchInterface: SearchInterface;\n}\n\nexport class TemplateToHtml {\n  constructor(public args: ITemplateToHtml) {}\n\n  public async buildResults(\n    results: IQueryResults,\n    layout: RendererValidLayout,\n    currentlyDisplayedResults: IQueryResult[]\n  ): Promise<HTMLElement[]> {\n    const res: { elem: HTMLElement; idx: number }[] = [];\n    const resultsPromises = map(results.results, (result: IQueryResult, index: number) => {\n      return this.buildResult(result, layout, currentlyDisplayedResults).then((resultElement: HTMLElement) => {\n        if (resultElement != null) {\n          res.push({ elem: resultElement, idx: index });\n        }\n        ResultList.resultCurrentlyBeingRendered = null;\n        return resultElement;\n      });\n    });\n\n    // We need to sort by the original index order, because in lazy loading mode, it's possible that results does not gets rendered\n    // in the correct order returned by the index, depending on the time it takes to load all the results component for a given result template\n    return Promise.all(resultsPromises).then(() => {\n      return pluck(sortBy(res, 'idx'), 'elem');\n    });\n  }\n\n  public async buildResult(\n    result: IQueryResult,\n    layout: RendererValidLayout,\n    currentlyDisplayedResults: IQueryResult[]\n  ): Promise<HTMLElement> {\n    Assert.exists(result);\n    QueryUtils.setStateObjectOnQueryResult(this.args.queryStateModel.get(), result);\n    QueryUtils.setSearchInterfaceObjectOnQueryResult(this.args.searchInterface, result);\n    ResultList.resultCurrentlyBeingRendered = result;\n    const resultElement = await this.createHtmlElement(result, layout);\n\n    if (resultElement != null) {\n      Component.bindResultToElement(resultElement, result);\n    }\n    currentlyDisplayedResults.push(result);\n\n    await this.autoCreateComponentsInsideResult(resultElement, result).initResult;\n\n    this.verifyChildren(resultElement);\n    return resultElement;\n  }\n\n  public autoCreateComponentsInsideResult(element: HTMLElement, result: IQueryResult): IInitResult {\n    Assert.exists(element);\n    return Initialization.automaticallyCreateComponentsInsideResult(element, result);\n  }\n\n  private createHtmlElement(result: IQueryResult, layout: RendererValidLayout) {\n    return this.args.resultTemplate.instantiateToElement(result, {\n      wrapInDiv: true,\n      checkCondition: true,\n      currentLayout: layout,\n      responsiveComponents: this.args.searchInterface.responsiveComponents\n    });\n  }\n\n  private verifyChildren(element: HTMLElement) {\n    const containsResultLink = !!$$(element).find('.CoveoResultLink');\n    if (containsResultLink) {\n      return;\n    }\n\n    const msg = `Result does not contain a \"CoveoResultLink\" component, please verify the result template`;\n    new Logger(element).warn(msg, this.args.resultTemplate);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Templates/TemplateToHtml.ts","import { TemplateHelpers, ITemplateHelperFunction } from './TemplateHelpers';\nimport { IHighlight, IHighlightPhrase, IHighlightTerm } from '../../rest/Highlight';\nimport { HighlightUtils, StringAndHoles } from '../../utils/HighlightUtils';\nimport { IStreamHighlightOptions } from '../../utils/StreamHighlightUtils';\nimport { IDateToStringOptions, DateUtils } from '../../utils/DateUtils';\nimport { ICurrencyToStringOptions, CurrencyUtils } from '../../utils/CurrencyUtils';\nimport { IAnchorUtilsOptions, IImageUtilsOptions, AnchorUtils, ImageUtils } from '../../utils/HtmlUtils';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Utils } from '../../utils/Utils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { TimeSpan, ITimeSpanUtilsOptions } from '../../utils/TimeSpanUtils';\nimport { EmailUtils } from '../../utils/EmailUtils';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { $$ } from '../../utils/Dom';\nimport { SearchEndpoint } from '../../rest/SearchEndpoint';\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\nimport { FacetUtils } from '../Facet/FacetUtils';\nimport * as Globalize from 'globalize';\nimport { IStringMap } from '../../rest/GenericParam';\nimport * as _ from 'underscore';\nimport { Component } from '../Base/Component';\nimport { TemplateCache } from './TemplateCache';\nimport { INumberFormatOptions } from '../../utils/NumberUtils';\n\n/**\n * The core template helpers provided by default.\n *\n * **Examples:**\n *\n * **HTML**\n *\n * ```html\n * <div class=\"CoveoFieldValue\" data-field=\"@videoduration\" data-helper=\"timeSpan\" data-helper-options-is-milliseconds=\"false\"></div>\n * ```\n *\n * **Underscore**\n *\n * ```erb\n * <%= timeSpan(raw.videoduration, { isMilliseconds: false }) %>\n * ```\n */\nexport interface ICoreHelpers {\n  /**\n   * Shortens a string so that its length does not exceed a specific number of\n   * characters. An ellipsis is appended to the string if it exceeds the\n   * maximum length.\n   *\n   * - `content`: The string to shorten.\n   * - `length`: The maximum length of the resulting string.\n   * - `highlights`: Optional. If provided, the string will be highlighted\n   *   using this highlight information.\n   * - `cssClass`: Optional. When highlighting, the name of the CSS class to use.\n   */\n  shorten: (content: string, length: number, highlights?: IHighlight[], cssClass?: string) => string;\n  /**\n   * Shortens a string using an algorithm suitable for file paths. The helper\n   * will insert an ellipsis in the string where text has been removed when\n   * the path exceeds the maximum length.\n   *\n   * - `content`: The path to shorten.\n   * - `length`: The maximum length of the resulting string.\n   * - `highlights`: Optional. If provided, the string will be highlighted using\n   *   this highlight information.\n   * - `cssClass`: Optional. When highlighting, the name of the CSS class to use.\n   */\n  shortenPath: (content: string, length: number, highlights?: IHighlight[], cssClass?: string) => string;\n  /**\n   * Shortens a string using an algorithm suitable for URIs. The helper will\n   * insert an ellipsis in the string where text has been removed when the URI\n   * exceeds the maximum length.\n   *\n   * - `content`: The URI to shorten.\n   * - `length`: The maximum length of the resulting string.\n   * - `highlights`: Optional. If provided, the string will be highlighted\n   *   using this highlight information.\n   * - `cssClass`: Optional. When highlighting, the name of the CSS class to use.\n   */\n  shortenUri: (content: string, length: number, highlights?: IHighlight[], cssClass?: string) => string;\n  /**\n   * Highlights a string using the provided highlight information.\n   *\n   * - `content`: The URI to shorten.\n   * - `highlights`: Optional. The highlight information to use.\n   * - `cssClass`: Optional. The name of the CSS class to use for highlighting.\n   */\n  highlight: (content: string, highlights?: IHighlight[], cssClass?: string) => string;\n  /**\n   * Highlights the provided terms in a given string.<br/>\n   * By default, the terms to highlight are the current query and the\n   * associated stemming words from the index.\n   * The only required parameter is the content, which specify the string that needs to be highlighted.\n   * The other parameters will normally be automatically resolved for you from the current result object.\n   *\n   * - `content`: The string content to highlight\n   * - `termsToHighlight`: The terms to highlight (see {@link IHighlightTerm})\n   * - `phraseToHighlight`: The phrases to highlight (see {@link IHighlightPhrase})\n   * - `options`: Optional. The options defined below as {@link IStreamHighlightOptions}\n   *\n   * **Note:**\n   * > `highlightStreamText` should only be used for very particular/specific use cases (e.g., augmenting the result template with additional information rather than the typical excerpt/title), and is not a proper replacement for actually having the correct title and excerpt on your results.\n   * >\n   * > Using incorrect result titles or excerpts on your search interface also causes relevancy to suffer greatly, as the index uses the title and excerpt to find relevant results. Consequently, end users are more likely to see results whose titles do not match their query.\n   * >\n   * > Moreover, the recommended method to implement simple title and/or excerpt highlighting is to simply use the {@link Excerpt} and {@link ResultLink} components.\n   */\n  highlightStreamText: (\n    content: string,\n    termsToHighlight: IHighlightTerm,\n    phrasesToHighlight: IHighlightPhrase,\n    options?: IStreamHighlightOptions\n  ) => string;\n  /**\n   * This helper operates exactly like the {@link highlightStreamText} helper, except\n   * that it should be used to highlight HTML content. The helper takes care\n   * of not highlighting the HTML markup.\n   *\n   * - `content`: The string content to highlight\n   * - `termsToHighlight`: The terms to highlight (see {@link IHighlightTerm})\n   * - `phraseToHighlight`: The phrases to highlight (see {@link IHighlightPhrase})\n   * - `options`: Optional. The options defined below as {@link IStreamHighlightOptions}\n   *\n   * **Note:**\n   * > `highlightStreamHTML` should only be used for very particular/specific use cases (e.g., augmenting the result template with additional information rather than the typical excerpt/title), and is not a proper replacement for actually having the correct title and excerpt on your results.\n   * >\n   * > Using incorrect result titles or excerpts on your search interface also causes relevancy to suffer greatly, as the index uses the title and excerpt to find relevant results. Consequently, end users are more likely to see results whose titles do not match their query.\n   * >\n   * > Moreover, the recommended method to implement simple title and/or excerpt highlighting is to simply use the {@link Excerpt} and {@link ResultLink} components.\n   */\n  highlightStreamHTML: (\n    content: string,\n    termsToHighlight: IHighlightTerm,\n    phrasesToHighlight: IHighlightPhrase,\n    options?: IStreamHighlightOptions\n  ) => string;\n  /**\n   * Formats a numeric value using the format string.\n   *\n   * - `content`: The numeric value to format.\n   * - `format` Optional. The string format to use. See the <a href=\"https://github.com/klaaspieter/jquery-global#numbers\" target=\"_blank\">Globalize</a> library for the list of available formats.\n   *\n   * When the helper is used in a [`FieldValue`]{@link FieldValue} component, this value is automatically retrieved from the specified [`field`]{@link FieldValue.options.field}.\n   *\n   * **Example:**\n   *\n   *  ```html\n   *  <div class=\"CoveoFieldValue\" data-field=\"@viewcount\" data-text-caption=\"Views\" data-helper=\"number\" data-helper-options-format=\"n0\"></div>\n   *  ```\n   */\n  number: (content: string, format: string | INumberFormatOptions) => string;\n  /**\n   * Formats a date value to a date-only string using the specified options.\n   *\n   * - `content`: The Date value to format.\n   * - `options`: Optional. The options to use (see {@link IDateToStringOptions}).\n   */\n  date: (content: any, options?: IDateToStringOptions) => string;\n  /**\n   * Formats a date value to a time-only string using the specified options.\n   *\n   * - `content`: The Date value to format.\n   * - `options`: Optional. The options to use (see {@link IDateToStringOptions}).\n   */\n  time: (content: any, options?: IDateToStringOptions) => string;\n  /**\n   * Formats a date value to a date and time string using the specified\n   * options.\n   *\n   * - `content`: The Date value to format.\n   * - `options`: Optional. The options to use (see {@link IDateToStringOptions}).\n   */\n  dateTime: (content: any, options?: IDateToStringOptions) => string;\n  /**\n   * Formats a currency value to a string using the specified options.\n   *\n   * - `content`: The number value to format.\n   * - `options`: Optional. The options to use (see {@link ICurrencyToStringOptions}).\n   */\n  currency: (content: any, options?: ICurrencyToStringOptions) => string;\n  /**\n   * Formats a date value to a date and time string using options suitable for\n   * email dates\n   *\n   * - `content`: The Date value to format.\n   * - `options`: Optional. The options to use (see {@link IDateToStringOptions}).\n   */\n  emailDateTime: (content: any, options?: IDateToStringOptions) => string;\n  /**\n   * Renders one or several email values in `mailto:` hyperlinks.\n   *\n   * - `value`: The string or array of strings that contains a list of semicolon-separated email\n   *   values. When multiple values are passed, each value is displayed in a\n   *   separate hyperlink.\n   * - `companyDomain`: Optional. The string that contains your own domain (e.g.:\n   *   coveo.com). When specified, this parameter allows email addresses\n   *   coming from your own domain to be displayed in a shortened format\n   *   (e.g.: Full Name), whereas email addresses coming from an external\n   *   domain will be displayed in an extended format (e.g.: Full Name\n   *   (domain.com)). If this parameter is not specified, then the shortened\n   *   format will automatically be used.\n   * - `me`: Optional. The string that contains the current username. If it is\n   *   specified, then the email address containing the current username will\n   *   be replaced by the localized string 'Me'.\n   * - `lengthLimit`: Optional. The number of email addresses that you want to display\n   *   before an ellipse is added (e.g.: 'From Joe, John and 5 others').<br/>\n   *   The default value is 2.\n   * - `truncateName`: Optional. When the username is available from the email address,\n   *   then you can specify if you want to truncate the full name. (e.g.:\n   *   'John S.' instead of 'John Smith').<br/>\n   *   The default value is `false`.\n   */\n  email: (value: string | string[], companyDomain?: string, me?: string, lengthLimit?: number, truncateName?: boolean) => string;\n  /**\n   * Formats a clickable HTML link (`<a>`).\n   *\n   * - `href`: The link URI\n   * - `options`: Optional. The options to use (see {@link IAnchorUtilsOptions})\n   */\n  anchor: (href: string, options?: IAnchorUtilsOptions) => string;\n  /**\n   * Formats an HTML image tag (`<img>`).\n   *\n   * - `src`: The image source URI\n   * - `options`: Optional. The options to use (see {@link IImageUtilsOptions})\n   */\n  image: (src: string, options?: IImageUtilsOptions) => string;\n  /**\n   * Formats an HTML image tag (`<img>`), and automatically uses the result\n   * object to query the REST API to get the thumbnail for this result. For\n   * example, this can be used to great effect when designing a template\n   * showing users or previews of files.\n   * - `result`: Optional. The current result object inside your template. In\n   *   underscore, it is referenced as `obj`. By default, the result\n   *   will be resolved automatically from your current template function (\n   *   Meaning the nearest result in the current call stack execution inside\n   *   your template)\n   * - `endpoint`: Optional. The name of the endpoint to use for your\n   *   thumbnail. Default is default.\n   * - `options`: Optional. The options to use (see {@link IImageUtilsOptions}).\n   */\n  thumbnail: (result?: IQueryResult, endpoint?: string, options?: IImageUtilsOptions) => string;\n  /**\n   * Generates an icon based on the file type of the current result. The icon\n   * will be contained inside a `<span>` element with the appropriate CSS\n   * class.\n   *\n   * - `result`: Optional. The current result object inside your template. In\n   *   underscore, it is referenced as `obj`. By default, the result\n   *   will be resolved automatically from your current template function (\n   *   Meaning the nearest result in the current call stack execution inside\n   *   your template)\n   * - `options`: Optional. The options to use (see {@link IIconOptions}).\n   */\n  fromFileTypeToIcon: (result?: IQueryResult, options?: any) => string;\n  /**\n   * Loads a partial template in the current template, by passing the ID of\n   * the template to load, the condition for which this template should be\n   * loaded, and the context object (the object that the loaded template will\n   * use as its data). By default, the context object will be the same as the\n   * template that called this helper function. So, for example, in a\n   * ResultList Component, the contextObject would, by default, be the Query\n   * Results.\n   *\n   * - `templateId`: The ID of the template to load.\n   * - `condition`: Optional. The boolean condition to determine if this template should\n   *   load for this result set. Most of the time this would be a condition of\n   *   the type if raw.somefield == 'something'.\n   * - `contextObject`: Optional. The object that should be used by the loaded template\n   *   as its contextObject.\n   */\n  loadTemplate: (templateId: string, condition?: boolean, contextObject?: any) => string;\n  /**\n   * Given a number, either in millisecond or second, convert to a HH:MM:SS format.\n   *\n   * **Examples**\n   *\n   * >`timeSpan(1, {isMilliseconds: false}) => '00:01'`\n   * >\n   * >`timeSpan(1000, {isMilliseconds: true}) => '00:01'`\n   *\n   * - `value`: The number to convert to a timespan\n   * - `options` : The options to use (see {@link ITimeSpanUtilsOptions})\n   */\n  timeSpan: (value: number, options: ITimeSpanUtilsOptions) => string;\n  /**\n   * Formats a number, which represents a file size in bytes, into a logical unit size.\n   *\n   * **Examples:**\n   *\n   * >`size(1024) => 1024 B`\n   * >\n   * >`size(1025) => 1 KB`\n   * >\n   * >`size(10240) => 10 KB`\n   *\n   * **Examples:**\n   *\n   * >**HTML**\n   * >\n   * > ```html\n   * > <div class=\"CoveoFieldValue\" data-field='@size' data-helper=\"size\" data-helper-options-base=\"1\"></div>\n   * > ```\n   *\n   * >**Underscore**\n   * >\n   * > ```erb\n   * > <%= size(raw.size, {base: 0, precision: 2}) %>\n   * > ```\n   *\n   * - `value`: The number to format\n   * - `options` : The options to use (see {@link ISizeOptions})\n   */\n  size: (value: number, options?: ISizeOptions) => string;\n  /**\n   * Given a filetype value, try to return a translated and human readable version.\n   *\n   * If the filetype is known and recognized by the framework, a translated value will be returned.\n   *\n   * **Examples**\n   *\n   * >`translatedCaption('doc') => Document`\n   * >\n   * >`translatedCaption('xls') => Spreadsheet Document`\n   *\n   * - `value`: The string value to translate\n   */\n  translatedCaption: (value: string) => string;\n  /**\n   * Replace all carriage return in a string by a &lt;br /&gt; tag\n   *\n   * - `value`: The string value to replace the carriage returns in.\n   */\n  encodeCarriageReturn: (value: string) => string;\n  /**\n   * Detect if the results is being rendered in a mobile device.\n   *\n   * If it's not a mobile device, the helper return null ;\n   *\n   * If it's a mobile device, return the type of device (Android, iPhone, iPad) etc.\n   */\n  isMobileDevice: () => string;\n}\n\n/**\n * Available options for the size templateHelpers.\n *\n * Example:\n * <div class=\"CoveoFieldValue\" data-helper=\"helperName\" data-helper-options-optionName=\"option-value\"></div>\n */\nexport interface ISizeOptions {\n  /**\n   * The base into which to format the value.\n   *\n   * Formula: value * 10^(3 * base)\n   *\n   * **Examples:**\n   * > **Base 0:**\n   * >\n   * > 1 => 1B\n   * >\n   * > 1000 => 1KB\n   *\n   * > **Base 1:**\n   * >\n   * > 1 => 1KB\n   * >\n   * > 1000 => 1MB\n   */\n  base?: number;\n  /**\n   * The precision to use to format the size (i.e., the number of digits to display after the decimal)\n   *\n   * **Examples:**\n   * > **Precision 0:**\n   * >\n   * > 1.0 => 1\n   * >\n   * > 1.85 => 1\n   *\n   * > **Precision 1:**\n   * >\n   * > 1.0 => 1.0\n   * >\n   * > 1.85 => 1.8\n   */\n\n  precision?: number;\n}\n\nexport interface IShortenOptions {\n  length: number;\n  highlights?: IHighlight[];\n  cssClass?: string;\n}\n\nexport interface IHighlightsOptions {\n  highlights: IHighlight[];\n  cssClass?: string;\n}\n\nexport interface IHelperStreamHighlightOptions {\n  termsToHighlight: IHighlightTerm;\n  phrasesToHighlight: IHighlightPhrase;\n  opts?: IStreamHighlightOptions;\n}\n\nexport class CoreHelpers {\n  public constructor() {}\n\n  /**\n   * For backward compatibility reason, the \"global\" template helper should be available under the\n   * coveo namespace.\n   * @param scope\n   */\n  public static exportAllHelpersGlobally(scope: IStringMap<any>) {\n    _.each(TemplateHelpers.getHelpers(), (helper: ITemplateHelperFunction, name: string) => {\n      if (scope[name] == undefined) {\n        scope[name] = helper;\n      }\n    });\n  }\n}\n\nTemplateHelpers.registerFieldHelper('javascriptEncode', (value: string) => {\n  return Utils.exists(value) ? StringUtils.javascriptEncode(value) : undefined;\n});\n\nconst executeShorten = (content: string, options: IShortenOptions) => {\n  const strAndHoles = StringAndHoles.shortenString(content, options.length, '...');\n  if (Utils.exists(options.highlights)) {\n    return HighlightUtils.highlightString(strAndHoles.value, options.highlights, strAndHoles.holes, options.cssClass || 'highlight');\n  } else {\n    return strAndHoles.value;\n  }\n};\n\nTemplateHelpers.registerTemplateHelper('shorten', (content: string, length: number, highlights?: IHighlight[], cssClass?: string) => {\n  return executeShorten(content, {\n    length,\n    highlights,\n    cssClass\n  });\n});\n\nTemplateHelpers.registerTemplateHelper('shortenv2', (content: string, options: IShortenOptions) => {\n  return executeShorten(content, options);\n});\n\nconst executeShortenPath = (content: string, options: IShortenOptions) => {\n  const strAndHoles = StringAndHoles.shortenPath(content, options.length);\n  if (Utils.exists(options.highlights)) {\n    return HighlightUtils.highlightString(strAndHoles.value, options.highlights, strAndHoles.holes, options.cssClass || 'highlight');\n  } else {\n    return strAndHoles.value;\n  }\n};\n\nTemplateHelpers.registerTemplateHelper('shortenPath', (content: string, length: number, highlights?: IHighlight[], cssClass?: string) => {\n  return executeShortenPath(content, {\n    length,\n    highlights,\n    cssClass\n  });\n});\n\nTemplateHelpers.registerFieldHelper('shortenPathv2', (content: string, options: IShortenOptions) => {\n  return executeShortenPath(content, options);\n});\n\nconst executeShortenUri = (content: string, options: IShortenOptions) => {\n  const strAndHoles = StringAndHoles.shortenUri(content, options.length);\n\n  if (Utils.exists(options.highlights)) {\n    return HighlightUtils.highlightString(strAndHoles.value, options.highlights, strAndHoles.holes, options.cssClass || 'highlight');\n  } else {\n    return strAndHoles.value;\n  }\n};\n\nTemplateHelpers.registerTemplateHelper('shortenUri', (content: string, length: number, highlights?: IHighlight[], cssClass?: string) => {\n  return executeShortenUri(content, {\n    length,\n    highlights,\n    cssClass\n  });\n});\n\nTemplateHelpers.registerTemplateHelper('shortenUriv2', (content: string, options: IShortenOptions) => {\n  return executeShortenUri(content, options);\n});\n\nconst executeHighlight = (content: string, options: IHighlightsOptions) => {\n  if (Utils.exists(content)) {\n    if (Utils.exists(options.highlights)) {\n      return HighlightUtils.highlightString(content, options.highlights, null, options.cssClass || 'highlight');\n    } else {\n      return content;\n    }\n  } else {\n    return undefined;\n  }\n};\n\nTemplateHelpers.registerTemplateHelper('highlight', (content: string, highlights: IHighlight[], cssClass?: string) => {\n  return executeHighlight(content, {\n    highlights,\n    cssClass\n  });\n});\n\nTemplateHelpers.registerTemplateHelper('highlightv2', (content: string, options: IHighlightsOptions) => {\n  return executeHighlight(content, options);\n});\n\nconst executeHighlightStreamText = (content: string, options: IHelperStreamHighlightOptions) => {\n  if (Utils.exists(content) && Utils.exists(options.termsToHighlight) && Utils.exists(options.phrasesToHighlight)) {\n    if (termsToHighlightAreDefined(options.termsToHighlight, options.phrasesToHighlight)) {\n      return StreamHighlightUtils.highlightStreamText(content, options.termsToHighlight, options.phrasesToHighlight, options.opts);\n    } else {\n      return content;\n    }\n  } else {\n    return undefined;\n  }\n};\n\nTemplateHelpers.registerTemplateHelper(\n  'highlightStreamText',\n  (\n    content: string,\n    termsToHighlight = resolveTermsToHighlight(),\n    phrasesToHighlight = resolvePhrasesToHighlight(),\n    opts?: IStreamHighlightOptions\n  ) => {\n    return executeHighlightStreamText(content, {\n      termsToHighlight,\n      phrasesToHighlight,\n      opts\n    });\n  }\n);\n\nTemplateHelpers.registerTemplateHelper('highlightStreamTextv2', (content: string, options: IHelperStreamHighlightOptions) => {\n  const mergedOptions = {\n    termsToHighlight: resolveTermsToHighlight(),\n    phrasesToHighlight: resolvePhrasesToHighlight(),\n    ...options\n  };\n  return executeHighlightStreamText(content, mergedOptions);\n});\n\nconst executeHighlightStreamHTML = (content: string, options: IHelperStreamHighlightOptions) => {\n  if (Utils.exists(content) && Utils.exists(options.termsToHighlight) && Utils.exists(options.phrasesToHighlight)) {\n    if (termsToHighlightAreDefined(options.termsToHighlight, options.phrasesToHighlight)) {\n      return StreamHighlightUtils.highlightStreamHTML(content, options.termsToHighlight, options.phrasesToHighlight, options.opts);\n    } else {\n      return content;\n    }\n  } else {\n    return undefined;\n  }\n};\n\nTemplateHelpers.registerTemplateHelper(\n  'highlightStreamHTML',\n  (\n    content: string,\n    termsToHighlight = resolveTermsToHighlight(),\n    phrasesToHighlight = resolvePhrasesToHighlight(),\n    opts?: IStreamHighlightOptions\n  ) => {\n    return executeHighlightStreamHTML(content, {\n      termsToHighlight,\n      phrasesToHighlight,\n      opts\n    });\n  }\n);\n\nTemplateHelpers.registerTemplateHelper('highlightStreamHTMLv2', (content: string, options: IHelperStreamHighlightOptions) => {\n  const mergedOptions = {\n    termsToHighlight: resolveTermsToHighlight(),\n    phrasesToHighlight: resolvePhrasesToHighlight(),\n    ...options\n  };\n  return executeHighlightStreamHTML(content, mergedOptions);\n});\n\nTemplateHelpers.registerFieldHelper('number', (value: any, options?: INumberFormatOptions | string) => {\n  if (!Utils.exists(value)) {\n    return undefined;\n  }\n\n  const numberValue = Number(value);\n  const format = _.isString(options) ? options : options && options.format;\n  if (!format) {\n    return StringUtils.htmlEncode(numberValue.toString());\n  }\n\n  return StringUtils.htmlEncode(Globalize.format(numberValue, <string>format));\n});\n\nTemplateHelpers.registerFieldHelper('date', (value: any, options?: IDateToStringOptions) => {\n  return DateUtils.dateToString(DateUtils.convertFromJsonDateIfNeeded(value), options);\n});\n\nTemplateHelpers.registerFieldHelper('time', (value: any, options?: IDateToStringOptions) => {\n  return DateUtils.timeToString(DateUtils.convertFromJsonDateIfNeeded(value), options);\n});\n\nTemplateHelpers.registerFieldHelper('dateTime', (value: any, options?: IDateToStringOptions) => {\n  return DateUtils.dateTimeToString(DateUtils.convertFromJsonDateIfNeeded(value), options);\n});\n\nTemplateHelpers.registerFieldHelper('emailDateTime', (value: any, options?: IDateToStringOptions) => {\n  var defaultOptions = <IDateToStringOptions>{};\n  defaultOptions.includeTimeIfThisWeek = true;\n  var optionsToUse = <IDateToStringOptions>_.extend(options, defaultOptions);\n  return value ? DateUtils.dateTimeToString(DateUtils.convertFromJsonDateIfNeeded(value), optionsToUse) : undefined;\n});\n\nTemplateHelpers.registerFieldHelper('currency', (value: any, options?: ICurrencyToStringOptions) => {\n  return CurrencyUtils.currencyToString(value, options);\n});\n\nTemplateHelpers.registerFieldHelper('timeSpan', (value: any, options: ITimeSpanUtilsOptions = { isMilliseconds: false }) => {\n  return new TimeSpan(value, options.isMilliseconds).getHHMMSS();\n});\n\nTemplateHelpers.registerFieldHelper('email', (value: string | string[], ...args: any[]) => {\n  // support old arguments (value: any, companyDomain: string, me: string, lengthLimit = 2, truncateName = false)\n  var companyDomain: string;\n  var me: string;\n  var lengthLimit: number;\n  var truncateName: boolean;\n  if (_.isObject(args[0])) {\n    companyDomain = args[0]['companyDomain'];\n    me = args[0]['me'];\n    lengthLimit = args[0]['lengthLimit'];\n    truncateName = args[0]['truncateName'];\n  } else {\n    companyDomain = args[0];\n    me = args[1];\n    lengthLimit = args[2];\n    truncateName = args[3];\n  }\n  if (lengthLimit == undefined) {\n    lengthLimit = 2;\n  }\n  if (truncateName == undefined) {\n    truncateName = false;\n  }\n  if (_.isString(value)) {\n    var listOfAddresses = EmailUtils.splitSemicolonSeparatedListOfEmailAddresses(<string>value);\n    return EmailUtils.emailAddressesToHyperlinks(listOfAddresses, companyDomain, me, lengthLimit, truncateName);\n  } else if (_.isArray(value)) {\n    return EmailUtils.emailAddressesToHyperlinks(<string[]>value, companyDomain, me, lengthLimit, truncateName);\n  } else {\n    return undefined;\n  }\n});\n\nTemplateHelpers.registerTemplateHelper('excessEmailToggle', (target: HTMLElement) => {\n  $$(target).removeClass('coveo-active');\n  if ($$(target).hasClass('coveo-emails-excess-collapsed')) {\n    _.each($$(target).siblings('.coveo-emails-excess-expanded'), sibling => {\n      $$(sibling).addClass('coveo-active');\n    });\n  } else if ($$(target).hasClass('coveo-hide-expanded')) {\n    $$(target.parentElement).addClass('coveo-inactive');\n    _.each($$(target.parentElement).siblings('.coveo-emails-excess-collapsed'), sibling => {\n      $$(sibling).addClass('coveo-active');\n    });\n  }\n  return undefined;\n});\n\nTemplateHelpers.registerFieldHelper('anchor', (href: string, options?: IAnchorUtilsOptions) => {\n  return AnchorUtils.buildAnchor(href, options);\n});\n\nTemplateHelpers.registerFieldHelper('image', (src: string, options?: IImageUtilsOptions, result: IQueryResult = resolveQueryResult()) => {\n  if (options && options.srcTemplate) {\n    return ImageUtils.buildImage(StringUtils.buildStringTemplateFromResult(options.srcTemplate, result), {\n      alt: options.alt,\n      height: options.height,\n      width: options.width\n    });\n  }\n  return ImageUtils.buildImage(src, options);\n});\n\nTemplateHelpers.registerTemplateHelper(\n  'thumbnail',\n  (result: IQueryResult = resolveQueryResult(), endpoint: string = 'default', options?: IImageUtilsOptions) => {\n    if (QueryUtils.hasThumbnail(result)) {\n      return ImageUtils.buildImageFromResult(result, SearchEndpoint.endpoints[endpoint], options);\n    }\n  }\n);\n\nTemplateHelpers.registerTemplateHelper('fromFileTypeToIcon', (result: IQueryResult = resolveQueryResult(), options = {}) => {\n  let icon = Component.getComponentRef('Icon');\n  if (icon) {\n    return icon.createIcon(result, options).outerHTML;\n  }\n});\n\nTemplateHelpers.registerTemplateHelper('attrEncode', (value: string) => {\n  return ('' + value) /* Forces the conversion to string. */\n    .replace(/&/g, '&amp;') /* This MUST be the 1st replacement. */\n    .replace(/'/g, '&apos;') /* The 4 other predefined entities, required. */\n    .replace(/'/g, '&quot;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n});\n\nTemplateHelpers.registerTemplateHelper('loadTemplates', (templatesToLoad: { [id: string]: any }, once = true) => {\n  var ret = '';\n  var data = resolveQueryResult();\n  var atLeastOneWasLoaded = false;\n  var toLoad = templatesToLoad;\n  var defaultTmpl;\n  _.each(templatesToLoad, (value, key?, obj?) => {\n    if (value == 'default') {\n      defaultTmpl = key;\n    }\n  });\n  if (defaultTmpl != undefined) {\n    toLoad = _.omit(templatesToLoad, defaultTmpl);\n  }\n  _.each(toLoad, (condition, id?, obj?) => {\n    if (!atLeastOneWasLoaded || !once) {\n      atLeastOneWasLoaded = atLeastOneWasLoaded || condition;\n      ret += TemplateHelpers.getHelper('loadTemplate')(id, condition, data);\n    }\n  });\n  if (!atLeastOneWasLoaded && defaultTmpl != undefined) {\n    ret += TemplateHelpers.getHelper('loadTemplate')(defaultTmpl, true, data);\n  }\n  return ret;\n});\n\nconst byteMeasure = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB'];\n\nTemplateHelpers.registerFieldHelper('size', (value: any, options?: ISizeOptions) => {\n  var size = parseInt(value, 10);\n  var precision = options != null && options.precision != null ? options.precision : 2;\n  var base = options != null && options.base != null ? options.base : 0;\n  while (size > 1024 && base + 1 < byteMeasure.length) {\n    size /= 1024;\n    base++;\n  }\n  size = Math.floor(size * Math.pow(10, precision)) / Math.pow(10, precision);\n  return size + ' ' + byteMeasure[base];\n});\n\nTemplateHelpers.registerFieldHelper('translatedCaption', (value: string) => {\n  return FacetUtils.tryToGetTranslatedCaption('@filetype', value);\n});\n\nTemplateHelpers.registerTemplateHelper('loadTemplate', (id: string, condition: boolean = true, data?: any) => {\n  if (Utils.isNullOrUndefined(data)) {\n    data = resolveQueryResult();\n  }\n  if (condition) {\n    return TemplateCache.getTemplate(id).instantiateToString(data, {\n      checkCondition: false\n    });\n  }\n  return '';\n});\n\nTemplateHelpers.registerTemplateHelper('encodeCarriageReturn', (data: string) => {\n  if (Utils.isNullOrUndefined(data)) {\n    return undefined;\n  } else {\n    return StringUtils.encodeCarriageReturn(data);\n  }\n});\n\nTemplateHelpers.registerTemplateHelper('isMobileDevice', () => {\n  return DeviceUtils.isMobileDevice() ? DeviceUtils.getDeviceName() : null;\n});\n\nfunction resolveQueryResult(): IQueryResult {\n  let found;\n  let resultList = Component.getComponentRef('ResultList');\n  if (resultList) {\n    found = resultList.resultCurrentlyBeingRendered;\n  }\n  if (!found) {\n    let quickview = Component.getComponentRef('Quickview');\n    if (quickview) {\n      found = quickview.resultCurrentlyBeingRendered;\n    }\n  }\n  return found;\n}\n\nfunction resolveTermsToHighlight(): IHighlightTerm {\n  let currentQueryResult = resolveQueryResult();\n  if (currentQueryResult) {\n    return currentQueryResult.termsToHighlight;\n  }\n}\n\nfunction resolvePhrasesToHighlight(): IHighlightPhrase {\n  let currentQueryResult = resolveQueryResult();\n  if (currentQueryResult) {\n    return currentQueryResult.phrasesToHighlight;\n  }\n}\n\nfunction termsToHighlightAreDefined(termsToHighlight, phrasesToHighlight) {\n  return Utils.isNonEmptyArray(_.keys(termsToHighlight)) || Utils.isNonEmptyArray(_.keys(phrasesToHighlight));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Templates/CoreHelpers.ts","import { IResponsiveComponent, IResponsiveComponentOptions, ResponsiveComponentsManager } from './ResponsiveComponentsManager';\nimport { SearchInterface } from '../SearchInterface/SearchInterface';\nimport { ResultList } from '../ResultList/ResultList';\nimport { $$, Dom } from '../../utils/Dom';\nimport { Component } from '../Base/Component';\nimport { Logger } from '../../misc/Logger';\nimport { ResponsiveDropdown } from './ResponsiveDropdown/ResponsiveDropdown';\n\nexport class ResponsiveDefaultResultTemplate implements IResponsiveComponent {\n  private searchInterface: SearchInterface;\n  private resultList: ResultList;\n\n  private currentMode: string;\n\n  public static init(root: HTMLElement, component: ResultList, options: IResponsiveComponentOptions) {\n    if (!$$(root).find(`.${Component.computeCssClassName(ResultList)}`)) {\n      let logger = new Logger('ResponsiveDefaultResultTemplate');\n      logger.trace('No ResultLayout component found : Cannot instantiate ResponsiveResultLayout');\n      return;\n    }\n    ResponsiveComponentsManager.register(ResponsiveDefaultResultTemplate, $$(root), ResultList.ID, component, options);\n  }\n\n  constructor(public coveoRoot: Dom, public ID: string, options: IResponsiveComponentOptions, responsiveDropdown?: ResponsiveDropdown) {\n    this.searchInterface = <SearchInterface>Component.get(this.coveoRoot.el, SearchInterface, false);\n    this.currentMode = 'large';\n  }\n\n  public registerComponent(accept: ResultList) {\n    if (accept instanceof ResultList) {\n      this.resultList = accept;\n      return true;\n    }\n    return false;\n  }\n\n  public handleResizeEvent() {\n    let lastResults = this.resultList.queryController.getLastResults();\n    if (this.needSmallMode()) {\n      $$(this.resultList.options.resultsContainer).addClass('coveo-card-layout-container');\n      $$(this.resultList.options.resultsContainer).removeClass(`coveo-list-layout-container`);\n      if (this.currentMode != 'small') {\n        if (lastResults) {\n          this.resultList.buildResults(lastResults).then((elements: HTMLElement[]) => {\n            this.resultList.renderResults(elements);\n          });\n        }\n        this.currentMode = 'small';\n      }\n    } else {\n      $$(this.resultList.options.resultsContainer).removeClass('coveo-card-layout-container');\n      $$(this.resultList.options.resultsContainer).addClass(`coveo-list-layout-container`);\n      if (this.currentMode != 'large') {\n        if (lastResults) {\n          this.resultList.buildResults(lastResults).then((elements: HTMLElement[]) => {\n            this.resultList.renderResults(elements);\n          });\n        }\n        this.currentMode = 'large';\n      }\n    }\n  }\n\n  private needSmallMode(): boolean {\n    return this.coveoRoot.width() <= this.searchInterface.responsiveComponents.getSmallScreenWidth();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResponsiveComponents/ResponsiveDefaultResultTemplate.ts","import { IQueryResult } from '../../rest/QueryResult';\nimport { $$, Dom } from '../../utils/Dom';\nimport { Component } from '../Base/Component';\nimport { SearchInterface } from '../SearchInterface/SearchInterface';\n\nexport interface ResultToRender {\n  resultElement: HTMLElement;\n  componentsInside: Component[];\n}\n\nexport class ResultContainer {\n  public static resultCurrentlyBeingRendered: IQueryResult = null;\n\n  public resultContainerElement: Dom;\n\n  constructor(resultContainer: HTMLElement, private searchInterface: SearchInterface) {\n    this.resultContainerElement = $$(resultContainer);\n  }\n\n  public empty() {\n    this.searchInterface.detachComponentsInside(this.resultContainerElement.el);\n    $$(this.resultContainerElement).empty();\n  }\n\n  public addClass(classToAdd: string) {\n    this.resultContainerElement.addClass(classToAdd);\n  }\n\n  public isEmpty() {\n    return this.resultContainerElement.isEmpty();\n  }\n\n  public hideChildren() {\n    this.resultContainerElement.children().forEach(child => $$(child).hide());\n  }\n\n  public getResultElements() {\n    return this.resultContainerElement.findAll('.CoveoResult');\n  }\n\n  public get el() {\n    return this.resultContainerElement.el;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultList/ResultContainer.ts","import { ResultListRenderer } from './ResultListRenderer';\nimport { $$ } from '../../utils/Dom';\nimport _ = require('underscore');\n\nexport class ResultListCardRenderer extends ResultListRenderer {\n  getEndFragment(resultElements: HTMLElement[]) {\n    return new Promise<DocumentFragment>(resolve => {\n      if (!_.isEmpty(resultElements)) {\n        // with infinite scrolling, we want the additional results to append at the end of the previous query.\n        // For this, we need to remove the padding.\n        if (this.resultListOptions.enableInfiniteScroll) {\n          const needToBeRemoved = $$(this.resultListOptions.resultsContainer).findAll('.coveo-card-layout-padding');\n          _.each(needToBeRemoved, toRemove => $$(toRemove).remove());\n        }\n        // Used to prevent last card from spanning the grid's whole width\n        const emptyCards = document.createDocumentFragment();\n        _.times(3, () => emptyCards.appendChild($$('div', { className: 'coveo-card-layout coveo-card-layout-padding' }).el));\n        resolve(emptyCards);\n      }\n      resolve(null);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultList/ResultListCardRenderer.ts","import { IResultListOptions } from './ResultListOptions';\nimport { ResultListRenderer } from './ResultListRenderer';\nimport { TemplateRole } from '../Templates/Template';\nimport { TableTemplate } from '../Templates/TableTemplate';\nimport { $$ } from '../../utils/Dom';\nimport _ = require('underscore');\n\nexport class ResultListTableRenderer extends ResultListRenderer {\n  private shouldDisplayHeader: boolean = true;\n  private shouldDisplayFooter: boolean = false;\n\n  constructor(protected resultListOptions: IResultListOptions, protected autoCreateComponentsFn: Function) {\n    super(resultListOptions, autoCreateComponentsFn);\n    if (this.resultListOptions.resultTemplate instanceof TableTemplate) {\n      if (this.resultListOptions.resultTemplate.hasTemplateWithRole('table-footer')) {\n        this.shouldDisplayFooter = true;\n      }\n      // If custom templates are defined but no header template, do not display it.\n      if (\n        this.resultListOptions.resultTemplate.templates.length !== 0 &&\n        !this.resultListOptions.resultTemplate.hasTemplateWithRole('table-header')\n      ) {\n        this.shouldDisplayHeader = false;\n      }\n    }\n  }\n\n  getStartFragment(resultElements: HTMLElement[], append: boolean): Promise<DocumentFragment> {\n    if (!append && !_.isEmpty(resultElements) && this.shouldDisplayHeader) {\n      return this.renderRoledTemplate('table-header');\n    }\n  }\n\n  getEndFragment(resultElements: HTMLElement[], append: boolean): Promise<DocumentFragment> {\n    if (!append && !_.isEmpty(resultElements) && this.shouldDisplayFooter) {\n      return this.renderRoledTemplate('table-footer');\n    }\n  }\n\n  private async renderRoledTemplate(role: TemplateRole) {\n    const elem = await (<TableTemplate>this.resultListOptions.resultTemplate).instantiateRoleToElement(role);\n    $$(elem).addClass(`coveo-result-list-${role}`);\n    this.autoCreateComponentsFn(elem, undefined);\n    const frag = document.createDocumentFragment();\n    frag.appendChild(elem);\n    return frag;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultList/ResultListTableRenderer.ts","import 'styling/_Result';\nimport 'styling/_ResultFrame';\nimport 'styling/_ResultList';\nimport { chain, compact, contains, each, flatten, map, unique, without, uniqueId } from 'underscore';\nimport {\n  IBuildingQueryEventArgs,\n  IDuringQueryEventArgs,\n  INewQueryEventArgs,\n  IQueryErrorEventArgs,\n  IQuerySuccessEventArgs,\n  QueryEvents\n} from '../../events/QueryEvents';\nimport { IResultLayoutPopulateArgs, ResultLayoutEvents } from '../../events/ResultLayoutEvents';\nimport {\n  IChangeLayoutEventArgs,\n  IDisplayedNewResultEventArgs,\n  IDisplayedNewResultsEventArgs,\n  ResultListEvents\n} from '../../events/ResultListEvents';\nimport { exportGlobally } from '../../GlobalExports';\nimport { Assert } from '../../misc/Assert';\nimport { Defer } from '../../misc/Defer';\nimport { MODEL_EVENTS } from '../../models/Model';\nimport { QUERY_STATE_ATTRIBUTES } from '../../models/QueryStateModel';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { IQueryResults } from '../../rest/QueryResults';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { $$, Doc, Win } from '../../utils/Dom';\nimport { DomUtils } from '../../utils/DomUtils';\nimport { Utils } from '../../utils/Utils';\nimport { analyticsActionCauseList, IAnalyticsNoMeta } from '../Analytics/AnalyticsActionListMeta';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IInitializationParameters, IInitResult, Initialization } from '../Base/Initialization';\nimport { InitializationPlaceholder } from '../Base/InitializationPlaceholder';\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\nimport { ResponsiveDefaultResultTemplate } from '../ResponsiveComponents/ResponsiveDefaultResultTemplate';\nimport { ValidLayout, RendererValidLayout } from '../ResultLayoutSelector/ValidLayout';\nimport { CoreHelpers } from '../Templates/CoreHelpers';\nimport { DefaultRecommendationTemplate } from '../Templates/DefaultRecommendationTemplate';\nimport { DefaultResultTemplate } from '../Templates/DefaultResultTemplate';\nimport { TableTemplate } from '../Templates/TableTemplate';\nimport { Template } from '../Templates/Template';\nimport { TemplateCache } from '../Templates/TemplateCache';\nimport { TemplateList } from '../Templates/TemplateList';\nimport { ResultContainer } from './ResultContainer';\nimport { ResultListCardRenderer } from './ResultListCardRenderer';\nimport { ResultListRenderer } from './ResultListRenderer';\nimport { ResultListTableRenderer } from './ResultListTableRenderer';\nimport ResultLayoutSelectorModule = require('../ResultLayoutSelector/ResultLayoutSelector');\nimport { IResultListOptions } from './ResultListOptions';\nimport { ResultListUtils } from '../../utils/ResultListUtils';\nimport { TemplateToHtml, ITemplateToHtml } from '../Templates/TemplateToHtml';\n\nCoreHelpers.exportAllHelpersGlobally(window['Coveo']);\n\ntype WaitAnimation = 'fade' | 'spinner' | 'none';\n\n/**\n * The `ResultList` component is responsible for displaying query results by applying one or several result templates\n * (see [Result Templates](https://docs.coveo.com/en/413/)).\n *\n * It is possible to include multiple `ResultList` components along with a single `ResultLayout`\n * component in a search page to provide different result layouts (see\n * [Result Layouts](https://docs.coveo.com/en/360/)).\n *\n * This component supports infinite scrolling (see the\n * [`enableInfiniteScroll`]{@link ResultList.options.enableInfiniteScroll} option).\n */\nexport class ResultList extends Component {\n  private static getDefaultTemplate(e: HTMLElement): Template {\n    const template = ResultList.loadTemplatesFromCache();\n    if (template != null) {\n      return template;\n    }\n\n    const component = <ResultList>Component.get(e);\n    if (Coveo['Recommendation'] && component.searchInterface instanceof Coveo['Recommendation']) {\n      return new DefaultRecommendationTemplate();\n    }\n    return new DefaultResultTemplate();\n  }\n\n  private static loadTemplatesFromCache(): Template {\n    var pageTemplateNames = TemplateCache.getResultListTemplateNames();\n    if (pageTemplateNames.length > 0) {\n      return new TemplateList(compact(map(pageTemplateNames, templateName => TemplateCache.getTemplate(templateName))));\n    }\n\n    return null;\n  }\n\n  static ID = 'ResultList';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultList: ResultList\n    });\n  };\n\n  /**\n   * The options for the ResultList\n   * @componentOptions\n   */\n  static options: IResultListOptions = {\n    /**\n     * The element inside which to insert the rendered result templates.\n     *\n     * Performing a new query clears the content of this element.\n     *\n     * You can change the container by specifying its selector (e.g.,\n     * `data-result-container-selector='#someCssSelector'`).\n     *\n     * If you specify no value for this option, a `div` element will be dynamically created and appended to the result\n     * list. This element will then be used as a result container.\n     */\n    resultsContainer: ComponentOptions.buildChildHtmlElementOption({ alias: 'resultContainerSelector' }),\n    resultTemplate: TemplateComponentOptions.buildTemplateOption({ defaultFunction: ResultList.getDefaultTemplate }),\n\n    /**\n     * The type of animation to display while waiting for a query to return.\n     *\n     * The possible values are:\n     * - `fade`: Fades out the current list of results while the query is executing.\n     * - `spinner`: Shows a spinning animation while the query is executing.\n     * - `none`: Use no animation during queries.\n     *\n     * See also the [`waitAnimationContainer`]{@link ResultList.options.waitAnimationContainer} option.\n     *\n     * @examples spinner\n     */\n    waitAnimation: ComponentOptions.buildStringOption<WaitAnimation>({ defaultValue: 'none' }),\n\n    /**\n     * The element inside which to display the [`waitAnimation`]{@link ResultList.options.waitAnimation}.\n     *\n     * You can change this by specifying a CSS selector (e.g.,\n     * `data-wait-animation-container-selector='#someCssSelector'`).\n     *\n     * Defaults to the value of the [`resultsContainer`]{@link ResultList.options.resultsContainer} option.\n     */\n    waitAnimationContainer: ComponentOptions.buildChildHtmlElementOption({\n      postProcessing: (value, options: IResultListOptions) => value || options.resultsContainer\n    }),\n\n    /**\n     * Whether to automatically retrieve an additional page of results and append it to the\n     * results that the `ResultList` is currently displaying when the user scrolls down to the bottom of the\n     * [`infiniteScrollContainer`]{@link ResultList.options.infiniteScrollContainer}.\n     *\n     * See also the [`infiniteScrollPageSize`]{@link ResultList.options.infiniteScrollPageSize} and\n     * [`enableInfiniteScrollWaitingAnimation`]{@link ResultList.options.enableInfiniteScrollWaitingAnimation} options.\n     *\n     * It is important to specify the `infiniteScrollContainer` option manually if you want the scrolling element to be\n     * something else than the default `window` element. Otherwise, you might find yourself in a strange state where the\n     * framework rapidly triggers multiple successive query.\n     */\n    enableInfiniteScroll: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * The number of additional results to fetch when the user scrolls down to the bottom of the\n     * [`infiniteScrollContainer`]{@link ResultList.options.infiniteScrollContainer}.\n     *\n     * @examples 5\n     */\n    infiniteScrollPageSize: ComponentOptions.buildNumberOption({\n      defaultValue: 10,\n      min: 1,\n      depend: 'enableInfiniteScroll'\n    }),\n\n    /**\n     * The element that triggers fetching additional results when the end user scrolls down to its bottom.\n     *\n     * You can change the container by specifying its selector (e.g.,\n     * `data-infinite-scroll-container-selector='#someCssSelector'`).\n     *\n     * By default, the framework uses the first vertically scrollable parent element it finds, starting from the\n     * `ResultList` element itself. A vertically scrollable element is an element whose CSS `overflow-y` attribute is\n     * `scroll`.\n     *\n     * This implies that if the framework can find no scrollable parent, it uses the `window` itself as a scrollable\n     * container.\n     *\n     * This heuristic is not perfect, for technical reasons. There are always some corner case CSS combination which the\n     * framework will not be able to correctly detect as 'scrollable'.\n     *\n     * It is highly recommended that you manually set this option if you wish something else than the `window` to be the\n     * scrollable element.\n     */\n    infiniteScrollContainer: ComponentOptions.buildChildHtmlElementOption({\n      depend: 'enableInfiniteScroll',\n      defaultFunction: element => ComponentOptions.findParentScrolling(element)\n    }),\n\n    /**\n     * Whether to display the [`waitingAnimation`]{@link ResultList.options.waitAnimation} while fetching additional\n     * results.\n     */\n    enableInfiniteScrollWaitingAnimation: ComponentOptions.buildBooleanOption({\n      depend: 'enableInfiniteScroll',\n      defaultValue: true\n    }),\n    mobileScrollContainer: ComponentOptions.buildSelectorOption({\n      defaultFunction: () => <HTMLElement>document.querySelector('.coveo-results-column')\n    }),\n\n    /**\n     * Whether the `ResultList` should scan its result templates to discover which fields it must request to\n     * be able to render all results.\n     *\n     * Setting this option to `true` ensures that the Coveo Search API does not return fields that are unnecessary for\n     * the UI to function.\n     *\n     * **Notes:**\n     *\n     * - Many interfaces created with the JavaScript Search Interface Editor explicitly set this option to `true`.\n     * - You cannot set this option to `true` in the Coveo for Sitecore integration.\n     */\n    autoSelectFieldsToInclude: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * A list of fields to include in the query results.\n     *\n     * If you set the [`autoSelectFieldsToInclude`]{@link ResultList.options.autoSelectFieldsToInclude} option to\n     * `true`, the Coveo Search API returns the fields you specify for this option (if those fields are available) in\n     * addition to the fields which the `ResultList` automatically requests.\n     *\n     * Otherwise, the Coveo Search API only returns the fields you specify for this option (if those fields are\n     * available), unless you leave this option undefined, in which case the Coveo Search API returns all available\n     * fields.\n     */\n    fieldsToInclude: ComponentOptions.buildFieldsOption({ includeInResults: true }),\n\n    /**\n     * Specifies the layout to use when displaying results in this `ResultList` (see\n     * [Result Layouts](https://docs.coveo.com/en/360/)). Specifying a value for this option automatically\n     * populates a [`ResultLayout`]{@link ResultLayout} component with a switcher for the layout.\n     *\n     * For example, if there are two `ResultList` components in the page, one with its `layout` set to `list` and the\n     * other with the same option set to `card`, then the `ResultLayout` component will render two buttons respectively\n     * entitled **List** and **Card**.\n     *\n     * See the [`ValidLayout`]{@link ValidLayout} type for the list of possible values.\n     *\n     * @examples card\n     */\n    layout: ComponentOptions.buildStringOption<ValidLayout>({\n      defaultValue: 'list',\n      required: true\n    }),\n\n    /**\n     * Whether to scroll back to the top of the page when the end-user interacts with a facet.\n     *\n     * **Note:** Setting this option to `false` has no effect on dynamic facets. To disable this behavior on a `DynamicFacet` component, you must set its own [`enableScrollToTop`]{@link DynamicFacet.options.enableScrollToTop} option to `false`.\n     *\n     * @availablesince [July 2019 Release (v2.6459)](https://docs.coveo.com/en/2938/)\n     */\n    enableScrollToTop: ComponentOptions.buildBooleanOption({\n      defaultValue: true,\n      depend: 'enableInfiniteScroll'\n    })\n  };\n\n  public static resultCurrentlyBeingRendered: IQueryResult = null;\n  public currentlyDisplayedResults: IQueryResult[] = [];\n  private fetchingMoreResults: Promise<IQueryResults>;\n  private reachedTheEndOfResults = false;\n  private disableLayoutChange = false;\n  private renderer: ResultListRenderer;\n  private resultContainer: ResultContainer;\n\n  // This variable serves to block some setup where the framework fails to correctly identify the \"real\" scrolling container.\n  // Since it's not technically feasible to correctly identify the scrolling container in every possible scenario without some very complex logic, we instead try to add some kind of mechanism to\n  // block runaway requests where UI will keep asking more results in the index, eventually bringing the browser to it's knee.\n  // Those successive request are needed in \"displayMoreResults\" to ensure we fill the scrolling container correctly.\n  // Since the container is not identified correctly, it is never \"full\", so we keep asking for more.\n  // It is reset every time the user actually scroll the container manually.\n  private successiveScrollCount = 0;\n  private static MAX_AMOUNT_OF_SUCESSIVE_REQUESTS = 5;\n\n  /**\n   * Creates a new `ResultList` component. Binds various event related to queries (e.g., on querySuccess ->\n   * renderResults). Binds scroll event if the [`enableInfiniteScroll`]{@link ResultList.options.enableInfiniteScroll}\n   * option is `true`.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultList` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param elementClassId The class that this component should instantiate. Components that extend the base ResultList\n   * use this. Default value is `CoveoResultList`.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IResultListOptions,\n    public bindings?: IComponentBindings,\n    elementClassId: string = ResultList.ID\n  ) {\n    super(element, elementClassId, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, ResultList, options);\n\n    Assert.exists(element);\n    Assert.exists(this.options);\n    Assert.exists(this.options.resultTemplate);\n    Assert.exists(this.options.infiniteScrollContainer);\n\n    this.showOrHideElementsDependingOnState(false, false);\n\n    this.bind.onRootElement<INewQueryEventArgs>(QueryEvents.newQuery, (args: INewQueryEventArgs) => this.handleNewQuery());\n    this.bind.onRootElement<IBuildingQueryEventArgs>(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) =>\n      this.handleBuildingQuery(args)\n    );\n    this.bind.onRootElement<IQuerySuccessEventArgs>(QueryEvents.querySuccess, (args: IQuerySuccessEventArgs) =>\n      this.handleQuerySuccess(args)\n    );\n    this.bind.onRootElement<IDuringQueryEventArgs>(QueryEvents.duringQuery, (args: IDuringQueryEventArgs) => this.handleDuringQuery());\n    this.bind.onRootElement<IQueryErrorEventArgs>(QueryEvents.queryError, (args: IQueryErrorEventArgs) => this.handleQueryError());\n    $$(this.root).on(ResultListEvents.changeLayout, (e: Event, args: IChangeLayoutEventArgs) => this.handleChangeLayout(args));\n\n    if (this.options.enableInfiniteScroll) {\n      this.handlePageChanged();\n      this.bind.on(<HTMLElement>this.options.infiniteScrollContainer, 'scroll', (e: Event) => {\n        this.successiveScrollCount = 0;\n        this.handleScrollOfResultList();\n      });\n    }\n    this.bind.onQueryState(MODEL_EVENTS.CHANGE_ONE, QUERY_STATE_ATTRIBUTES.FIRST, () => this.handlePageChanged());\n\n    this.resultContainer = this.initResultContainer();\n    Assert.exists(this.options.resultsContainer);\n\n    this.initWaitAnimationContainer();\n    Assert.exists(this.options.waitAnimationContainer);\n\n    this.setupTemplatesVersusLayouts();\n    $$(this.root).on(ResultLayoutEvents.populateResultLayout, (e, args: IResultLayoutPopulateArgs) =>\n      args.layouts.push(this.options.layout)\n    );\n    this.setupRenderer();\n    this.makeElementFocusable();\n    this.ensureHasId();\n  }\n\n  /**\n   * Get the fields needed to be automatically included in the query for this result list.\n   * @returns {string[]}\n   */\n  public getAutoSelectedFieldsToInclude(): string[] {\n    return chain(this.options.resultTemplate.getFields()).concat(this.getMinimalFieldsToInclude()).compact().unique().value();\n  }\n\n  private setupTemplatesVersusLayouts() {\n    const layoutClassToAdd = `coveo-${this.options.layout}-layout-container`;\n    this.resultContainer.addClass(layoutClassToAdd);\n\n    if (this.options.layout === 'table') {\n      this.options.resultTemplate = new TableTemplate((<TemplateList>this.options.resultTemplate).templates || []);\n    }\n\n    // A TemplateList is the scenario where the result template are directly embedded inside the ResultList\n    // This is the typical scenario when a page gets created by the interface editor, for example.\n    // In that case, we try to stick closely that what is actually configured inside the page, and do no \"special magic\".\n    // Stick to the \"hardcoded\" configuration present in the page.\n    // We only add the correct layout options if it has not been set manually.\n    if (this.options.resultTemplate instanceof TemplateList) {\n      each((<TemplateList>this.options.resultTemplate).templates, (tmpl: Template) => {\n        if (!tmpl.layout) {\n          tmpl.layout = <ValidLayout>this.options.layout;\n        }\n      });\n    } else if (this.options.resultTemplate instanceof DefaultResultTemplate && this.options.layout == 'list') {\n      ResponsiveDefaultResultTemplate.init(this.root, this, {});\n    }\n  }\n\n  /**\n   * Empties the current result list content and appends the given array of HTMLElement.\n   *\n   * Can append to existing elements in the result list, or replace them.\n   *\n   * Triggers the `newResultsDisplayed` and `newResultDisplayed` events.\n   * @param resultsElement\n   * @param append\n   */\n  public renderResults(resultElements: HTMLElement[], append = false): Promise<void> {\n    if (!append) {\n      this.resultContainer.empty();\n    }\n\n    return this.renderer\n      .renderResults(resultElements, append, this.triggerNewResultDisplayed.bind(this))\n      .then(() => this.triggerNewResultsDisplayed());\n  }\n\n  /**\n   * Builds and returns an array of HTMLElement with the given result set.\n   * @param results the result set to build an array of HTMLElement from.\n   */\n  public buildResults(results: IQueryResults): Promise<HTMLElement[]> {\n    const layout = <RendererValidLayout>this.options.layout;\n    return this.templateToHtml.buildResults(results, layout, this.currentlyDisplayedResults);\n  }\n\n  /**\n   * Builds and returns an HTMLElement for the given result.\n   * @param result the result to build an HTMLElement from.\n   * @returns {HTMLElement}\n   */\n  public buildResult(result: IQueryResult): Promise<HTMLElement> {\n    const layout = <RendererValidLayout>this.options.layout;\n    return this.templateToHtml.buildResult(result, layout, this.currentlyDisplayedResults);\n  }\n\n  /**\n   * Executes a query to fetch new results. After the query returns, renders the new results.\n   *\n   * Asserts that there are more results to display by verifying whether the last query has returned as many results as\n   * requested.\n   *\n   * Asserts that the `ResultList` is not currently fetching results.\n   * @param count The number of results to fetch and display.\n   */\n  public displayMoreResults(count: number) {\n    Assert.isLargerOrEqualsThan(1, count);\n\n    if (this.isCurrentlyFetchingMoreResults()) {\n      this.logger.warn(\"Ignoring request to display more results since we're already doing so\");\n      return;\n    }\n    if (!this.hasPotentiallyMoreResultsToDisplay()) {\n      this.logger.warn(\"Ignoring request to display more results since we know there aren't more to display\");\n      return;\n    }\n\n    if (this.options.enableInfiniteScrollWaitingAnimation) {\n      this.showWaitingAnimationForInfiniteScrolling();\n    }\n\n    return this.fetchAndRenderMoreResults(count);\n  }\n\n  public get templateToHtml() {\n    const templateToHtmlArgs: ITemplateToHtml = {\n      resultTemplate: this.options.resultTemplate,\n      searchInterface: this.searchInterface,\n      queryStateModel: this.queryStateModel\n    };\n    return new TemplateToHtml(templateToHtmlArgs);\n  }\n\n  /**\n   * Gets the list of currently displayed result.\n   * @returns {IQueryResult[]}\n   */\n  public getDisplayedResults(): IQueryResult[] {\n    return this.currentlyDisplayedResults;\n  }\n\n  /**\n   * Gets the list of currently displayed result HTMLElement.\n   * @returns {HTMLElement[]}\n   */\n  public getDisplayedResultsElements(): HTMLElement[] {\n    return this.resultContainer.getResultElements();\n  }\n\n  public enable(): void {\n    super.enable();\n    this.disableLayoutChange = false;\n    each(this.resultLayoutSelectors, resultLayoutSelector => {\n      resultLayoutSelector.enableLayouts([this.options.layout] as ValidLayout[]);\n    });\n    $$(this.element).removeClass('coveo-hidden');\n  }\n\n  public disable(): void {\n    super.disable();\n\n    const otherLayoutsStillActive = map(this.otherResultLists, otherResultList => otherResultList.options.layout);\n    if (!contains(otherLayoutsStillActive, this.options.layout) && !this.disableLayoutChange) {\n      each(this.resultLayoutSelectors, resultLayoutSelector => {\n        resultLayoutSelector.disableLayouts([this.options.layout] as ValidLayout[]);\n      });\n    }\n    this.disableLayoutChange = false;\n    $$(this.element).addClass('coveo-hidden');\n  }\n\n  protected autoCreateComponentsInsideResult(element: HTMLElement, result: IQueryResult): IInitResult {\n    return this.templateToHtml.autoCreateComponentsInsideResult(element, result);\n  }\n\n  protected triggerNewResultDisplayed(result: IQueryResult, resultElement: HTMLElement) {\n    const args: IDisplayedNewResultEventArgs = {\n      result: result,\n      item: resultElement\n    };\n    $$(this.element).trigger(ResultListEvents.newResultDisplayed, args);\n  }\n\n  protected triggerNewResultsDisplayed() {\n    const args: IDisplayedNewResultsEventArgs = {\n      isInfiniteScrollEnabled: this.options.enableInfiniteScroll\n    };\n    $$(this.element).trigger(ResultListEvents.newResultsDisplayed, args);\n  }\n\n  private async fetchAndRenderMoreResults(count: number): Promise<IQueryResults> {\n    this.fetchingMoreResults = this.queryController.fetchMore(count);\n\n    try {\n      const data = await this.fetchingMoreResults;\n      Assert.exists(data);\n      this.usageAnalytics.logCustomEvent<IAnalyticsNoMeta>(analyticsActionCauseList.pagerScrolling, {}, this.element);\n\n      this.reachedTheEndOfResults = count > data.results.length;\n      this.renderNewResults(data);\n\n      this.resetStateAfterFetchingMoreResults();\n\n      return data;\n    } catch (e) {\n      this.resetStateAfterFetchingMoreResults();\n      return Promise.reject(e);\n    }\n  }\n\n  private async renderNewResults(data: IQueryResults) {\n    const elements = await this.buildResults(data);\n    this.renderResults(elements, true);\n    this.currentlyDisplayedResults.push(...data.results);\n    this.triggerNewResultsDisplayed();\n  }\n\n  private resetStateAfterFetchingMoreResults() {\n    this.hideWaitingAnimationForInfiniteScrolling();\n    this.fetchingMoreResults = undefined;\n    Defer.defer(() => {\n      this.successiveScrollCount++;\n      if (this.successiveScrollCount <= ResultList.MAX_AMOUNT_OF_SUCESSIVE_REQUESTS) {\n        this.handleScrollOfResultList();\n      } else {\n        this.logger.info(\n          `Result list has triggered 5 consecutive queries to try and fill up the scrolling container, but it is still unable to do so.\n          Try explicitly setting the 'data-infinite-scroll-container-selector' option on the result list. See: https://coveo.github.io/search-ui/components/resultlist.html#options.infinitescrollcontainer`\n        );\n      }\n    });\n  }\n\n  private handleDuringQuery() {\n    this.logger.trace('Emptying the result container');\n    this.cancelFetchingMoreResultsIfNeeded();\n    this.showWaitingAnimation();\n    this.showOrHideElementsDependingOnState(false, false);\n  }\n\n  private handleQueryError() {\n    this.hideWaitingAnimation();\n    this.resultContainer.empty();\n    this.currentlyDisplayedResults = [];\n    this.reachedTheEndOfResults = true;\n  }\n\n  private handleQuerySuccess(data: IQuerySuccessEventArgs) {\n    Assert.exists(data);\n    Assert.exists(data.results);\n    const results = data.results;\n    this.logger.trace('Received query results from new query', results);\n    this.hideWaitingAnimation();\n\n    ResultList.resultCurrentlyBeingRendered = undefined;\n    this.reachedTheEndOfResults = data.query.numberOfResults > data.results.results.length;\n\n    this.currentlyDisplayedResults = [];\n    this.buildResults(data.results).then(async (elements: HTMLElement[]) => {\n      await this.renderResults(elements);\n\n      this.showOrHideElementsDependingOnState(true, this.currentlyDisplayedResults.length != 0);\n\n      if (DeviceUtils.isMobileDevice() && this.options.mobileScrollContainer != undefined) {\n        this.options.mobileScrollContainer.scrollTop = 0;\n      }\n\n      if (this.options.enableInfiniteScroll && results.results.length == data.queryBuilder.numberOfResults) {\n        // This will check right away if we need to add more results to make the scroll container full & scrolling.\n        this.scrollToTopIfEnabled();\n        this.handleScrollOfResultList();\n      }\n    });\n  }\n\n  private handleScrollOfResultList() {\n    if (this.isCurrentlyFetchingMoreResults() || !this.options.enableInfiniteScroll) {\n      return;\n    }\n    if (this.isScrollingOfResultListAlmostAtTheBottom() && this.hasPotentiallyMoreResultsToDisplay()) {\n      this.displayMoreResults(this.options.infiniteScrollPageSize);\n    }\n  }\n\n  private handlePageChanged() {\n    this.bind.onRootElement(QueryEvents.deferredQuerySuccess, () => {\n      setTimeout(() => {\n        this.scrollToTopIfEnabled();\n      }, 0);\n    });\n  }\n\n  private scrollToTopIfEnabled() {\n    if (!this.options.enableScrollToTop) {\n      return;\n    }\n\n    ResultListUtils.scrollToTop(this.root);\n  }\n\n  private handleNewQuery() {\n    $$(this.element).removeClass('coveo-hidden');\n    ResultList.resultCurrentlyBeingRendered = undefined;\n  }\n\n  private get otherResultLists() {\n    const allResultLists = this.searchInterface.getComponents(ResultList.ID) as ResultList[];\n    return without(allResultLists, this);\n  }\n\n  private get resultLayoutSelectors() {\n    return this.searchInterface.getComponents('ResultLayoutSelector') as ResultLayoutSelectorModule.ResultLayoutSelector[];\n  }\n\n  protected handleBuildingQuery(args: IBuildingQueryEventArgs) {\n    if (this.options.fieldsToInclude != null) {\n      // remove the @\n      args.queryBuilder.addFieldsToInclude(map(this.options.fieldsToInclude, field => field.substr(1)));\n    }\n    if (this.options.autoSelectFieldsToInclude) {\n      const otherFields = flatten(\n        map(this.otherResultLists, otherResultList => {\n          return otherResultList.getAutoSelectedFieldsToInclude();\n        })\n      );\n\n      args.queryBuilder.addRequiredFields(unique(otherFields.concat(this.getAutoSelectedFieldsToInclude())));\n      args.queryBuilder.includeRequiredFields = true;\n    }\n  }\n\n  protected handleChangeLayout(args: IChangeLayoutEventArgs) {\n    if (args.layout === this.options.layout) {\n      this.disableLayoutChange = false;\n      this.enable();\n      this.options.resultTemplate.layout = <ValidLayout>this.options.layout;\n      if (args.results) {\n        // Prevent flickering when switching to a new layout that is empty\n        // add a temporary placeholder, the same that is used on initialization\n        if (this.resultContainer.isEmpty()) {\n          new InitializationPlaceholder(this.root).withVisibleRootElement().withPlaceholderForResultList();\n        }\n        Defer.defer(async () => {\n          const elements = await this.buildResults(args.results);\n          this.renderResults(elements);\n          this.showOrHideElementsDependingOnState(true, this.currentlyDisplayedResults.length !== 0);\n        });\n      }\n    } else {\n      this.disableLayoutChange = true;\n      this.disable();\n      this.resultContainer.empty();\n    }\n  }\n\n  private isCurrentlyFetchingMoreResults(): boolean {\n    return Utils.exists(this.fetchingMoreResults);\n  }\n\n  private getMinimalFieldsToInclude() {\n    // these fields are needed for analytics click event\n    return ['author', 'language', 'urihash', 'objecttype', 'collection', 'source', 'language', 'permanentid'];\n  }\n\n  private isScrollingOfResultListAlmostAtTheBottom(): boolean {\n    // this is in a try catch because the unit test fail otherwise (Window does not exist for phantom js in the console)\n    let isWindow;\n    try {\n      isWindow = this.options.infiniteScrollContainer instanceof Window;\n    } catch (e) {\n      isWindow = false;\n    }\n    return isWindow ? this.isScrollAtBottomForWindowElement() : this.isScrollAtBottomForHtmlElement();\n  }\n\n  private isScrollAtBottomForWindowElement() {\n    const win = new Win(window);\n    const windowHeight = win.height();\n    const scrollTop = win.scrollY();\n    const bodyHeight = new Doc(document).height();\n    return bodyHeight - (windowHeight + scrollTop) < windowHeight / 2;\n  }\n\n  private isScrollAtBottomForHtmlElement() {\n    const el = <HTMLElement>this.options.infiniteScrollContainer;\n    const elementHeight = el.clientHeight;\n    const scrollHeight = el.scrollHeight;\n    const bottomPosition = el.scrollTop + elementHeight;\n    return scrollHeight - bottomPosition < elementHeight / 2;\n  }\n\n  public hasPotentiallyMoreResultsToDisplay(): boolean {\n    return this.currentlyDisplayedResults.length > 0 && !this.reachedTheEndOfResults;\n  }\n\n  private cancelFetchingMoreResultsIfNeeded() {\n    if (this.isCurrentlyFetchingMoreResults()) {\n      this.logger.trace('Cancelling fetching more results');\n      Promise.reject(this.fetchingMoreResults);\n      this.fetchingMoreResults = undefined;\n    }\n  }\n\n  private showOrHideElementsDependingOnState(hasQuery: boolean, hasResults: boolean) {\n    const showIfQuery = $$(this.element).findAll('.coveo-show-if-query');\n    const showIfNoQuery = $$(this.element).findAll('.coveo-show-if-no-query');\n    const showIfResults = $$(this.element).findAll('.coveo-show-if-results');\n    const showIfNoResults = $$(this.element).findAll('.coveo-show-if-no-results');\n\n    each(showIfQuery, (s: HTMLElement) => {\n      $$(s).toggle(hasQuery);\n    });\n    each(showIfNoQuery, (s: HTMLElement) => {\n      $$(s).toggle(!hasQuery);\n    });\n    each(showIfResults, (s: HTMLElement) => {\n      $$(s).toggle(hasQuery && hasResults);\n    });\n    each(showIfNoResults, (s: HTMLElement) => {\n      $$(s).toggle(hasQuery && !hasResults);\n    });\n  }\n\n  private get waitAnimation() {\n    return this.options.waitAnimation.toLowerCase() as WaitAnimation;\n  }\n\n  private showWaitingAnimation() {\n    switch (this.waitAnimation) {\n      case 'fade':\n        $$(this.options.waitAnimationContainer).addClass('coveo-fade-out');\n        break;\n      case 'spinner':\n        this.resultContainer.hideChildren();\n        if ($$(this.options.waitAnimationContainer).find('.coveo-wait-animation') == undefined) {\n          this.options.waitAnimationContainer.appendChild(DomUtils.getBasicLoadingAnimation());\n        }\n        break;\n    }\n  }\n\n  private hideWaitingAnimation() {\n    switch (this.waitAnimation) {\n      case 'fade':\n        $$(this.options.waitAnimationContainer).removeClass('coveo-fade-out');\n        break;\n      case 'spinner':\n        const spinner = $$(this.options.waitAnimationContainer).find('.coveo-loading-spinner');\n        if (spinner) {\n          $$(spinner).detach();\n        }\n        break;\n    }\n  }\n\n  private showWaitingAnimationForInfiniteScrolling() {\n    const spinner = DomUtils.getLoadingSpinner();\n    if (this.options.layout == 'card' && this.options.enableInfiniteScroll) {\n      const previousSpinnerContainer = $$(this.options.waitAnimationContainer).findAll('.coveo-loading-spinner-container');\n      each(previousSpinnerContainer, previousSpinner => $$(previousSpinner).remove());\n      const spinnerContainer = $$('div', {\n        className: 'coveo-loading-spinner-container'\n      });\n      spinnerContainer.append(spinner);\n      this.options.waitAnimationContainer.appendChild(spinnerContainer.el);\n    } else {\n      this.options.waitAnimationContainer.appendChild(DomUtils.getLoadingSpinner());\n    }\n  }\n\n  private hideWaitingAnimationForInfiniteScrolling() {\n    const spinners = $$(this.options.waitAnimationContainer).findAll('.coveo-loading-spinner');\n    const containers = $$(this.options.waitAnimationContainer).findAll('.coveo-loading-spinner-container');\n    each(spinners, spinner => $$(spinner).remove());\n    each(containers, container => $$(container).remove());\n  }\n\n  private initResultContainer(): ResultContainer {\n    if (!this.options.resultsContainer) {\n      const elemType = this.options.layout === 'table' ? 'table' : 'div';\n      this.options.resultsContainer = $$(elemType, { className: 'coveo-result-list-container' }).el;\n      this.initResultContainerAddToDom();\n    }\n    return new ResultContainer(this.options.resultsContainer, this.searchInterface);\n  }\n\n  protected initResultContainerAddToDom() {\n    this.element.appendChild(this.options.resultsContainer);\n  }\n\n  private initWaitAnimationContainer() {\n    if (!this.options.waitAnimationContainer) {\n      this.options.waitAnimationContainer = this.resultContainer.el;\n    }\n  }\n\n  private setupRenderer() {\n    const initParameters: IInitializationParameters = {\n      options: this.searchInterface.options.originalOptionsObject,\n      bindings: this.bindings\n    };\n\n    const autoCreateComponentsFn = (elem: HTMLElement) => Initialization.automaticallyCreateComponentsInside(elem, initParameters);\n\n    switch (this.options.layout) {\n      case 'card':\n        this.renderer = new ResultListCardRenderer(this.options, autoCreateComponentsFn);\n        break;\n      case 'table':\n        this.renderer = new ResultListTableRenderer(this.options, autoCreateComponentsFn);\n        break;\n      case 'list':\n      default:\n        this.renderer = new ResultListRenderer(this.options, autoCreateComponentsFn);\n        break;\n    }\n  }\n\n  private makeElementFocusable() {\n    $$(this.element).setAttribute('tabindex', '-1');\n  }\n\n  private ensureHasId() {\n    const currentId = this.element.id;\n    if (currentId === '') {\n      this.element.id = uniqueId('coveo-result-list');\n    }\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultList);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultList/ResultList.ts"],"sourceRoot":""}