{"version":3,"sources":["Aggregate.min__45edc409d97327d59af1.js","./src/ui/Aggregate/Aggregate.ts"],"names":["webpackJsonpCoveo__temporary","234","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","Aggregate","ID","ComponentOptions","initComponentOptions","bind","onRootElement","QueryEvents","buildingQuery","args","handleBuildingQuery","querySuccess","handleQuerySuccess","$$","hide","_this","doExport","exportGlobally","request","field","maximumNumberOfValues","computedFields","operation","index","queryBuilder","groupByRequests","length","push","_","isNumber","results","groupByResults","gbr","aggregate","globalComputedFieldResults","text","Globalize","format","show","buildFieldOption","required","buildStringOption","defaultValue","Component","Initialization","registerAutoCreateComponent"],"mappings":"AAAAA,8BAA8B,KAExBC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GCjBtD,YAEA,OAEA,QAEA,OACA,OACA,QACA,OACA,OAaA,cAyDE,WAAmBC,EAA6BC,EAA6BC,GAA7E,MACE,YAAMF,EAASG,EAAUC,GAAIF,IAAS,IDjClC,OCgCa,GAAAF,UAA6B,EAAAC,UAG9C,EAAKA,QAAU,EAAAI,iBAAiBC,qBAAqBN,EAASG,EAAWF,GAEzE,EAAKM,KAAKC,cAAc,EAAAC,YAAYC,cAAe,SAACC,GAAkC,SAAKC,oBAAoBD,KAC/G,EAAKJ,KAAKC,cAAc,EAAAC,YAAYI,aAAc,SAACF,GAAiC,SAAKG,mBAAmBH,KAC5G,EAAAI,GAAG,EAAKf,SAASgB,ODvCNC,ECoEf,MA7F+B,QAGtB,EAAAC,SAAP,WACE,EAAAC,gBACEhB,UAAWA,KA8DP,YAAAS,oBAAR,SAA4BD,GAC1B,GAAIS,IACFC,MAAerC,KAAKiB,QAAQoB,MAC5BC,sBAAuB,EACvBC,iBAEIF,MAAerC,KAAKiB,QAAQoB,MAC5BG,UAAWxC,KAAKiB,QAAQuB,YAK9BxC,MAAKyC,MAAQd,EAAKe,aAAaC,gBAAgBC,OAC/CjB,EAAKe,aAAaC,gBAAgBE,KAAKT,IAGjC,YAAAN,mBAAR,SAA2BH,GACzB,GAAImB,EAAEC,SAAS/C,KAAKyC,QAAgD,GAAtCd,EAAKqB,QAAQC,eAAeL,OAAa,CACrE,GAAIM,GAAMvB,EAAKqB,QAAQC,eAAejD,KAAKyC,OACvCU,EAAYD,EAAIE,2BAA2B,EAC/C,GAAArB,GAAG/B,KAAKgB,SAASqC,KAAKC,EAAUC,OAAOJ,EAAWnD,KAAKiB,QAAQsC,SAC/D,EAAAxB,GAAG/B,KAAKgB,SAASwC,WAEjB,GAAAzB,GAAG/B,KAAKgB,SAASgB,QAzFd,EAAAZ,GAAK,YAYL,EAAAH,SAILoB,MAAO,EAAAhB,iBAAiBoC,kBAAmBC,UAAU,IAarDlB,UAAW,EAAAnB,iBAAiBsC,mBAAoBC,aAAc,QAe9DL,OAAQ,EAAAlC,iBAAiBsC,mBAAoBC,aAAc,QAgD/D,GA7F+B,EAAAC,UAAlB,GAAA1C,YA+Fb,EAAA2C,eAAeC,4BAA4B5C","file":"Aggregate.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([87],{\n\n/***/ 234:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar QueryEvents_1 = __webpack_require__(11);\nvar Initialization_1 = __webpack_require__(2);\nvar Dom_1 = __webpack_require__(1);\nvar Globalize = __webpack_require__(23);\nvar _ = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n/**\n * The Aggregate component allows to display the result on an aggregate operation on the index.\n *\n * It hooks itself to the query to add a new {@link IGroupByRequest}, then displays the result.\n */\nvar Aggregate = /** @class */ (function (_super) {\n    __extends(Aggregate, _super);\n    /**\n     * Creates a new Aggregate component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the Aggregate component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     */\n    function Aggregate(element, options, bindings) {\n        var _this = _super.call(this, element, Aggregate.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, Aggregate, options);\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.buildingQuery, function (args) { return _this.handleBuildingQuery(args); });\n        _this.bind.onRootElement(QueryEvents_1.QueryEvents.querySuccess, function (args) { return _this.handleQuerySuccess(args); });\n        Dom_1.$$(_this.element).hide();\n        return _this;\n    }\n    Aggregate.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            Aggregate: Aggregate\n        });\n    };\n    Aggregate.prototype.handleBuildingQuery = function (args) {\n        var request = {\n            field: this.options.field,\n            maximumNumberOfValues: 0,\n            computedFields: [\n                {\n                    field: this.options.field,\n                    operation: this.options.operation\n                }\n            ]\n        };\n        this.index = args.queryBuilder.groupByRequests.length;\n        args.queryBuilder.groupByRequests.push(request);\n    };\n    Aggregate.prototype.handleQuerySuccess = function (args) {\n        if (_.isNumber(this.index) && args.results.groupByResults.length != 0) {\n            var gbr = args.results.groupByResults[this.index];\n            var aggregate = gbr.globalComputedFieldResults[0];\n            Dom_1.$$(this.element).text(Globalize.format(aggregate, this.options.format));\n            Dom_1.$$(this.element).show();\n        }\n        else {\n            Dom_1.$$(this.element).hide();\n        }\n    };\n    Aggregate.ID = 'Aggregate';\n    /**\n     * The options for the component\n     * @componentOptions\n     */\n    Aggregate.options = {\n        /**\n         * Specifies the field on which to do the aggregate operation. This parameter is mandatory.\n         */\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption({ required: true }),\n        /**\n         * Specifies the aggregate operation to perform.\n         *\n         * The possible values are:\n         * - `sum` - Computes the sum of the computed field values.\n         * - `average` - Computes the average of the computed field values.\n         * - `minimum` - Finds the minimum value of the computed field values.\n         * - `maximum` - Finds the maximum value of the computed field values.\n         *\n         * Default value is `sum`.\n         */\n        operation: ComponentOptions_1.ComponentOptions.buildStringOption({ defaultValue: 'sum' }),\n        /**\n         * Specifies how to format the value.\n         *\n         * The available formats are defined in the Globalize library (see\n         * [Globalize](https://github.com/klaaspieter/jquery-global#globalizeformat-value-format-culture-).\n         *\n         * The most commonly used formats are:\n         * - `c0` - Formats the value as a currency.\n         * - `n0` - Formats the value as an integer.\n         * - `n2` - Formats the value as a floating point with 2 decimal digits.\n         *\n         * Default value is `c0`.\n         */\n        format: ComponentOptions_1.ComponentOptions.buildStringOption({ defaultValue: 'c0' })\n    };\n    return Aggregate;\n}(Component_1.Component));\nexports.Aggregate = Aggregate;\nInitialization_1.Initialization.registerAutoCreateComponent(Aggregate);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// Aggregate.min__45edc409d97327d59af1.js","import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { IFieldOption } from '../Base/IComponentOptions';\nimport { QueryEvents, IBuildingQueryEventArgs, IQuerySuccessEventArgs } from '../../events/QueryEvents';\nimport { IGroupByRequest } from '../../rest/GroupByRequest';\nimport { Initialization } from '../Base/Initialization';\nimport { $$ } from '../../utils/Dom';\nimport * as Globalize from 'globalize';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nexport interface IAggregateOptions {\n  field: IFieldOption;\n  operation?: string;\n  format?: string;\n}\n\n/**\n * The Aggregate component allows to display the result on an aggregate operation on the index.\n *\n * It hooks itself to the query to add a new {@link IGroupByRequest}, then displays the result.\n */\nexport class Aggregate extends Component {\n  static ID = 'Aggregate';\n\n  static doExport() {\n    exportGlobally({\n      Aggregate: Aggregate\n    });\n  }\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IAggregateOptions = {\n    /**\n     * Specifies the field on which to do the aggregate operation. This parameter is mandatory.\n     */\n    field: ComponentOptions.buildFieldOption({ required: true }),\n\n    /**\n     * Specifies the aggregate operation to perform.\n     *\n     * The possible values are:\n     * - `sum` - Computes the sum of the computed field values.\n     * - `average` - Computes the average of the computed field values.\n     * - `minimum` - Finds the minimum value of the computed field values.\n     * - `maximum` - Finds the maximum value of the computed field values.\n     *\n     * Default value is `sum`.\n     */\n    operation: ComponentOptions.buildStringOption({ defaultValue: 'sum' }),\n\n    /**\n     * Specifies how to format the value.\n     *\n     * The available formats are defined in the Globalize library (see\n     * [Globalize](https://github.com/klaaspieter/jquery-global#globalizeformat-value-format-culture-).\n     *\n     * The most commonly used formats are:\n     * - `c0` - Formats the value as a currency.\n     * - `n0` - Formats the value as an integer.\n     * - `n2` - Formats the value as a floating point with 2 decimal digits.\n     *\n     * Default value is `c0`.\n     */\n    format: ComponentOptions.buildStringOption({ defaultValue: 'c0' })\n  };\n\n  private index: number;\n\n  /**\n   * Creates a new Aggregate component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the Aggregate component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(public element: HTMLElement, public options?: IAggregateOptions, bindings?: IComponentBindings) {\n    super(element, Aggregate.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, Aggregate, options);\n\n    this.bind.onRootElement(QueryEvents.buildingQuery, (args: IBuildingQueryEventArgs) => this.handleBuildingQuery(args));\n    this.bind.onRootElement(QueryEvents.querySuccess, (args: IQuerySuccessEventArgs) => this.handleQuerySuccess(args));\n    $$(this.element).hide();\n  }\n\n  private handleBuildingQuery(args: IBuildingQueryEventArgs) {\n    var request: IGroupByRequest = {\n      field: <string>this.options.field,\n      maximumNumberOfValues: 0,\n      computedFields: [\n        {\n          field: <string>this.options.field,\n          operation: this.options.operation\n        }\n      ]\n    };\n\n    this.index = args.queryBuilder.groupByRequests.length;\n    args.queryBuilder.groupByRequests.push(request);\n  }\n\n  private handleQuerySuccess(args: IQuerySuccessEventArgs) {\n    if (_.isNumber(this.index) && args.results.groupByResults.length != 0) {\n      var gbr = args.results.groupByResults[this.index];\n      var aggregate = gbr.globalComputedFieldResults[0];\n      $$(this.element).text(Globalize.format(aggregate, this.options.format));\n      $$(this.element).show();\n    } else {\n      $$(this.element).hide();\n    }\n  }\n}\n\nInitialization.registerAutoCreateComponent(Aggregate);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/Aggregate/Aggregate.ts"],"sourceRoot":""}