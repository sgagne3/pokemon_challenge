{"version":3,"sources":["ResultAttachments.min__45edc409d97327d59af1.js","./src/ui/ResultAttachments/ResultAttachments.ts","./src/ui/ResultAttachments/DefaultResultAttachmentTemplate.ts"],"names":["webpackJsonpCoveo__temporary","268","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","result","attachmentLevel","ResultAttachments","ID","ComponentOptions","initComponentOptions","attachments","Utils","isNonEmptyArray","renderAttachments","_this","_","each","attachment","QueryUtils","setStateObjectOnQueryResult","queryStateModel","get","setSearchInterfaceObjectOnQueryResult","searchInterface","subResultTemplate","instantiateToElement","resultTemplate","then","container","autoCreateComponentsInsideResult","extend","$$","addClass","appendChild","attachmentHasSubAttachment","maximumAttachmentLevel","childAttachmentContainer","el","childResults","Assert","exists","initOptions","initParameters","getBindings","Initialization","automaticallyCreateComponentsInside","doExport","exportGlobally","DefaultResultAttachmentTemplate","TemplateComponentOptions","buildTemplateOption","defaultFunction","e","postProcessing","buildNumberOption","defaultValue","min","Component","registerAutoCreateComponent","651","instantiateToString","queryResult","Template","652"],"mappings":"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","file":"ResultAttachments.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([42],{\n\n/***/ 268:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar DefaultResultAttachmentTemplate_1 = __webpack_require__(651);\nvar Utils_1 = __webpack_require__(4);\nvar QueryUtils_1 = __webpack_require__(21);\nvar Initialization_1 = __webpack_require__(2);\nvar Assert_1 = __webpack_require__(5);\nvar Dom_1 = __webpack_require__(1);\nvar _ = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(652);\nvar TemplateComponentOptions_1 = __webpack_require__(61);\n/**\n * The `ResultAttachments` component renders attachments in a result set, for example when displaying emails. This\n * component is usable inside a result template when there is an active [`Folding`]{@link Folding} component in the\n * page.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n * @notSupportedIn salesforcefree\n */\nvar ResultAttachments = /** @class */ (function (_super) {\n    __extends(ResultAttachments, _super);\n    /**\n     * Creates a new `ResultAttachments` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `ResultAttachments` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param attachmentLevel The nesting depth.\n     */\n    function ResultAttachments(element, options, bindings, result, attachmentLevel) {\n        if (attachmentLevel === void 0) { attachmentLevel = 0; }\n        var _this = _super.call(this, element, ResultAttachments.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.attachmentLevel = attachmentLevel;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultAttachments, options);\n        _this.attachments = result.attachments;\n        if (Utils_1.Utils.isNonEmptyArray(_this.attachments)) {\n            _this.renderAttachments();\n        }\n        return _this;\n    }\n    ResultAttachments.prototype.renderAttachments = function () {\n        var _this = this;\n        _.each(this.attachments, function (attachment) {\n            QueryUtils_1.QueryUtils.setStateObjectOnQueryResult(_this.queryStateModel.get(), attachment);\n            QueryUtils_1.QueryUtils.setSearchInterfaceObjectOnQueryResult(_this.searchInterface, attachment);\n            var subTemplatePromise = _this.attachmentLevel > 0\n                ? _this.options.subResultTemplate.instantiateToElement(attachment)\n                : _this.options.resultTemplate.instantiateToElement(attachment);\n            subTemplatePromise.then(function (container) {\n                _this.autoCreateComponentsInsideResult(container, _.extend({}, attachment, { attachments: [] }));\n                Dom_1.$$(container).addClass('coveo-result-attachments-container');\n                _this.element.appendChild(container);\n                if (_this.attachmentHasSubAttachment(attachment) && _this.attachmentLevel < _this.options.maximumAttachmentLevel) {\n                    var childAttachmentContainer = Dom_1.$$('div').el;\n                    container.appendChild(childAttachmentContainer);\n                    new ResultAttachments(childAttachmentContainer, _this.options, _this.bindings, attachment, _this.attachmentLevel + 1);\n                }\n            });\n        });\n    };\n    ResultAttachments.prototype.attachmentHasSubAttachment = function (attachment) {\n        if (Utils_1.Utils.isNonEmptyArray(attachment.attachments)) {\n            return true;\n        }\n        else if (Utils_1.Utils.isNonEmptyArray(attachment.childResults)) {\n            attachment.attachments = attachment.childResults;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultAttachments.prototype.autoCreateComponentsInsideResult = function (element, result) {\n        Assert_1.Assert.exists(element);\n        var initOptions = this.searchInterface.options;\n        var initParameters = {\n            options: initOptions,\n            bindings: this.getBindings(),\n            result: result\n        };\n        Initialization_1.Initialization.automaticallyCreateComponentsInside(element, initParameters, [ResultAttachments.ID]);\n    };\n    ResultAttachments.ID = 'ResultAttachments';\n    ResultAttachments.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            ResultAttachments: ResultAttachments,\n            DefaultResultAttachmentTemplate: DefaultResultAttachmentTemplate_1.DefaultResultAttachmentTemplate\n        });\n    };\n    /**\n     * The options for the component\n     * @componentOptions\n     */\n    ResultAttachments.options = {\n        /**\n         * Specifies the template to use to render each attachment for a top result.\n         *\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n         * CSS selector (see {@link TemplateCache}).\n         *\n         * **Examples:**\n         *\n         * Specifying a previously registered template by referring to its HTML `id` attribute:\n         *\n         * ```html\n         * <div class=\"CoveoResultAttachments\" data-result-template-id=\"Foo\"></div>\n         * ```\n         *\n         * Specifying a previously registered template by referring to a CSS selector:\n         *\n         * ```html\n         * <div class='CoveoResultAttachments' data-result-template-selector=\".Foo\"></div>\n         * ```\n         *\n         * If you do not specify a custom folding template, the component uses the default result attachment template.\n         */\n        resultTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\n            defaultFunction: function (e) { return new DefaultResultAttachmentTemplate_1.DefaultResultAttachmentTemplate(); }\n        }),\n        /**\n         * Specifies the template to use to render sub-attachments, which are attachments within attachments, for example\n         * when multiple files are embedded within a `.zip` attachment.\n         *\n         * Sub-attachments can themselves contain sub-attachments, and so on up to a certain level (see the\n         * [`maximumAttachmentLevel`]{@link ResultAttachments.options.maximumAttachmentLevel} option).\n         *\n         * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n         * CSS selector (see {@link TemplateCache}).\n         *\n         * **Example:**\n         *\n         * Specifying a previously registered template by referring to its HTML `id` attribute:\n         *\n         * ```html\n         * <div class=\"CoveoResultAttachments\" data-sub-result-template-id=\"Foo\"></div>\n         * ```\n         *\n         * Specifying a previously registered template by referring to a CSS selector:\n         *\n         * ```html\n         * <div class=\"CoveoResultAttachments\" data-sub-result-template-selector=\".Foo\"></div>\n         * ```\n         *\n         * By default, this option uses the same template you specify for the\n         * [`resultTemplate`]{@link ResultAttachments.options.resultTemplate} option.\n         */\n        subResultTemplate: TemplateComponentOptions_1.TemplateComponentOptions.buildTemplateOption({\n            postProcessing: function (value, options) { return (value != null ? value : options.resultTemplate); }\n        }),\n        /**\n         * Specifies the maximum nesting depth. Beyond this depth, the component stops rendering sub-attachments.\n         *\n         * Default value is `5`. Minimum value is `0`.\n         */\n        maximumAttachmentLevel: ComponentOptions_1.ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 })\n    };\n    return ResultAttachments;\n}(Component_1.Component));\nexports.ResultAttachments = ResultAttachments;\nInitialization_1.Initialization.registerAutoCreateComponent(ResultAttachments);\n\n\n/***/ }),\n\n/***/ 651:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Template_1 = __webpack_require__(27);\nvar DefaultResultAttachmentTemplate = /** @class */ (function (_super) {\n    __extends(DefaultResultAttachmentTemplate, _super);\n    function DefaultResultAttachmentTemplate() {\n        return _super.call(this) || this;\n    }\n    DefaultResultAttachmentTemplate.prototype.instantiateToString = function (queryResult) {\n        return '<div><span class=\"CoveoIcon\"></span> <a class=\"CoveoResultLink\"></a> <span class=\"CoveoQuickview\"></span></div>';\n    };\n    return DefaultResultAttachmentTemplate;\n}(Template_1.Template));\nexports.DefaultResultAttachmentTemplate = DefaultResultAttachmentTemplate;\n\n\n/***/ }),\n\n/***/ 652:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// ResultAttachments.min__45edc409d97327d59af1.js","import { Template } from '../Templates/Template';\nimport { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { DefaultResultAttachmentTemplate } from './DefaultResultAttachmentTemplate';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { Utils } from '../../utils/Utils';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Initialization, IInitializationParameters } from '../Base/Initialization';\nimport { Assert } from '../../misc/Assert';\nimport { $$ } from '../../utils/Dom';\nimport * as _ from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_ResultAttachments';\nimport { TemplateComponentOptions } from '../Base/TemplateComponentOptions';\n\nexport interface IResultAttachmentsOptions {\n  resultTemplate?: Template;\n  subResultTemplate?: Template;\n  maximumAttachmentLevel?: number;\n}\n\n/**\n * The `ResultAttachments` component renders attachments in a result set, for example when displaying emails. This\n * component is usable inside a result template when there is an active [`Folding`]{@link Folding} component in the\n * page.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n * @notSupportedIn salesforcefree\n */\nexport class ResultAttachments extends Component {\n  static ID = 'ResultAttachments';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultAttachments: ResultAttachments,\n      DefaultResultAttachmentTemplate: DefaultResultAttachmentTemplate\n    });\n  };\n\n  /**\n   * The options for the component\n   * @componentOptions\n   */\n  static options: IResultAttachmentsOptions = {\n    /**\n     * Specifies the template to use to render each attachment for a top result.\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see {@link TemplateCache}).\n     *\n     * **Examples:**\n     *\n     * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoResultAttachments\" data-result-template-id=\"Foo\"></div>\n     * ```\n     *\n     * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class='CoveoResultAttachments' data-result-template-selector=\".Foo\"></div>\n     * ```\n     *\n     * If you do not specify a custom folding template, the component uses the default result attachment template.\n     */\n    resultTemplate: TemplateComponentOptions.buildTemplateOption({\n      defaultFunction: e => new DefaultResultAttachmentTemplate()\n    }),\n\n    /**\n     * Specifies the template to use to render sub-attachments, which are attachments within attachments, for example\n     * when multiple files are embedded within a `.zip` attachment.\n     *\n     * Sub-attachments can themselves contain sub-attachments, and so on up to a certain level (see the\n     * [`maximumAttachmentLevel`]{@link ResultAttachments.options.maximumAttachmentLevel} option).\n     *\n     * You can specify a previously registered template to use either by referring to its HTML `id` attribute or to a\n     * CSS selector (see {@link TemplateCache}).\n     *\n     * **Example:**\n     *\n     * Specifying a previously registered template by referring to its HTML `id` attribute:\n     *\n     * ```html\n     * <div class=\"CoveoResultAttachments\" data-sub-result-template-id=\"Foo\"></div>\n     * ```\n     *\n     * Specifying a previously registered template by referring to a CSS selector:\n     *\n     * ```html\n     * <div class=\"CoveoResultAttachments\" data-sub-result-template-selector=\".Foo\"></div>\n     * ```\n     *\n     * By default, this option uses the same template you specify for the\n     * [`resultTemplate`]{@link ResultAttachments.options.resultTemplate} option.\n     */\n    subResultTemplate: TemplateComponentOptions.buildTemplateOption({\n      postProcessing: (value: Template, options: IResultAttachmentsOptions) => (value != null ? value : options.resultTemplate)\n    }),\n\n    /**\n     * Specifies the maximum nesting depth. Beyond this depth, the component stops rendering sub-attachments.\n     *\n     * Default value is `5`. Minimum value is `0`.\n     */\n    maximumAttachmentLevel: ComponentOptions.buildNumberOption({ defaultValue: 5, min: 0 })\n  };\n\n  private attachments: IQueryResult[];\n\n  /**\n   * Creates a new `ResultAttachments` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultAttachments` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param attachmentLevel The nesting depth.\n   */\n  constructor(\n    public element: HTMLElement,\n    public options?: IResultAttachmentsOptions,\n    public bindings?: IComponentBindings,\n    result?: IQueryResult,\n    public attachmentLevel = 0\n  ) {\n    super(element, ResultAttachments.ID, bindings);\n\n    this.options = ComponentOptions.initComponentOptions(element, ResultAttachments, options);\n\n    this.attachments = result.attachments;\n    if (Utils.isNonEmptyArray(this.attachments)) {\n      this.renderAttachments();\n    }\n  }\n\n  private renderAttachments() {\n    _.each(this.attachments, attachment => {\n      QueryUtils.setStateObjectOnQueryResult(this.queryStateModel.get(), attachment);\n      QueryUtils.setSearchInterfaceObjectOnQueryResult(this.searchInterface, attachment);\n      let subTemplatePromise =\n        this.attachmentLevel > 0\n          ? this.options.subResultTemplate.instantiateToElement(attachment)\n          : this.options.resultTemplate.instantiateToElement(attachment);\n\n      subTemplatePromise.then((container: HTMLElement) => {\n        this.autoCreateComponentsInsideResult(container, _.extend({}, attachment, { attachments: [] }));\n\n        $$(container).addClass('coveo-result-attachments-container');\n        this.element.appendChild(container);\n\n        if (this.attachmentHasSubAttachment(attachment) && this.attachmentLevel < this.options.maximumAttachmentLevel) {\n          var childAttachmentContainer = $$('div').el;\n          container.appendChild(childAttachmentContainer);\n          new ResultAttachments(childAttachmentContainer, this.options, this.bindings, attachment, this.attachmentLevel + 1);\n        }\n      });\n    });\n  }\n\n  private attachmentHasSubAttachment(attachment: IQueryResult) {\n    if (Utils.isNonEmptyArray(attachment.attachments)) {\n      return true;\n    } else if (Utils.isNonEmptyArray(attachment.childResults)) {\n      attachment.attachments = attachment.childResults;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private autoCreateComponentsInsideResult(element: HTMLElement, result: IQueryResult) {\n    Assert.exists(element);\n    var initOptions = this.searchInterface.options;\n    var initParameters: IInitializationParameters = {\n      options: initOptions,\n      bindings: this.getBindings(),\n      result: result\n    };\n    Initialization.automaticallyCreateComponentsInside(element, initParameters, [ResultAttachments.ID]);\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultAttachments);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultAttachments/ResultAttachments.ts","import { Template } from '../Templates/Template';\nimport { IQueryResult } from '../../rest/QueryResult';\n\nexport class DefaultResultAttachmentTemplate extends Template {\n  constructor() {\n    super();\n  }\n\n  instantiateToString(queryResult?: IQueryResult): string {\n    return '<div><span class=\"CoveoIcon\"></span> <a class=\"CoveoResultLink\"></a> <span class=\"CoveoQuickview\"></span></div>';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultAttachments/DefaultResultAttachmentTemplate.ts"],"sourceRoot":""}