{"version":3,"sources":["YouTubeThumbnail.min__45edc409d97327d59af1.js","./src/ui/YouTube/YouTubeThumbnail.ts","./src/utils/AccessibleModal.ts","./src/ui/FocusTrap/FocusTrap.ts","./src/ui/ResultLink/ResultLink.ts"],"names":["webpackJsonpCoveo__temporary","185","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","result","ModalBox","origin","YouTubeThumbnail","ID","ComponentOptions","initComponentOptions","resultLink","$$","className","Component","computeCssClassName","ResultLink","el","thumbnailDiv","append","img","src","Utils","getFieldValue","alt","title","style","width","height","onerror","svgVideo","SVGIcons","icons","video","SVGDom","addStyleToSVGInContainer","remove","span","Initialization","automaticallyCreateComponentsInsideResult","embed","onClick","openYoutubeIframe","modalbox","AccessibleModal","searchInterface","modalContainer","overlayClose","_this","openResultLink","get","openLinkAsConfigured","iframe","extractVideoId","allowfullscreen","div","openResult","showDate","content","validation","wrapper","find","on","close","clickUri","split","doExport","exportGlobally","buildStringOption","defaultValue","buildBooleanOption","registerAutoCreateComponent","220","__assign","assign","t","s","i","n","arguments","length","call","ownerElement","modalboxModule","sizeMod","focusTrap","enumerable","configurable","activeModal","modalBox","querySelector","parameters","isOpen","openModalAndTrap","DomUtils","getQuickviewHeader","makeAccessible","open","initiallyFocusedElement","document","activeElement","onModalClose","body","FocusTrap","setAttribute","headerElement","makeCloseButtonAccessible","closeButton","l","tabIndex","focus","KeyboardUtils","keypressAction","KEYBOARD","ENTER","click","disable","contains","465","container","hiddenElements","enable","sortBy","querySelectorAll","removeEventListener","focusInEvent","focusOutEvent","showHiddenElements","enabled","addEventListener","e","onFocusIn","onFocusOut","hideAllExcept","pop","removeAttribute","hideElement","getAttribute","push","hideSiblings","allowedElement","parent","parentElement","without","children","forEach","elementToHide","getFocusableSibling","previous","elements","focusableElements","currentIndex","indexOf","focusSibling","sibling","focusFirstElement","elementIsBefore","oldElement","newElement","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","onLosingFocus","Defer","defer","focusIsAllowed","elementIsInPage","relatedTarget","target","532","92","os","logOpenDocument","debounce","queryController","saveLastQuery","documentURL","undefined","escapedClickUri","usageAnalytics","logClickEvent","analyticsActionCauseList","documentOpen","documentTitle","author","root","flush","initialOptions","resultLinkOptions","componentOptionsModel","ComponentOptionsModel","attributesEnum","extend","resolveResult","openQuickview","raw","DeviceUtils","isMobileDevice","Assert","exists","quickviewShouldBeOpened","once","window","setTimeout","clearTimeout","renderUri","bindEventToOpen","test","innerHTML","getDisplayedTitle","getDisplayedTitleAsText","openLink","logAnalytics","location","href","getResultUri","openLinkInNewWindow","openLinkInOutlook","hasOutlookField","toExecuteOnOpen","bindOnClickIfNotUndefined","bindOpenQuickviewIfNotUndefined","setHrefIfNotAlready","openLinkThatIsNotAnAnchor","titleTemplate","newTitle","StringUtils","buildStringTemplateFromResult","StreamHighlightUtils","highlightStreamText","termsToHighlight","phrasesToHighlight","HighlightUtils","highlightString","titleHighlights","setHtml","text","escape","AccessibleButton","withElement","withLabel","withSelectAction","build","resultElement","trigger","ResultListEvents","preventDefault","elementIsAnAnchor","alwaysOpenInNewWindow","openInOutlook","isNonEmptyString","filterProtocol","uri","isAbsolute","isRelative","hrefTemplate","field","setField","tagName","OSUtils","OS_NAME","MACOSX","WINDOWS","isUriThatMustBeOpenedInQuickview","toLowerCase","QueryUtils","hasHTMLVersion","buildFieldOption","buildCustomOption"],"mappings":"AAAAA,8BAA8B,GAAG,KAE3BC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GCjBtD,aACA,OAEA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,QAEA,QACA,SAoBA,cA0CE,WACSC,EACAC,EACAC,EACAC,EACPC,EACQC,OADR,KAAAD,MAAW,EAAAA,SALb,OAQE,YAAMJ,EAASM,EAAiBC,GAAIL,IAAS,IAPtC,GAAAF,UACA,EAAAC,UACA,EAAAC,WACA,EAAAC,SAEC,EAAAE,SAGR,EAAKJ,QAAU,EAAAO,iBAAiBC,qBAAqBT,EAASM,EAAkBL,GAEhF,EAAKS,WAAa,EAAAC,GAAG,KACnBC,UAAW,EAAAC,UAAUC,oBAAoB,EAAAC,cAGtCV,IACH,EAAKA,OAAS,EAAKK,WAAWM,GAGhC,IAAMC,GAAe,EAAAN,GAAG,OACtBC,UAAW,qCAGb,GAAKF,WAAWQ,OAAOD,EAAaD,GAEpC,IAAMG,GAAM,EAAAR,GAAG,OACbS,IAAK,EAAAC,MAAMC,cAAc,EAAKnB,OAAQ,kBACtCS,UAAW,8BACXW,IAAK,EAAKpB,OAAOqB,MACjBA,MAAO,EAAKrB,OAAOqB,OAGrBL,GAAIH,GAAGS,MAAMC,MAAQ,EAAKzB,QAAQyB,MAClCP,EAAIH,GAAGS,MAAME,OAAS,EAAK1B,QAAQ0B,OACnCR,EAAIH,GAAGY,QAAU,WACf,GAAMC,GAAW,EAAAlB,GAAG,SAAW,EAAAmB,SAASC,MAAMC,OAAOhB,EACrD,GAAAiB,OAAOC,yBAAyBL,GAC9BH,MAAO,EAAKzB,QAAQyB,QAEtB,EAAAf,GAAGQ,GAAKgB,SACRlB,EAAaC,OAAOW,IAEtBZ,EAAaC,OAAOC,EAAIH,GAExB,IAAMoB,GAAO,EAAAzB,GAAG,QACdC,UAAW,uCD7BT,OCgCJK,GAAaC,OAAOkB,EAAKpB,IAEzB,EAAAL,GAAG,EAAKX,SAASkB,OAAO,EAAKR,WAAWM,IAExC,EAAAqB,eAAeC,0CAA0CtC,EAASG,GAChEY,WAAY,EAAKd,QAAQsC,OAAUC,QAAS,WAAM,SAAKC,sBAAwB,OAEjF,EAAKC,SAAW,GAAI,GAAAC,gBAAgB,uBAAwB,EAAKC,gBAAgB3C,QAAQ4C,eAAgBzC,GACvG0C,cAAc,IDxCLC,ECqFf,MA/IsC,QA2G7B,YAAAC,eAAP,WACwC,EAAAC,IAAIjE,KAAK0B,WAAWM,IACtCkC,wBAGd,YAAAT,kBAAR,sBAEQU,EAAS,EAAAxC,GAAG,UAChBS,IAAK,iCAAiCpC,KAAKoE,iBAAgB,cAC3DC,gBAAiB,kBACjB3B,MAAO,OACPC,OAAQ,OACRH,MAAOxC,KAAKmB,OAAOqB,QAGf8B,EAAM,EAAA3C,GAAG,MAEf2C,GAAIpC,OAAOiC,EAAOnC,IAElBhC,KAAK0D,SAASa,YACZpD,OAAQnB,KAAKmB,OACbF,SAAWuD,UAAU,EAAMhC,MAAOxC,KAAKmB,OAAOqB,OAC9CtB,SAAUlB,KAAKkB,SACfuD,QAASH,EAAItC,GACb0C,WAAY,WAAM,UAClBrD,OAAQrB,KAAKqB,SAGf,EAAAM,GAAG,EAAAA,GAAG3B,KAAK0D,SAASiB,SAASC,KAAK,kCAAkCC,GAAG,QAAS,WAC9E,EAAKnB,SAASoB,WAIV,YAAAV,eAAR,WACE,MAAOpE,MAAKmB,OAAO4D,SAASC,MAAM,YAAY,IA5IzC,EAAAzD,GAAK,mBAEL,EAAA0D,SAAW,WAChB,EAAAC,gBACE5D,iBAAkBA,KAOf,EAAAL,SAMLyB,MAAO,EAAAlB,iBAAiB2D,mBAAoBC,aAAc,UAO1DzC,OAAQ,EAAAnB,iBAAiB2D,mBAAoBC,aAAc,UAU3D7B,MAAO,EAAA/B,iBAAiB6D,oBAAqBD,cAAc,KA4G/D,GA/IsC,EAAAvD,UAAzB,GAAAP,mBAgJb,EAAA+B,eAAeiC,4BAA4BhE,IDRrCiE,IACA,SAAU3F,EAAQC,EAASC,GAEjC,YAEA,IAAI0F,GAAYxF,MAAQA,KAAKwF,UAAatF,OAAOuF,QAAU,SAASC,GAChE,IAAK,GAAIC,GAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAAK,CACjDD,EAAIG,UAAUF,EACd,KAAK,GAAIpF,KAAKmF,GAAOzF,OAAOU,UAAUH,eAAeuF,KAAKL,EAAGnF,KACzDkF,EAAElF,GAAKmF,EAAEnF,IAEjB,MAAOkF,GAEXxF,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GEtLtD,aACA,SACA,OACA,OACA,QAIA,QAuBA,aA0BE,WACUa,EACAqE,EACAC,EACRjF,OADQ,KAAAiF,MAA0C,EAAA9E,cAClD,KAAAH,UAHQ,KAAAW,YACA,KAAAqE,eACA,KAAAC,iBAGRlG,KAAKiB,QAAU,GAEXkF,QAAS,OAERlF,GAyET,MAvGE,uBAAW,sBFoKLgD,IEpKN,WACE,QAASjE,KAAKoG,WFsKVC,YAAY,EACZC,cAAc,IEpKpB,sBAAW,uBFuKLrC,IEvKN,WACE,MAAOjE,MAAKuG,aAAevG,KAAKuG,YAAYC,UFyKxCH,YAAY,EACZC,cAAc,IEvKpB,sBAAW,uBF0KLrC,IE1KN,WACE,MAAOjE,MAAKuG,aAAevG,KAAKuG,YAAY9B,SF4KxC4B,YAAY,EACZC,cAAc,IE1KpB,sBAAW,uBF6KLrC,IE7KN,WACE,MAAOjE,MAAKuG,aAAevG,KAAKuG,YAAY5B,SF+KxC0B,YAAY,EACZC,cAAc,IE7KpB,sBAAY,6BFgLNrC,IEhLN,WACE,MAAOjE,MAAKgB,SAAWhB,KAAKgB,QAAQyF,cAA2B,2BFkL3DJ,YAAY,EACZC,cAAc,IElKb,YAAA/B,WAAP,SAAkBmC,GACZ1G,KAAK2G,SAGT3G,KAAK4G,kBACHnC,QAASiC,EAAWjC,QACpBC,WAAYgC,EAAWhC,WACvBrD,OAAQqF,EAAWrF,OACnBmB,MAAO,EAAAqE,SAASC,mBAAmBJ,EAAWvF,OAAQuF,EAAWzF,QAASyF,EAAWxF,UAAUc,KAEjGhC,KAAK+G,eAAeL,EAAWzF,QAAQuB,OAASkE,EAAWvF,OAAOqB,SAG7D,YAAAwE,KAAP,SAAYN,GACN1G,KAAK2G,SAGT3G,KAAK4G,iBAAiBF,GACtB1G,KAAK+G,mBAGC,YAAAH,iBAAR,SAAyBF,GAAzB,UACE1G,MAAKiH,wBAA0BP,EAAWrF,QAAW6F,SAASC,cAC9DnH,KAAKuG,YAAcvG,KAAKkG,eAAec,KAAKN,EAAWjC,SACrDjC,MAAOkE,EAAWlE,MAClBZ,UAAW5B,KAAK4B,UAChB8C,WAAY,WAEV,MADA,GAAK0C,eACEV,EAAWhC,cAEpB2C,KAAMrH,KAAKiG,aACXE,QAASnG,KAAKiB,QAAQkF,QACtBrC,aAAc9D,KAAKiB,QAAQ6C,eAE7B9D,KAAKoG,UAAY,GAAI,GAAAkB,UAAUtH,KAAKgB,UAG/B,YAAA8D,MAAP,WACO9E,KAAK2G,SAGV3G,KAAKuG,YAAYzB,QACjB9E,KAAKuG,YAAc,OAGb,YAAAQ,eAAR,SAAuBvE,GACrBxC,KAAKgB,QAAQuG,aAAa,aAAc,QACpC/E,GACFxC,KAAKwH,cAAcD,aAAa,aAAc/E,GAEhDxC,KAAKyH,6BAGC,YAAAA,0BAAR,WACE,GAAMC,GAA2B1H,KAAKgB,QAAQyF,cAAc,qBAC5DiB,GAAYH,aAAa,aAAc,EAAAI,EAAE,UACzCD,EAAYH,aAAa,OAAQ,UACjCG,EAAYE,SAAW,EACvBF,EAAYG,QACZ,EAAAlG,GAAG+F,GAAa7C,GAAG,QAAS,EAAAiD,cAAcC,eAAe,EAAAC,SAASC,MAAO,WAAM,MAAAP,GAAYQ,YAGrF,YAAAd,aAAR,WACEpH,KAAKoG,UAAU+B,UACfnI,KAAKoG,UAAY,KACbpG,KAAKiH,yBAA2BC,SAASG,KAAKe,SAASpI,KAAKiH,0BAC9DjH,KAAKiH,wBAAwBY,SAGnC,IA7Ga,GAAAlE,mBFmRP0E,IACA,SAAUzI,EAAQC,EAASC,GAEjC,YAEAI,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GGvTtD,aACA,OACA,OAEA,aAUE,WAAoBuH,GAAA,KAAAA,YAClBtI,KAAKuI,kBACLvI,KAAKwI,SAmIT,MAzIE,uBAAY,iCHwTNvE,IGxTN,WACE,MAAO,GAAAwE,OAAOzI,KAAKsI,UAAUI,iBAAiB,cAAe,SAAA1H,GAAW,MAAAA,GAAQ4G,YH0T5EvB,YAAY,EACZC,cAAc,IGnTb,YAAA6B,QAAP,WACEjB,SAASyB,oBAAoB,UAAW3I,KAAK4I,cAC7C1B,SAASyB,oBAAoB,WAAY3I,KAAK6I,eAC9C7I,KAAK8I,qBACL9I,KAAK+I,SAAU,GAGT,YAAAP,OAAR,qBACEtB,UAAS8B,iBAAiB,UAAYhJ,KAAK4I,aAAe,SAAAK,GAAK,SAAKC,UAAUD,KAC9E/B,SAAS8B,iBAAiB,WAAahJ,KAAK6I,cAAgB,SAAAI,GAAK,SAAKE,WAAWF,KACjFjJ,KAAKoJ,cAAcpJ,KAAKsI,WACxBtI,KAAK+I,SAAU,GAGT,YAAAD,mBAAR,WACE,KAAO9I,KAAKuI,eAAexC,QACzB/F,KAAKuI,eAAec,MAAMC,gBAAgB,gBAItC,YAAAC,YAAR,SAAoBvI,GACdA,EAAQwI,aAAa,iBAGzBxJ,KAAKuI,eAAekB,KAAKzI,GACzBA,EAAQuG,aAAa,cAAe,IAAG,KAGjC,YAAAmC,aAAR,SAAqBC,GAArB,WACQC,EAASD,EAAeE,aAC1BD,IACF,EAAAE,QAAQ,EAAAnI,GAAGiI,GAAQG,WAAYJ,GAAgBK,QAAQ,SAAAC,GACrD,EAAKV,YAAYU,MAKf,YAAAb,cAAR,SAAsBO,GACpB3J,KAAK0J,aAAaC,EAClB,IAAMC,GAASD,EAAeE,aAC1BD,IAAUA,IAAW1C,SAASG,MAChCrH,KAAKoJ,cAAcQ,IAIf,YAAAM,oBAAR,SAA4BlJ,EAAsBmJ,OAAA,KAAAA,OAAA,EAChD,IAAMC,GAAWpK,KAAKqK,kBAChBC,EAAeF,EAASG,QAAQvJ,EACtC,QAAsB,IAAlBsJ,EACK,KAEFF,GAAUE,GAAgBH,GAAY,EAAI,GAAKC,EAASrE,QAAUqE,EAASrE,SAG5E,YAAAyE,aAAR,SAAqBxJ,EAAsBmJ,OAAA,KAAAA,OAAA,EACzC,IAAMM,GAAUzK,KAAKkK,oBAAoBlJ,EAASmJ,EAC9CM,IACFA,EAAQ5C,SAIJ,YAAA6C,kBAAR,WACE,GAAMN,GAAWpK,KAAKqK,iBAClBD,GAASrE,QACXqE,EAAS,GAAGvC,SAIR,YAAA8C,gBAAR,SAAwBC,EAAyBC,GAC/C,QAAKA,GAGED,EAAWE,wBAAwBD,KAAgBE,KAAKC,6BAGzD,YAAAC,cAAR,SAAsBL,EAAyBC,GAA/C,UACE,GAAAK,MAAMC,MAAM,WACL,EAAKpC,UAGV,EAAKA,SAAU,EACX6B,GAAc,EAAKQ,eAAeR,GACpC,EAAKJ,aAAaI,EAAY,EAAKD,gBAAgBC,EAAYC,IAE/D,EAAKH,oBAEP,EAAK3B,SAAU,MAIX,YAAAqC,eAAR,SAAuBpK,GACrB,MAAOhB,MAAKsI,UAAUF,SAASpH,IAGzB,YAAAqK,gBAAR,SAAwBrK,GACtB,MAAOA,IAAWA,IAAYkG,SAASG,KAAKwC,eAGtC,YAAAX,UAAR,SAAkBD,GAChB,GAAKjJ,KAAK+I,QAAV,CAGA,GAAM6B,GAAa3B,EAAEqC,aAErB,KAD0BtL,KAAKqL,gBAAgBT,GAC/C,CAGA,GAAMC,GAAa5B,EAAEsC,MAChBvL,MAAKqL,gBAAgBR,KAGrB7K,KAAKoL,eAAeP,IACvB7K,KAAKiL,cAAc,KAAMJ,OAIrB,YAAA1B,WAAR,SAAmBF,GACjB,GAAKjJ,KAAK+I,QAAV,CAGA,GAAM8B,GAAa5B,EAAEqC,aAChBtL,MAAKqL,gBAAgBR,KAGrBA,GAAe7K,KAAKoL,eAAeP,IACtC7K,KAAKiL,cAAchC,EAAEsC,OAAuBV,MAGlD,IA/Ia,GAAAvD,aHmcPkE,IACA,SAAU5L,EAAQC,KAMlB4L,GACA,SAAU7L,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GI7dtD,YACA,OACA,QAEA,QAEA,QACA,QAEA,QACA,SACA,OACA,QACA,OACA,OACA,QACA,OACA,SACA,QACA,OACA,MAEA,OACA,aAQA,cAiNE,WACSC,EACAC,EACAC,EACAC,EACAuK,GALT,MAOE,YAAM1K,EAASe,EAAWR,GAAIL,IAAS,IANhC,GAAAF,UACA,EAAAC,UACA,EAAAC,WACA,EAAAC,SACA,EAAAuK,KAmND,EAAAC,gBAAkB,EAAAC,SACxB,WACE,EAAKC,gBAAgBC,eACrB,IAAIC,GAAc,EAAApK,GAAG,EAAKX,SAASwI,aAAa,YAC7BwC,IAAfD,GAA2C,IAAfA,IAC9BA,EAAc,EAAKE,iBAErB,EAAKC,eAAeC,cAClB,EAAAC,yBAAyBC,cAEvBN,YAAaA,EACbO,cAAe,EAAKnL,OAAOqB,MAC3B+J,OAAQ,EAAAlK,MAAMC,cAAc,EAAKnB,OAAQ,WAE3C,EAAKA,OACL,EAAKqL,MAEP,EAAAtB,MAAMuB,SAER,MACA,EAnOA,IAAMC,GAAiB,EAAAlL,iBAAiBC,qBAAqBT,EAASe,EAAYd,GAC5E0L,EAAoB,EAAKC,sBAAsB3I,IAAI,EAAA4I,sBAAsBC,eAAepL,WAa9F,IAZA,EAAKT,QAAU,EAAA8L,UAAWL,EAAgBC,GAE1C,EAAKxL,OAASA,GAAU,EAAK6L,gBAEK,MAA9B,EAAK/L,QAAQgM,gBACf,EAAKhM,QAAQgM,cAA+C,mBAA/B9L,EAAO+L,IAAmB,eAA0B,EAAAC,YAAYC,kBAE/F,EAAKpM,QAAQuG,aAAa,WAAY,KAEtC,EAAA8F,OAAOC,OAAO,EAAKV,uBACnB,EAAAS,OAAOC,OAAO,EAAKnM,SAEd,EAAKoM,0BAA2B,CAQnC,GAAM,GAAkB,EAAAC,KAAK,WAAM,SAAK7B,mBAExC,GAAAhK,GAAGX,GAAS6D,IAAI,cAAe,QAAS,YAAa,WAAY,EACjE,IAAI,EACJ,GAAAlD,GAAGX,GAAS6D,GAAG,aAAc,WAC3B,EAAiB4I,OAAOC,WAAW,EAAiB,OAEtD,EAAA/L,GAAGX,GAAS6D,GAAG,WAAY,WACrB,GACF8I,aAAa,KJ8Rf,MI1RJ,GAAKC,UAAU5M,EAASG,GACxB,EAAK0M,kBJyRM9J,EIjCf,MAtfgC,QAgQvB,YAAA6J,UAAP,SAAiB5M,EAAsBG,GACrC,GAAI,QAAQ2M,KAAK9N,KAAKgB,QAAQ+M,WAAY,CACxC,GAAMvL,GAAQxC,KAAKgO,mBACnBhO,MAAKgB,QAAQ+M,UAAYvL,EACpBxC,KAAKgB,QAAQwB,QAChBxC,KAAKgB,QAAQwB,MAAQxC,KAAKiO,6BAQzB,YAAAC,SAAP,SAAgBC,OAAA,KAAAA,OAAA,GACVA,GACFnO,KAAK2L,kBAEP8B,OAAOW,SAASC,KAAOrO,KAAKsO,gBAOvB,YAAAC,oBAAP,SAA2BJ,OAAA,KAAAA,OAAA,GACrBA,GACFnO,KAAK2L,kBAEP8B,OAAOzG,KAAKhH,KAAKsO,eAAgB,WAW5B,YAAAE,kBAAP,SAAyBL,OAAA,KAAAA,OAAA,GACnBnO,KAAKyO,oBACHN,GACFnO,KAAK2L,kBAEP3L,KAAKkO,aAWF,YAAAhK,qBAAP,SAA4BiK,OAAA,KAAAA,OAAA,GACtBnO,KAAK0O,kBACHP,GACFnO,KAAK2L,kBAEP3L,KAAK0O,oBAIC,YAAAb,gBAAV,WACE,MACE7N,MAAK2O,6BACL3O,KAAK4O,mCACL5O,KAAK6O,uBACL7O,KAAK8O,6BAID,YAAAd,kBAAR,WACE,GAAKhO,KAAKiB,QAAQ8N,cAIX,CACL,GAAIC,GAAW,EAAAC,YAAYC,8BAA8BlP,KAAKiB,QAAQ8N,cAAe/O,KAAKmB,OAC1F,OAAO6N,GACH,EAAAG,qBAAqBC,oBAAoBJ,EAAUhP,KAAKmB,OAAOkO,iBAAkBrP,KAAKmB,OAAOmO,oBAC7FtP,KAAKiM,gBAPT,MAAOjM,MAAKmB,OAAOqB,MACf,EAAA+M,eAAeC,gBAAgBxP,KAAKmB,OAAOqB,MAAOxC,KAAKmB,OAAOsO,gBAAiB,KAAM,mBACrFzP,KAAKiM,iBASL,YAAAgC,wBAAR,WACE,GAAM3F,GAAY,EAAA3G,GAAG,MAErB,OADA2G,GAAUoH,QAAQ1P,KAAKgO,qBAChB1F,EAAUqH,QAGnB,sBAAY,+BJsRN1L,IItRN,WACE,MAAO,GAAA2L,OAAO5P,KAAKmB,OAAO4D,WJwRtBsB,YAAY,EACZC,cAAc,IItRZ,YAAAqI,0BAAR,qBACE,YAA4B3C,IAAxBhM,KAAKiB,QAAQuC,UACfxD,KAAK0O,gBAAkB,SAACzF,GACtB,EAAKhI,QAAQuC,QAAQwC,KAAK,EAAMiD,EAAG,EAAK9H,UAG1C,GAAI,GAAA0O,kBACDC,YAAY9P,KAAKgB,SACjB+O,UAAU/P,KAAKmB,OAAOqB,OACtBwN,iBAAiB,SAAC/G,GAAa,SAAKyF,gBAAgBzF,KACpDgH,SAEI,IAMH,YAAArB,gCAAR,qBACE,SAAI5O,KAAKuN,4BACPvN,KAAK0O,gBAAkB,WACrB,EAAA/M,GAAG,EAAKT,SAASgP,eAAeC,QAAQ,EAAAC,iBAAiBnD,gBAG3D,EAAAtL,GAAG3B,KAAKgB,SAAS6D,GAAG,QAAS,SAACoE,GAC5BA,EAAEoH,iBACF,EAAK3B,qBAGA,IAMH,YAAAI,0BAAR,qBACE,QAAK9O,KAAKsQ,sBACRtQ,KAAK0O,gBAAkB,WACjB,EAAKzN,QAAQsP,sBACX,EAAKtP,QAAQuP,cACf,EAAKhC,oBAEL,EAAKD,sBAGP,EAAKL,YAIT,EAAAvM,GAAG3B,KAAKgB,SAAS6D,GAAG,QAAS,WAC3B,EAAK6J,qBAGA,IAKH,YAAAG,oBAAR,WAIE,SAAI7O,KAAKsQ,qBAAwB,EAAAjO,MAAMoO,iBAAiB,EAAA9O,GAAG3B,KAAKgB,SAASwI,aAAa,YACpF,EAAA7H,GAAG3B,KAAKgB,SAASuG,aAAa,OAAQvH,KAAKsO,iBACvCtO,KAAKiB,QAAQsP,uBAA2BvQ,KAAKiB,QAAQuP,eAAiBxQ,KAAKyO,mBAC7E,EAAA9M,GAAG3B,KAAKgB,SAASuG,aAAa,SAAU,WAEnC,IA6BH,YAAAmJ,eAAR,SAAuBC,GACrB,GAAMC,GAAa,kCAAkC9C,KAAK6C,GACpDE,EAAa,MAAM/C,KAAK6C,EAE9B,OAAOC,IAAcC,EAAaF,EAAM,IAGlC,YAAArC,aAAR,WACE,GAAItO,KAAKiB,QAAQ6P,aAAc,CAC7B,GAAMH,GAAM,EAAA1B,YAAYC,8BAA8BlP,KAAKiB,QAAQ6P,aAAc9Q,KAAKmB,OACtF,OAAOnB,MAAK0Q,eAAeC,GAO7B,WAJ0B3E,IAAtBhM,KAAKiB,QAAQ8P,OAAsB/Q,KAAKiB,QAAQuP,eAClDxQ,KAAKgR,eAGmBhF,IAAtBhM,KAAKiB,QAAQ8P,MACR/Q,KAAK0Q,eAAe,EAAArO,MAAMC,cAActC,KAAKmB,OAAgBnB,KAAKiB,QAAQ8P,QAG5E/Q,KAAK0Q,eAAe1Q,KAAKmB,OAAO4D,WAGjC,YAAAuL,kBAAR,WACE,MAA+B,KAAxBtQ,KAAKgB,QAAQiQ,SAGd,YAAAD,SAAR,WACE,GAAItF,GAAK,EAAArJ,MAAMiL,OAAOtN,KAAK0L,IAAM1L,KAAK0L,GAAK,EAAAwF,QAAQjN,KAC/CyH,IAAM,EAAAyF,QAAQC,QAAUpR,KAAKyO,kBAC/BzO,KAAKiB,QAAQ8P,MAAQ,oBACZrF,GAAM,EAAAyF,QAAQE,SAAWrR,KAAKyO,oBACvCzO,KAAKiB,QAAQ8P,MAAQ,gBAIjB,YAAAtC,gBAAR,WACE,GAAI/C,GAAK,EAAArJ,MAAMiL,OAAOtN,KAAK0L,IAAM1L,KAAK0L,GAAK,EAAAwF,QAAQjN,KACnD,OAAIyH,IAAM,EAAAyF,QAAQC,YAAiDpF,IAAvChM,KAAKmB,OAAO+L,IAAsB,kBAEnDxB,GAAM,EAAAyF,QAAQE,aAA4CrF,IAAjChM,KAAKmB,OAAO+L,IAAgB,YAM1D,YAAAoE,iCAAR,WACE,MAAgE,IAAzDtR,KAAKiM,gBAAgBsF,cAAchH,QAAQ,YAG5C,YAAAgD,wBAAR,WACE,OAAQvN,KAAKiB,QAAQgM,eAAiBjN,KAAKsR,qCAAuC,EAAAE,WAAWC,eAAezR,KAAKmB,SAnf5G,EAAAI,GAAK,aAEL,EAAA0D,SAAW,WAChB,EAAAC,gBACEnD,WAAYA,KAQT,EAAAd,SA8BL8P,MAAO,EAAAvP,iBAAiBkQ,mBAaxBlB,cAAe,EAAAhP,iBAAiB6D,oBAAqBD,cAAc,IAQnE6H,cAAe,EAAAzL,iBAAiB6D,oBAAqBD,cAAc,IAmBnEmL,sBAAuB,EAAA/O,iBAAiB6D,oBAAqBD,cAAc,IA2B3E0L,aAAc,EAAAtP,iBAAiB2D,oBAyC/B4J,cAAe,EAAAvN,iBAAiB2D,oBA0ChC3B,QAAS,EAAAhC,iBAAiBmQ,kBAA2D,WACnF,MAAO,SAoTb,GAtfgC,EAAA9P,UAAnB,GAAAE,aAwfb,EAAAsB,eAAeiC,4BAA4BvD","file":"YouTubeThumbnail.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([25,63],{\n\n/***/ 185:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar GlobalExports_1 = __webpack_require__(3);\nvar Dom_1 = __webpack_require__(1);\nvar SVGDom_1 = __webpack_require__(16);\nvar SVGIcons_1 = __webpack_require__(12);\nvar Utils_1 = __webpack_require__(4);\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar Initialization_1 = __webpack_require__(2);\nvar RegisteredNamedMethods_1 = __webpack_require__(30);\nvar ResultLink_1 = __webpack_require__(92);\nvar AccessibleModal_1 = __webpack_require__(220);\n/**\n * The YouTubeThumbnail component automatically fetches the thumbnail of a YouTube video.\n *\n * This component differs from the standard {@link Thumbnail} component because the thumbnail it outputs is always\n * clickable.\n *\n * Depending on the component configuration, clicking a YouTube thumbnail can either automatically open a modal box\n * containing the `iframe` from YouTube, or open the target URL in the current window (see\n * {@link YouTubeThumbnail.options.embed}).\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar YouTubeThumbnail = /** @class */ (function (_super) {\n    __extends(YouTubeThumbnail, _super);\n    function YouTubeThumbnail(element, options, bindings, result, ModalBox, origin) {\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\n        var _this = _super.call(this, element, YouTubeThumbnail.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.origin = origin;\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, YouTubeThumbnail, options);\n        _this.resultLink = Dom_1.$$('a', {\n            className: Component_1.Component.computeCssClassName(ResultLink_1.ResultLink)\n        });\n        if (!origin) {\n            _this.origin = _this.resultLink.el;\n        }\n        var thumbnailDiv = Dom_1.$$('div', {\n            className: 'coveo-youtube-thumbnail-container'\n        });\n        _this.resultLink.append(thumbnailDiv.el);\n        var img = Dom_1.$$('img', {\n            src: Utils_1.Utils.getFieldValue(_this.result, 'ytthumbnailurl'),\n            className: 'coveo-youtube-thumbnail-img',\n            alt: _this.result.title,\n            title: _this.result.title\n        });\n        img.el.style.width = _this.options.width;\n        img.el.style.height = _this.options.height;\n        img.el.onerror = function () {\n            var svgVideo = Dom_1.$$('div', {}, SVGIcons_1.SVGIcons.icons.video).el;\n            SVGDom_1.SVGDom.addStyleToSVGInContainer(svgVideo, {\n                width: _this.options.width\n            });\n            Dom_1.$$(img).remove();\n            thumbnailDiv.append(svgVideo);\n        };\n        thumbnailDiv.append(img.el);\n        var span = Dom_1.$$('span', {\n            className: 'coveo-youtube-thumbnail-play-button'\n        });\n        thumbnailDiv.append(span.el);\n        Dom_1.$$(_this.element).append(_this.resultLink.el);\n        Initialization_1.Initialization.automaticallyCreateComponentsInsideResult(element, result, {\n            ResultLink: _this.options.embed ? { onClick: function () { return _this.openYoutubeIframe(); } } : null\n        });\n        _this.modalbox = new AccessibleModal_1.AccessibleModal('coveo-youtube-player', _this.searchInterface.options.modalContainer, ModalBox, {\n            overlayClose: true\n        });\n        return _this;\n    }\n    /**\n     * Open the result link embedded in this component.\n     *\n     * With a standard configuration of this component, this will open an iframe that automatically plays the video.\n     */\n    YouTubeThumbnail.prototype.openResultLink = function () {\n        var resultLinkComponent = RegisteredNamedMethods_1.get(this.resultLink.el);\n        resultLinkComponent.openLinkAsConfigured();\n    };\n    YouTubeThumbnail.prototype.openYoutubeIframe = function () {\n        var _this = this;\n        // need to put iframe inside div : iframe with position absolute and left:0, right : 0 , bottom: 0 is not standard/supported\n        var iframe = Dom_1.$$('iframe', {\n            src: \"https://www.youtube.com/embed/\" + this.extractVideoId() + \"?autoplay=1\",\n            allowfullscreen: 'allowfullscreen',\n            width: '100%',\n            height: '100%',\n            title: this.result.title\n        });\n        var div = Dom_1.$$('div');\n        div.append(iframe.el);\n        this.modalbox.openResult({\n            result: this.result,\n            options: { showDate: true, title: this.result.title },\n            bindings: this.bindings,\n            content: div.el,\n            validation: function () { return true; },\n            origin: this.origin\n        });\n        Dom_1.$$(Dom_1.$$(this.modalbox.wrapper).find('.coveo-quickview-close-button')).on('click', function () {\n            _this.modalbox.close();\n        });\n    };\n    YouTubeThumbnail.prototype.extractVideoId = function () {\n        return this.result.clickUri.split('watch?v=')[1];\n    };\n    YouTubeThumbnail.ID = 'YouTubeThumbnail';\n    YouTubeThumbnail.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            YouTubeThumbnail: YouTubeThumbnail\n        });\n    };\n    /**\n     * @componentOptions\n     */\n    YouTubeThumbnail.options = {\n        /**\n         * Specifies the width (in pixels) of the YouTube thumbnail.\n         *\n         * Default value is `200px`.\n         */\n        width: ComponentOptions_1.ComponentOptions.buildStringOption({ defaultValue: '200px' }),\n        /**\n         * Specifies the height (in pixels) of the YouTube thumbnail.\n         *\n         * Default value is `112px`.\n         */\n        height: ComponentOptions_1.ComponentOptions.buildStringOption({ defaultValue: '112px' }),\n        /**\n         * Specifies whether clicking on the YouTube thumbnail loads the video in a modal box.\n         *\n         * Setting this option to `false` causes the browser to change its current location to that of the target URL when\n         * the end user clicks the YouTube thumbnail.\n         *\n         * Default value is `true`.\n         */\n        embed: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: true })\n    };\n    return YouTubeThumbnail;\n}(Component_1.Component));\nexports.YouTubeThumbnail = YouTubeThumbnail;\nInitialization_1.Initialization.registerAutoCreateComponent(YouTubeThumbnail);\n\n\n/***/ }),\n\n/***/ 220:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar FocusTrap_1 = __webpack_require__(465);\nvar Strings_1 = __webpack_require__(6);\nvar Dom_1 = __webpack_require__(1);\nvar KeyboardUtils_1 = __webpack_require__(25);\nvar Core_1 = __webpack_require__(20);\nvar AccessibleModal = /** @class */ (function () {\n    function AccessibleModal(className, ownerElement, modalboxModule, options) {\n        if (modalboxModule === void 0) { modalboxModule = ExternalModulesShim_1.ModalBox; }\n        if (options === void 0) { options = {}; }\n        this.className = className;\n        this.ownerElement = ownerElement;\n        this.modalboxModule = modalboxModule;\n        this.options = __assign({\n            sizeMod: 'big'\n        }, options);\n    }\n    Object.defineProperty(AccessibleModal.prototype, \"isOpen\", {\n        get: function () {\n            return !!this.focusTrap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"element\", {\n        get: function () {\n            return this.activeModal && this.activeModal.modalBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"content\", {\n        get: function () {\n            return this.activeModal && this.activeModal.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"wrapper\", {\n        get: function () {\n            return this.activeModal && this.activeModal.wrapper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AccessibleModal.prototype, \"headerElement\", {\n        get: function () {\n            return this.element && this.element.querySelector('.coveo-modal-header h1');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AccessibleModal.prototype.openResult = function (parameters) {\n        if (this.isOpen) {\n            return;\n        }\n        this.openModalAndTrap({\n            content: parameters.content,\n            validation: parameters.validation,\n            origin: parameters.origin,\n            title: Core_1.DomUtils.getQuickviewHeader(parameters.result, parameters.options, parameters.bindings).el\n        });\n        this.makeAccessible(parameters.options.title || parameters.result.title);\n    };\n    AccessibleModal.prototype.open = function (parameters) {\n        if (this.isOpen) {\n            return;\n        }\n        this.openModalAndTrap(parameters);\n        this.makeAccessible();\n    };\n    AccessibleModal.prototype.openModalAndTrap = function (parameters) {\n        var _this = this;\n        this.initiallyFocusedElement = parameters.origin || document.activeElement;\n        this.activeModal = this.modalboxModule.open(parameters.content, {\n            title: parameters.title,\n            className: this.className,\n            validation: function () {\n                _this.onModalClose();\n                return parameters.validation();\n            },\n            body: this.ownerElement,\n            sizeMod: this.options.sizeMod,\n            overlayClose: this.options.overlayClose\n        });\n        this.focusTrap = new FocusTrap_1.FocusTrap(this.element);\n    };\n    AccessibleModal.prototype.close = function () {\n        if (!this.isOpen) {\n            return;\n        }\n        this.activeModal.close();\n        this.activeModal = null;\n    };\n    AccessibleModal.prototype.makeAccessible = function (title) {\n        this.element.setAttribute('aria-modal', 'true');\n        if (title) {\n            this.headerElement.setAttribute('aria-label', title);\n        }\n        this.makeCloseButtonAccessible();\n    };\n    AccessibleModal.prototype.makeCloseButtonAccessible = function () {\n        var closeButton = this.element.querySelector('.coveo-small-close');\n        closeButton.setAttribute('aria-label', Strings_1.l('Close'));\n        closeButton.setAttribute('role', 'button');\n        closeButton.tabIndex = 0;\n        closeButton.focus();\n        Dom_1.$$(closeButton).on('keyup', KeyboardUtils_1.KeyboardUtils.keypressAction(KeyboardUtils_1.KEYBOARD.ENTER, function () { return closeButton.click(); }));\n    };\n    AccessibleModal.prototype.onModalClose = function () {\n        this.focusTrap.disable();\n        this.focusTrap = null;\n        if (this.initiallyFocusedElement && document.body.contains(this.initiallyFocusedElement)) {\n            this.initiallyFocusedElement.focus();\n        }\n    };\n    return AccessibleModal;\n}());\nexports.AccessibleModal = AccessibleModal;\n\n\n/***/ }),\n\n/***/ 465:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Defer_1 = __webpack_require__(31);\nvar underscore_1 = __webpack_require__(0);\nvar Dom_1 = __webpack_require__(1);\nvar FocusTrap = /** @class */ (function () {\n    function FocusTrap(container) {\n        this.container = container;\n        this.hiddenElements = [];\n        this.enable();\n    }\n    Object.defineProperty(FocusTrap.prototype, \"focusableElements\", {\n        get: function () {\n            return underscore_1.sortBy(this.container.querySelectorAll('[tabindex]'), function (element) { return element.tabIndex; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FocusTrap.prototype.disable = function () {\n        document.removeEventListener('focusin', this.focusInEvent);\n        document.removeEventListener('focusout', this.focusOutEvent);\n        this.showHiddenElements();\n        this.enabled = false;\n    };\n    FocusTrap.prototype.enable = function () {\n        var _this = this;\n        document.addEventListener('focusin', (this.focusInEvent = function (e) { return _this.onFocusIn(e); }));\n        document.addEventListener('focusout', (this.focusOutEvent = function (e) { return _this.onFocusOut(e); }));\n        this.hideAllExcept(this.container);\n        this.enabled = true;\n    };\n    FocusTrap.prototype.showHiddenElements = function () {\n        while (this.hiddenElements.length) {\n            this.hiddenElements.pop().removeAttribute('aria-hidden');\n        }\n    };\n    FocusTrap.prototype.hideElement = function (element) {\n        if (element.getAttribute('aria-hidden')) {\n            return;\n        }\n        this.hiddenElements.push(element);\n        element.setAttribute('aria-hidden', \"\" + true);\n    };\n    FocusTrap.prototype.hideSiblings = function (allowedElement) {\n        var _this = this;\n        var parent = allowedElement.parentElement;\n        if (parent) {\n            underscore_1.without(Dom_1.$$(parent).children(), allowedElement).forEach(function (elementToHide) {\n                _this.hideElement(elementToHide);\n            });\n        }\n    };\n    FocusTrap.prototype.hideAllExcept = function (allowedElement) {\n        this.hideSiblings(allowedElement);\n        var parent = allowedElement.parentElement;\n        if (parent && parent !== document.body) {\n            this.hideAllExcept(parent);\n        }\n    };\n    FocusTrap.prototype.getFocusableSibling = function (element, previous) {\n        if (previous === void 0) { previous = false; }\n        var elements = this.focusableElements;\n        var currentIndex = elements.indexOf(element);\n        if (currentIndex === -1) {\n            return null;\n        }\n        return elements[(currentIndex + (previous ? -1 : 1) + elements.length) % elements.length];\n    };\n    FocusTrap.prototype.focusSibling = function (element, previous) {\n        if (previous === void 0) { previous = false; }\n        var sibling = this.getFocusableSibling(element, previous);\n        if (sibling) {\n            sibling.focus();\n        }\n    };\n    FocusTrap.prototype.focusFirstElement = function () {\n        var elements = this.focusableElements;\n        if (elements.length) {\n            elements[0].focus();\n        }\n    };\n    FocusTrap.prototype.elementIsBefore = function (oldElement, newElement) {\n        if (!newElement) {\n            return false;\n        }\n        return oldElement.compareDocumentPosition(newElement) === Node.DOCUMENT_POSITION_PRECEDING;\n    };\n    FocusTrap.prototype.onLosingFocus = function (oldElement, newElement) {\n        var _this = this;\n        Defer_1.Defer.defer(function () {\n            if (!_this.enabled) {\n                return;\n            }\n            _this.enabled = false;\n            if (oldElement && _this.focusIsAllowed(oldElement)) {\n                _this.focusSibling(oldElement, _this.elementIsBefore(oldElement, newElement));\n            }\n            else {\n                _this.focusFirstElement();\n            }\n            _this.enabled = true;\n        });\n    };\n    FocusTrap.prototype.focusIsAllowed = function (element) {\n        return this.container.contains(element);\n    };\n    FocusTrap.prototype.elementIsInPage = function (element) {\n        return element && element !== document.body.parentElement;\n    };\n    FocusTrap.prototype.onFocusIn = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        var oldElement = e.relatedTarget;\n        var handledByFocusOut = this.elementIsInPage(oldElement);\n        if (handledByFocusOut) {\n            return;\n        }\n        var newElement = e.target;\n        if (!this.elementIsInPage(newElement)) {\n            return;\n        }\n        if (!this.focusIsAllowed(newElement)) {\n            this.onLosingFocus(null, newElement);\n        }\n    };\n    FocusTrap.prototype.onFocusOut = function (e) {\n        if (!this.enabled) {\n            return;\n        }\n        var newElement = e.relatedTarget;\n        if (!this.elementIsInPage(newElement)) {\n            return;\n        }\n        if (!newElement || !this.focusIsAllowed(newElement)) {\n            this.onLosingFocus(e.target, newElement);\n        }\n    };\n    return FocusTrap;\n}());\nexports.FocusTrap = FocusTrap;\n\n\n/***/ }),\n\n/***/ 532:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 92:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar ComponentOptionsModel_1 = __webpack_require__(28);\nvar AnalyticsActionListMeta_1 = __webpack_require__(10);\nvar ResultListEvents_1 = __webpack_require__(29);\nvar HighlightUtils_1 = __webpack_require__(68);\nvar DeviceUtils_1 = __webpack_require__(24);\nvar OSUtils_1 = __webpack_require__(181);\nvar Initialization_1 = __webpack_require__(2);\nvar QueryUtils_1 = __webpack_require__(21);\nvar Assert_1 = __webpack_require__(5);\nvar Utils_1 = __webpack_require__(4);\nvar Defer_1 = __webpack_require__(31);\nvar Dom_1 = __webpack_require__(1);\nvar StreamHighlightUtils_1 = __webpack_require__(114);\nvar StringUtils_1 = __webpack_require__(22);\nvar underscore_1 = __webpack_require__(0);\nvar GlobalExports_1 = __webpack_require__(3);\n__webpack_require__(532);\nvar AccessibleButton_1 = __webpack_require__(15);\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nvar ResultLink = /** @class */ (function (_super) {\n    __extends(ResultLink, _super);\n    /**\n     * Creates a new `ResultLink` component.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the `ResultLink` component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     * @param result The result to associate the component with.\n     * @param os\n     */\n    function ResultLink(element, options, bindings, result, os) {\n        var _this = _super.call(this, element, ResultLink.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.bindings = bindings;\n        _this.result = result;\n        _this.os = os;\n        _this.logOpenDocument = underscore_1.debounce(function () {\n            _this.queryController.saveLastQuery();\n            var documentURL = Dom_1.$$(_this.element).getAttribute('href');\n            if (documentURL == undefined || documentURL == '') {\n                documentURL = _this.escapedClickUri;\n            }\n            _this.usageAnalytics.logClickEvent(AnalyticsActionListMeta_1.analyticsActionCauseList.documentOpen, {\n                documentURL: documentURL,\n                documentTitle: _this.result.title,\n                author: Utils_1.Utils.getFieldValue(_this.result, 'author')\n            }, _this.result, _this.root);\n            Defer_1.Defer.flush();\n        }, 1500, true);\n        var initialOptions = ComponentOptions_1.ComponentOptions.initComponentOptions(element, ResultLink, options);\n        var resultLinkOptions = _this.componentOptionsModel.get(ComponentOptionsModel_1.ComponentOptionsModel.attributesEnum.resultLink);\n        _this.options = underscore_1.extend({}, initialOptions, resultLinkOptions);\n        _this.result = result || _this.resolveResult();\n        if (_this.options.openQuickview == null) {\n            _this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils_1.DeviceUtils.isMobileDevice();\n        }\n        _this.element.setAttribute('tabindex', '0');\n        Assert_1.Assert.exists(_this.componentOptionsModel);\n        Assert_1.Assert.exists(_this.result);\n        if (!_this.quickviewShouldBeOpened()) {\n            // Bind on multiple \"click\" or \"mouse\" events.\n            // Create a function that will be executed only once, so as not to log multiple events\n            // Once a result link has been opened, and that we log at least one analytics event,\n            // it should not matter if the end user open the same link multiple times with different methods.\n            // It's still only one \"click\" event as far as UA is concerned.\n            // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n            var executeOnlyOnce_1 = underscore_1.once(function () { return _this.logOpenDocument(); });\n            Dom_1.$$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce_1);\n            var longPressTimer_1;\n            Dom_1.$$(element).on('touchstart', function () {\n                longPressTimer_1 = window.setTimeout(executeOnlyOnce_1, 1000);\n            });\n            Dom_1.$$(element).on('touchend', function () {\n                if (longPressTimer_1) {\n                    clearTimeout(longPressTimer_1);\n                }\n            });\n        }\n        _this.renderUri(element, result);\n        _this.bindEventToOpen();\n        return _this;\n    }\n    ResultLink.prototype.renderUri = function (element, result) {\n        if (/^\\s*$/.test(this.element.innerHTML)) {\n            var title = this.getDisplayedTitle();\n            this.element.innerHTML = title;\n            if (!this.element.title) {\n                this.element.title = this.getDisplayedTitleAsText();\n            }\n        }\n    };\n    /**\n     * Opens the result in the same window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLink = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logOpenDocument();\n        }\n        window.location.href = this.getResultUri();\n    };\n    /**\n     * Opens the result in a new window, no matter how the actual component is configured for the end user.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInNewWindow = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (logAnalytics) {\n            this.logOpenDocument();\n        }\n        window.open(this.getResultUri(), '_blank');\n    };\n    /**\n     * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n     *\n     * Normally, this implies the result should be a link to an email.\n     *\n     * If the needed fields are not present, this method does nothing.\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkInOutlook = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.hasOutlookField()) {\n            if (logAnalytics) {\n                this.logOpenDocument();\n            }\n            this.openLink();\n        }\n    };\n    /**\n     * Opens the link in the same manner the end user would.\n     *\n     * This essentially simulates a click on the result link.\n     *\n     * @param logAnalytics Specifies whether the method should log an analytics event.\n     */\n    ResultLink.prototype.openLinkAsConfigured = function (logAnalytics) {\n        if (logAnalytics === void 0) { logAnalytics = true; }\n        if (this.toExecuteOnOpen) {\n            if (logAnalytics) {\n                this.logOpenDocument();\n            }\n            this.toExecuteOnOpen();\n        }\n    };\n    ResultLink.prototype.bindEventToOpen = function () {\n        return (this.bindOnClickIfNotUndefined() ||\n            this.bindOpenQuickviewIfNotUndefined() ||\n            this.setHrefIfNotAlready() ||\n            this.openLinkThatIsNotAnAnchor());\n    };\n    ResultLink.prototype.getDisplayedTitle = function () {\n        if (!this.options.titleTemplate) {\n            return this.result.title\n                ? HighlightUtils_1.HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n                : this.escapedClickUri;\n        }\n        else {\n            var newTitle = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n            return newTitle\n                ? StreamHighlightUtils_1.StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n                : this.escapedClickUri;\n        }\n    };\n    ResultLink.prototype.getDisplayedTitleAsText = function () {\n        var container = Dom_1.$$('div');\n        container.setHtml(this.getDisplayedTitle());\n        return container.text();\n    };\n    Object.defineProperty(ResultLink.prototype, \"escapedClickUri\", {\n        get: function () {\n            return underscore_1.escape(this.result.clickUri);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResultLink.prototype.bindOnClickIfNotUndefined = function () {\n        var _this = this;\n        if (this.options.onClick != undefined) {\n            this.toExecuteOnOpen = function (e) {\n                _this.options.onClick.call(_this, e, _this.result);\n            };\n            new AccessibleButton_1.AccessibleButton()\n                .withElement(this.element)\n                .withLabel(this.result.title)\n                .withSelectAction(function (e) { return _this.toExecuteOnOpen(e); })\n                .build();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.bindOpenQuickviewIfNotUndefined = function () {\n        var _this = this;\n        if (this.quickviewShouldBeOpened()) {\n            this.toExecuteOnOpen = function () {\n                Dom_1.$$(_this.bindings.resultElement).trigger(ResultListEvents_1.ResultListEvents.openQuickview);\n            };\n            Dom_1.$$(this.element).on('click', function (e) {\n                e.preventDefault();\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.openLinkThatIsNotAnAnchor = function () {\n        var _this = this;\n        if (!this.elementIsAnAnchor()) {\n            this.toExecuteOnOpen = function () {\n                if (_this.options.alwaysOpenInNewWindow) {\n                    if (_this.options.openInOutlook) {\n                        _this.openLinkInOutlook();\n                    }\n                    else {\n                        _this.openLinkInNewWindow();\n                    }\n                }\n                else {\n                    _this.openLink();\n                }\n            };\n            Dom_1.$$(this.element).on('click', function () {\n                _this.toExecuteOnOpen();\n            });\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.setHrefIfNotAlready = function () {\n        // Do not erase any value put in href by the template, etc. Allows\n        // using custom click urls while still keeping analytics recording\n        // and other behavior brought by the component.\n        if (this.elementIsAnAnchor() && !Utils_1.Utils.isNonEmptyString(Dom_1.$$(this.element).getAttribute('href'))) {\n            Dom_1.$$(this.element).setAttribute('href', this.getResultUri());\n            if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n                Dom_1.$$(this.element).setAttribute('target', '_blank');\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    ResultLink.prototype.filterProtocol = function (uri) {\n        var isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n        var isRelative = /^\\//.test(uri);\n        return isAbsolute || isRelative ? uri : '';\n    };\n    ResultLink.prototype.getResultUri = function () {\n        if (this.options.hrefTemplate) {\n            var uri = StringUtils_1.StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n            return this.filterProtocol(uri);\n        }\n        if (this.options.field == undefined && this.options.openInOutlook) {\n            this.setField();\n        }\n        if (this.options.field != undefined) {\n            return this.filterProtocol(Utils_1.Utils.getFieldValue(this.result, this.options.field));\n        }\n        return this.filterProtocol(this.result.clickUri);\n    };\n    ResultLink.prototype.elementIsAnAnchor = function () {\n        return this.element.tagName == 'A';\n    };\n    ResultLink.prototype.setField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.hasOutlookField()) {\n            this.options.field = '@outlookformacuri';\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.hasOutlookField()) {\n            this.options.field = '@outlookuri';\n        }\n    };\n    ResultLink.prototype.hasOutlookField = function () {\n        var os = Utils_1.Utils.exists(this.os) ? this.os : OSUtils_1.OSUtils.get();\n        if (os == OSUtils_1.OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n            return true;\n        }\n        else if (os == OSUtils_1.OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n            return true;\n        }\n        return false;\n    };\n    ResultLink.prototype.isUriThatMustBeOpenedInQuickview = function () {\n        return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n    };\n    ResultLink.prototype.quickviewShouldBeOpened = function () {\n        return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils_1.QueryUtils.hasHTMLVersion(this.result);\n    };\n    ResultLink.ID = 'ResultLink';\n    ResultLink.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            ResultLink: ResultLink\n        });\n    };\n    /**\n     * The options for the ResultLink\n     * @componentOptions\n     */\n    ResultLink.options = {\n        /**\n         * Specifies the field to use to output the component `href` attribute value.\n         *\n         * **Tip:**\n         * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n         * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n         *\n         * **Examples:**\n         * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n         * default field):\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n         * ```\n         *\n         * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n         *\n         * ```html\n         * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n         *   <div class='CoveoIcon>'></div>\n         *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n         *   <div class=\"CoveoExcerpt\"></div>\n         * </script>\n         * ```\n         *\n         * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n         *\n         * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n         */\n        field: ComponentOptions_1.ComponentOptions.buildFieldOption(),\n        /**\n         * Specifies whether the component should try to open its link in Microsoft Outlook.\n         *\n         * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * Default value is `false`.\n         */\n        openInOutlook: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n         * loading through the original URL.\n         *\n         * Default value is `false`.\n         */\n        openQuickview: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies whether the component should open its link in a new window instead of opening it in the current\n         * context.\n         *\n         * If this option is `true`, clicking the `ResultLink` calls the\n         * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n         * [`openLink`]{@link ResultLink.openLink} method.\n         *\n         * **Note:**\n         * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n         * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n         * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n         * > open their links in a new window when the end user clicks them, no matter what the value of their\n         * > `alwaysOpenInNewWindow` option is.\n         *\n         * Default value is `false`.\n         */\n        alwaysOpenInNewWindow: ComponentOptions_1.ComponentOptions.buildBooleanOption({ defaultValue: false }),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n         *\n         * The template literal can reference any number of fields from the parent result. It can also reference global\n         * scope properties.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n         * ```\n         *\n         * - The following markup generates an `href` value such as `localhost/fooBar`:\n         *\n         * ```html\n         * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n         * ```\n         *\n         * Default value is `undefined`.\n         */\n        hrefTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies a template literal from which to generate the `ResultLink` display title (see\n         * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n         *\n         * This option overrides the default `ResultLink` display title behavior.\n         *\n         * The template literal can reference any number of fields from the parent result. However, if the template literal\n         * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n         * name of this key instead.\n         *\n         * This option is ignored if the `ResultLink` innerHTML contains any value.\n         *\n         * **Examples:**\n         *\n         * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n         * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n         * ```\n         *\n         * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n         * in the parent result fields:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n         * ```\n         *\n         * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n         * not empty:\n         *\n         * ```html\n         * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n         * ```\n         *\n         * Default value is `undefined`.\n         *\n         * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n         */\n        titleTemplate: ComponentOptions_1.ComponentOptions.buildStringOption(),\n        /**\n         * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n         *\n         * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n         * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n         *\n         * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n         *\n         * **Note:**\n         * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n         * > [`init`]{@link init} call of your search interface (see\n         * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n         * > or before the `init` call, using the `options` top-level function (see\n         * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n         *\n         * **Example:**\n         * ```javascript\n         * // You can set the option in the 'init' call:\n         * Coveo.init(document.querySelector(\"#search\"), {\n         *   ResultLink : {\n         *     onClick : function(e, result) {\n         *       e.preventDefault();\n         *       // Custom code to execute with the item URI and title.\n         *       openUriInASpecialTab(result.clickUri, result.title);\n         *     }\n         *   }\n         * });\n         *\n         * // Or before the 'init' call, using the 'options' top-level function:\n         * // Coveo.options(document.querySelector('#search'), {\n         * //   ResultLink : {\n         * //     onClick : function(e, result) {\n         * //       e.preventDefault();\n         * //       // Custom code to execute with the item URI and title.\n         * //       openUriInASpecialTab(result.clickUri, result.title);\n         * //     }\n         * //   }\n         * // });\n         * ```\n         */\n        onClick: ComponentOptions_1.ComponentOptions.buildCustomOption(function () {\n            return null;\n        })\n    };\n    return ResultLink;\n}(Component_1.Component));\nexports.ResultLink = ResultLink;\nInitialization_1.Initialization.registerAutoCreateComponent(ResultLink);\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// YouTubeThumbnail.min__45edc409d97327d59af1.js","import { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\nimport { exportGlobally } from '../../GlobalExports';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { $$, Dom } from '../../utils/Dom';\nimport { SVGDom } from '../../utils/SVGDom';\nimport { SVGIcons } from '../../utils/SVGIcons';\nimport { Utils } from '../../utils/Utils';\nimport { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { Initialization } from '../Base/Initialization';\nimport { get } from '../Base/RegisteredNamedMethods';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { ResultLink } from '../ResultLink/ResultLink';\nimport { AccessibleModal } from '../../utils/AccessibleModal';\n\nexport interface IYouTubeThumbnailOptions {\n  width: string;\n  height: string;\n  embed: boolean;\n}\n\n/**\n * The YouTubeThumbnail component automatically fetches the thumbnail of a YouTube video.\n *\n * This component differs from the standard {@link Thumbnail} component because the thumbnail it outputs is always\n * clickable.\n *\n * Depending on the component configuration, clicking a YouTube thumbnail can either automatically open a modal box\n * containing the `iframe` from YouTube, or open the target URL in the current window (see\n * {@link YouTubeThumbnail.options.embed}).\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class YouTubeThumbnail extends Component {\n  static ID = 'YouTubeThumbnail';\n\n  static doExport = () => {\n    exportGlobally({\n      YouTubeThumbnail: YouTubeThumbnail\n    });\n  };\n\n  /**\n   * @componentOptions\n   */\n  static options: IYouTubeThumbnailOptions = {\n    /**\n     * Specifies the width (in pixels) of the YouTube thumbnail.\n     *\n     * Default value is `200px`.\n     */\n    width: ComponentOptions.buildStringOption({ defaultValue: '200px' }),\n\n    /**\n     * Specifies the height (in pixels) of the YouTube thumbnail.\n     *\n     * Default value is `112px`.\n     */\n    height: ComponentOptions.buildStringOption({ defaultValue: '112px' }),\n\n    /**\n     * Specifies whether clicking on the YouTube thumbnail loads the video in a modal box.\n     *\n     * Setting this option to `false` causes the browser to change its current location to that of the target URL when\n     * the end user clicks the YouTube thumbnail.\n     *\n     * Default value is `true`.\n     */\n    embed: ComponentOptions.buildBooleanOption({ defaultValue: true })\n  };\n\n  public resultLink: Dom;\n\n  private modalbox: AccessibleModal;\n\n  constructor(\n    public element: HTMLElement,\n    public options?: IYouTubeThumbnailOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    ModalBox = ModalBoxModule,\n    private origin?: HTMLElement\n  ) {\n    super(element, YouTubeThumbnail.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, YouTubeThumbnail, options);\n\n    this.resultLink = $$('a', {\n      className: Component.computeCssClassName(ResultLink)\n    });\n\n    if (!origin) {\n      this.origin = this.resultLink.el;\n    }\n\n    const thumbnailDiv = $$('div', {\n      className: 'coveo-youtube-thumbnail-container'\n    });\n\n    this.resultLink.append(thumbnailDiv.el);\n\n    const img = $$('img', {\n      src: Utils.getFieldValue(this.result, 'ytthumbnailurl'),\n      className: 'coveo-youtube-thumbnail-img',\n      alt: this.result.title,\n      title: this.result.title\n    });\n\n    img.el.style.width = this.options.width;\n    img.el.style.height = this.options.height;\n    img.el.onerror = () => {\n      const svgVideo = $$('div', {}, SVGIcons.icons.video).el;\n      SVGDom.addStyleToSVGInContainer(svgVideo, {\n        width: this.options.width\n      });\n      $$(img).remove();\n      thumbnailDiv.append(svgVideo);\n    };\n    thumbnailDiv.append(img.el);\n\n    const span = $$('span', {\n      className: 'coveo-youtube-thumbnail-play-button'\n    });\n\n    thumbnailDiv.append(span.el);\n\n    $$(this.element).append(this.resultLink.el);\n\n    Initialization.automaticallyCreateComponentsInsideResult(element, result, {\n      ResultLink: this.options.embed ? { onClick: () => this.openYoutubeIframe() } : null\n    });\n    this.modalbox = new AccessibleModal('coveo-youtube-player', this.searchInterface.options.modalContainer, ModalBox, {\n      overlayClose: true\n    });\n  }\n\n  /**\n   * Open the result link embedded in this component.\n   *\n   * With a standard configuration of this component, this will open an iframe that automatically plays the video.\n   */\n  public openResultLink() {\n    let resultLinkComponent = <ResultLink>get(this.resultLink.el);\n    resultLinkComponent.openLinkAsConfigured();\n  }\n\n  private openYoutubeIframe() {\n    // need to put iframe inside div : iframe with position absolute and left:0, right : 0 , bottom: 0 is not standard/supported\n    const iframe = $$('iframe', {\n      src: `https://www.youtube.com/embed/${this.extractVideoId()}?autoplay=1`,\n      allowfullscreen: 'allowfullscreen',\n      width: '100%',\n      height: '100%',\n      title: this.result.title\n    });\n\n    const div = $$('div');\n\n    div.append(iframe.el);\n\n    this.modalbox.openResult({\n      result: this.result,\n      options: { showDate: true, title: this.result.title },\n      bindings: this.bindings,\n      content: div.el,\n      validation: () => true,\n      origin: this.origin\n    });\n\n    $$($$(this.modalbox.wrapper).find('.coveo-quickview-close-button')).on('click', () => {\n      this.modalbox.close();\n    });\n  }\n\n  private extractVideoId() {\n    return this.result.clickUri.split('watch?v=')[1];\n  }\n}\nInitialization.registerAutoCreateComponent(YouTubeThumbnail);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/YouTube/YouTubeThumbnail.ts","import { ModalBox as ModalBoxModule } from '../ExternalModulesShim';\nimport { FocusTrap } from '../ui/FocusTrap/FocusTrap';\nimport { l } from '../strings/Strings';\nimport { $$ } from './Dom';\nimport { KeyboardUtils, KEYBOARD } from './KeyboardUtils';\nimport { IQuickViewHeaderOptions } from './DomUtils';\nimport { IQueryResult } from '../rest/QueryResult';\nimport { IComponentBindings } from '../ui/Base/ComponentBindings';\nimport { DomUtils } from '../Core';\n\nexport interface IAccessibleModalOptions {\n  overlayClose?: boolean;\n  sizeMod: 'small' | 'normal' | 'big';\n}\n\nexport interface IAccessibleModalOpenParameters {\n  content: HTMLElement;\n  validation: () => boolean;\n  origin: HTMLElement;\n}\n\nexport interface IAccessibleModalOpenResultParameters extends IAccessibleModalOpenParameters {\n  result: IQueryResult;\n  options: IQuickViewHeaderOptions;\n  bindings: IComponentBindings;\n}\n\nexport interface IAccessibleModalOpenNormalParameters extends IAccessibleModalOpenParameters {\n  title: HTMLElement;\n}\n\nexport class AccessibleModal {\n  private focusTrap: FocusTrap;\n  private activeModal: Coveo.ModalBox.ModalBox;\n  private options: IAccessibleModalOptions;\n  private initiallyFocusedElement: HTMLElement;\n\n  public get isOpen() {\n    return !!this.focusTrap;\n  }\n\n  public get element() {\n    return this.activeModal && this.activeModal.modalBox;\n  }\n\n  public get content() {\n    return this.activeModal && this.activeModal.content;\n  }\n\n  public get wrapper() {\n    return this.activeModal && this.activeModal.wrapper;\n  }\n\n  private get headerElement() {\n    return this.element && this.element.querySelector<HTMLElement>('.coveo-modal-header h1');\n  }\n\n  constructor(\n    private className: string,\n    private ownerElement: HTMLElement,\n    private modalboxModule: Coveo.ModalBox.ModalBox = ModalBoxModule,\n    options: Partial<IAccessibleModalOptions> = {}\n  ) {\n    this.options = {\n      ...{\n        sizeMod: 'big'\n      },\n      ...options\n    };\n  }\n\n  public openResult(parameters: IAccessibleModalOpenResultParameters) {\n    if (this.isOpen) {\n      return;\n    }\n    this.openModalAndTrap({\n      content: parameters.content,\n      validation: parameters.validation,\n      origin: parameters.origin,\n      title: DomUtils.getQuickviewHeader(parameters.result, parameters.options, parameters.bindings).el\n    });\n    this.makeAccessible(parameters.options.title || parameters.result.title);\n  }\n\n  public open(parameters: IAccessibleModalOpenNormalParameters) {\n    if (this.isOpen) {\n      return;\n    }\n    this.openModalAndTrap(parameters);\n    this.makeAccessible();\n  }\n\n  private openModalAndTrap(parameters: IAccessibleModalOpenNormalParameters) {\n    this.initiallyFocusedElement = parameters.origin || (document.activeElement as HTMLElement);\n    this.activeModal = this.modalboxModule.open(parameters.content, {\n      title: parameters.title,\n      className: this.className,\n      validation: () => {\n        this.onModalClose();\n        return parameters.validation();\n      },\n      body: this.ownerElement,\n      sizeMod: this.options.sizeMod,\n      overlayClose: this.options.overlayClose\n    });\n    this.focusTrap = new FocusTrap(this.element);\n  }\n\n  public close() {\n    if (!this.isOpen) {\n      return;\n    }\n    this.activeModal.close();\n    this.activeModal = null;\n  }\n\n  private makeAccessible(title?: string) {\n    this.element.setAttribute('aria-modal', 'true');\n    if (title) {\n      this.headerElement.setAttribute('aria-label', title);\n    }\n    this.makeCloseButtonAccessible();\n  }\n\n  private makeCloseButtonAccessible() {\n    const closeButton: HTMLElement = this.element.querySelector('.coveo-small-close');\n    closeButton.setAttribute('aria-label', l('Close'));\n    closeButton.setAttribute('role', 'button');\n    closeButton.tabIndex = 0;\n    closeButton.focus();\n    $$(closeButton).on('keyup', KeyboardUtils.keypressAction(KEYBOARD.ENTER, () => closeButton.click()));\n  }\n\n  private onModalClose() {\n    this.focusTrap.disable();\n    this.focusTrap = null;\n    if (this.initiallyFocusedElement && document.body.contains(this.initiallyFocusedElement)) {\n      this.initiallyFocusedElement.focus();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/AccessibleModal.ts","import { Defer } from '../../misc/Defer';\nimport { sortBy, without } from 'underscore';\nimport { $$ } from '../../utils/Dom';\n\nexport class FocusTrap {\n  private focusInEvent: (e: FocusEvent) => void;\n  private focusOutEvent: (e: FocusEvent) => void;\n  private hiddenElements: HTMLElement[];\n  private enabled: boolean;\n\n  private get focusableElements(): HTMLElement[] {\n    return sortBy(this.container.querySelectorAll('[tabindex]'), element => element.tabIndex);\n  }\n\n  constructor(private container: HTMLElement) {\n    this.hiddenElements = [];\n    this.enable();\n  }\n\n  public disable() {\n    document.removeEventListener('focusin', this.focusInEvent);\n    document.removeEventListener('focusout', this.focusOutEvent);\n    this.showHiddenElements();\n    this.enabled = false;\n  }\n\n  private enable() {\n    document.addEventListener('focusin', (this.focusInEvent = e => this.onFocusIn(e)));\n    document.addEventListener('focusout', (this.focusOutEvent = e => this.onFocusOut(e)));\n    this.hideAllExcept(this.container);\n    this.enabled = true;\n  }\n\n  private showHiddenElements() {\n    while (this.hiddenElements.length) {\n      this.hiddenElements.pop().removeAttribute('aria-hidden');\n    }\n  }\n\n  private hideElement(element: HTMLElement) {\n    if (element.getAttribute('aria-hidden')) {\n      return;\n    }\n    this.hiddenElements.push(element);\n    element.setAttribute('aria-hidden', `${true}`);\n  }\n\n  private hideSiblings(allowedElement: HTMLElement) {\n    const parent = allowedElement.parentElement;\n    if (parent) {\n      without($$(parent).children(), allowedElement).forEach(elementToHide => {\n        this.hideElement(elementToHide);\n      });\n    }\n  }\n\n  private hideAllExcept(allowedElement: HTMLElement) {\n    this.hideSiblings(allowedElement);\n    const parent = allowedElement.parentElement;\n    if (parent && parent !== document.body) {\n      this.hideAllExcept(parent);\n    }\n  }\n\n  private getFocusableSibling(element: HTMLElement, previous = false) {\n    const elements = this.focusableElements;\n    const currentIndex = elements.indexOf(element);\n    if (currentIndex === -1) {\n      return null;\n    }\n    return elements[(currentIndex + (previous ? -1 : 1) + elements.length) % elements.length];\n  }\n\n  private focusSibling(element: HTMLElement, previous = false) {\n    const sibling = this.getFocusableSibling(element, previous);\n    if (sibling) {\n      sibling.focus();\n    }\n  }\n\n  private focusFirstElement() {\n    const elements = this.focusableElements;\n    if (elements.length) {\n      elements[0].focus();\n    }\n  }\n\n  private elementIsBefore(oldElement: HTMLElement, newElement: HTMLElement) {\n    if (!newElement) {\n      return false;\n    }\n    return oldElement.compareDocumentPosition(newElement) === Node.DOCUMENT_POSITION_PRECEDING;\n  }\n\n  private onLosingFocus(oldElement: HTMLElement, newElement: HTMLElement) {\n    Defer.defer(() => {\n      if (!this.enabled) {\n        return;\n      }\n      this.enabled = false;\n      if (oldElement && this.focusIsAllowed(oldElement)) {\n        this.focusSibling(oldElement, this.elementIsBefore(oldElement, newElement));\n      } else {\n        this.focusFirstElement();\n      }\n      this.enabled = true;\n    });\n  }\n\n  private focusIsAllowed(element: HTMLElement) {\n    return this.container.contains(element);\n  }\n\n  private elementIsInPage(element: HTMLElement) {\n    return element && element !== document.body.parentElement;\n  }\n\n  private onFocusIn(e: FocusEvent) {\n    if (!this.enabled) {\n      return;\n    }\n    const oldElement = e.relatedTarget as HTMLElement;\n    const handledByFocusOut = this.elementIsInPage(oldElement);\n    if (handledByFocusOut) {\n      return;\n    }\n    const newElement = e.target as HTMLElement;\n    if (!this.elementIsInPage(newElement)) {\n      return;\n    }\n    if (!this.focusIsAllowed(newElement)) {\n      this.onLosingFocus(null, newElement);\n    }\n  }\n\n  private onFocusOut(e: FocusEvent) {\n    if (!this.enabled) {\n      return;\n    }\n    const newElement = e.relatedTarget as HTMLElement;\n    if (!this.elementIsInPage(newElement)) {\n      return;\n    }\n    if (!newElement || !this.focusIsAllowed(newElement)) {\n      this.onLosingFocus(e.target as HTMLElement, newElement);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/FocusTrap/FocusTrap.ts","import { Component } from '../Base/Component';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { ComponentOptionsModel } from '../../models/ComponentOptionsModel';\nimport { IResultsComponentBindings } from '../Base/ResultsComponentBindings';\nimport { analyticsActionCauseList } from '../Analytics/AnalyticsActionListMeta';\nimport { IResultLinkOptions } from './ResultLinkOptions';\nimport { ResultListEvents } from '../../events/ResultListEvents';\nimport { HighlightUtils } from '../../utils/HighlightUtils';\nimport { IQueryResult } from '../../rest/QueryResult';\nimport { DeviceUtils } from '../../utils/DeviceUtils';\nimport { OS_NAME, OSUtils } from '../../utils/OSUtils';\nimport { Initialization } from '../Base/Initialization';\nimport { QueryUtils } from '../../utils/QueryUtils';\nimport { Assert } from '../../misc/Assert';\nimport { Utils } from '../../utils/Utils';\nimport { Defer } from '../../misc/Defer';\nimport { $$ } from '../../utils/Dom';\nimport { StreamHighlightUtils } from '../../utils/StreamHighlightUtils';\nimport { StringUtils } from '../../utils/StringUtils';\nimport { once, debounce, extend, escape } from 'underscore';\nimport { exportGlobally } from '../../GlobalExports';\n\nimport 'styling/_ResultLink';\nimport { AccessibleButton } from '../../utils/AccessibleButton';\n\n/**\n * The `ResultLink` component automatically transform a search result title into a clickable link pointing to the\n * original item.\n *\n * This component is a result template component (see [Result Templates](https://docs.coveo.com/en/413/)).\n */\nexport class ResultLink extends Component {\n  static ID = 'ResultLink';\n\n  static doExport = () => {\n    exportGlobally({\n      ResultLink: ResultLink\n    });\n  };\n\n  /**\n   * The options for the ResultLink\n   * @componentOptions\n   */\n  static options: IResultLinkOptions = {\n    /**\n     * Specifies the field to use to output the component `href` attribute value.\n     *\n     * **Tip:**\n     * > Instead of specifying a value for the `field` option, you can directly add an `href` attribute to the\n     * > `ResultLink` HTML element. Then, you can use a custom script to generate the `href` value.\n     *\n     * **Examples:**\n     * - With the following markup, the `ResultLink` outputs its `href` value using the `@uri` field (rather than the\n     * default field):\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-field=\"@uri\"></a>\n     * ```\n     *\n     * - In the following result template, the custom `getMyKBUri()` function provides the `href` value:\n     *\n     * ```html\n     * <script id=\"KnowledgeArticle\" type=\"text/underscore\" class=\"result-template\">\n     *   <div class='CoveoIcon>'></div>\n     *   <a class=\"CoveoResultLink\" href=\"<%= getMyKBUri(raw) %>\"></a>\n     *   <div class=\"CoveoExcerpt\"></div>\n     * </script>\n     * ```\n     *\n     * See also [`hrefTemplate`]{@link ResultLink.options.hrefTemplate}, which can override this option.\n     *\n     * By default, the component uses the `@clickUri` field of the item to output the value of its `href` attribute.\n     */\n    field: ComponentOptions.buildFieldOption(),\n\n    /**\n     * Specifies whether the component should try to open its link in Microsoft Outlook.\n     *\n     * Setting this option to `true` is normally useful for `ResultLink` instances related to Microsoft Exchange emails.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInOutlook`]{@link ResultLink.openLinkInOutlook} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * Default value is `false`.\n     */\n    openInOutlook: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in the [`Quickview`]{@link Quickview} component rather than\n     * loading through the original URL.\n     *\n     * Default value is `false`.\n     */\n    openQuickview: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies whether the component should open its link in a new window instead of opening it in the current\n     * context.\n     *\n     * If this option is `true`, clicking the `ResultLink` calls the\n     * [`openLinkInNewWindow`]{@link ResultLink.openLinkInNewWindow} method instead of the\n     * [`openLink`]{@link ResultLink.openLink} method.\n     *\n     * **Note:**\n     * > If a search page contains a [`ResultPreferences`]{@link ResultsPreferences} component whose\n     * > [`enableOpenInNewWindow`]{@link ResultsPreferences.options.enableOpenInNewWindow} option is `true`, and the end\n     * > user checks the <b>Always open results in new window</b> box, `ResultLink` components in this page will always\n     * > open their links in a new window when the end user clicks them, no matter what the value of their\n     * > `alwaysOpenInNewWindow` option is.\n     *\n     * Default value is `false`.\n     */\n    alwaysOpenInNewWindow: ComponentOptions.buildBooleanOption({ defaultValue: false }),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` `href` attribute value (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the [`field`]{@link ResultLink.options.field} option value.\n     *\n     * The template literal can reference any number of fields from the parent result. It can also reference global\n     * scope properties.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates an `href` value such as `http://uri.com?id=itemTitle`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${clickUri}?id=${raw.title}'></a>\n     * ```\n     *\n     * - The following markup generates an `href` value such as `localhost/fooBar`:\n     *\n     * ```html\n     * <a class='CoveoResultLink' data-href-template='${window.location.hostname}/{Foo.Bar}'></a>\n     * ```\n     *\n     * Default value is `undefined`.\n     */\n    hrefTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies a template literal from which to generate the `ResultLink` display title (see\n     * [Template literals](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals)).\n     *\n     * This option overrides the default `ResultLink` display title behavior.\n     *\n     * The template literal can reference any number of fields from the parent result. However, if the template literal\n     * references a key whose value is undefined in the parent result fields, the `ResultLink` title displays the\n     * name of this key instead.\n     *\n     * This option is ignored if the `ResultLink` innerHTML contains any value.\n     *\n     * **Examples:**\n     *\n     * - The following markup generates a `ResultLink` display title such as `Case number: 123456` if both the\n     * `raw.objecttype` and `raw.objectnumber` keys are defined in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${raw.objecttype} number: ${raw.objectnumber}\"></a>\n     * ```\n     *\n     * - The following markup generates `${myField}` as a `ResultLink` display title if the `myField` key is undefined\n     * in the parent result fields:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${myField}\"></a>\n     * ```\n     *\n     * - The following markup generates `Foobar` as a `ResultLink` display title, because the `ResultLink` innterHTML is\n     * not empty:\n     *\n     * ```html\n     * <a class=\"CoveoResultLink\" data-title-template=\"${will} ${be} ${ignored}\">Foobar</a>\n     * ```\n     *\n     * Default value is `undefined`.\n     *\n     * @availablesince [January 2017 Release (v1.1865.9)](https://docs.coveo.com/en/396/#january-2017-release-v118659)\n     */\n    titleTemplate: ComponentOptions.buildStringOption(),\n\n    /**\n     * Specifies an event handler function to execute when the user clicks the `ResultLink` component.\n     *\n     * The handler function takes a JavaScript [`Event`](https://developer.mozilla.org/en/docs/Web/API/Event) object and\n     * an [`IQueryResult`]{@link IQueryResult} as its parameters.\n     *\n     * Overriding the default behavior of the `onClick` event can allow you to execute specific code instead.\n     *\n     * **Note:**\n     * > You cannot set this option directly in the component markup as an HTML attribute. You must either set it in the\n     * > [`init`]{@link init} call of your search interface (see\n     * > [Passing Component Options in the init Call](https://docs.coveo.com/en/346/#passing-component-options-in-the-init-call)),\n     * > or before the `init` call, using the `options` top-level function (see\n     * > [Passing Component Options Before the init Call](https://docs.coveo.com/en/346/#passing-component-options-before-the-init-call)).\n     *\n     * **Example:**\n     * ```javascript\n     * // You can set the option in the 'init' call:\n     * Coveo.init(document.querySelector(\"#search\"), {\n     *   ResultLink : {\n     *     onClick : function(e, result) {\n     *       e.preventDefault();\n     *       // Custom code to execute with the item URI and title.\n     *       openUriInASpecialTab(result.clickUri, result.title);\n     *     }\n     *   }\n     * });\n     *\n     * // Or before the 'init' call, using the 'options' top-level function:\n     * // Coveo.options(document.querySelector('#search'), {\n     * //   ResultLink : {\n     * //     onClick : function(e, result) {\n     * //       e.preventDefault();\n     * //       // Custom code to execute with the item URI and title.\n     * //       openUriInASpecialTab(result.clickUri, result.title);\n     * //     }\n     * //   }\n     * // });\n     * ```\n     */\n    onClick: ComponentOptions.buildCustomOption<(e: Event, result: IQueryResult) => any>(() => {\n      return null;\n    })\n  };\n\n  private toExecuteOnOpen: (e?: Event) => void;\n\n  /**\n   * Creates a new `ResultLink` component.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the `ResultLink` component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   * @param result The result to associate the component with.\n   * @param os\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IResultLinkOptions,\n    public bindings?: IResultsComponentBindings,\n    public result?: IQueryResult,\n    public os?: OS_NAME\n  ) {\n    super(element, ResultLink.ID, bindings);\n\n    const initialOptions = ComponentOptions.initComponentOptions(element, ResultLink, options);\n    const resultLinkOptions = this.componentOptionsModel.get(ComponentOptionsModel.attributesEnum.resultLink);\n    this.options = extend({}, initialOptions, resultLinkOptions);\n\n    this.result = result || this.resolveResult();\n\n    if (this.options.openQuickview == null) {\n      this.options.openQuickview = result.raw['connectortype'] == 'ExchangeCrawler' && DeviceUtils.isMobileDevice();\n    }\n    this.element.setAttribute('tabindex', '0');\n\n    Assert.exists(this.componentOptionsModel);\n    Assert.exists(this.result);\n\n    if (!this.quickviewShouldBeOpened()) {\n      // Bind on multiple \"click\" or \"mouse\" events.\n      // Create a function that will be executed only once, so as not to log multiple events\n      // Once a result link has been opened, and that we log at least one analytics event,\n      // it should not matter if the end user open the same link multiple times with different methods.\n      // It's still only one \"click\" event as far as UA is concerned.\n      // Also need to handle \"longpress\" on mobile (the contextual menu), which we assume to be 1 s long.\n\n      const executeOnlyOnce = once(() => this.logOpenDocument());\n\n      $$(element).on(['contextmenu', 'click', 'mousedown', 'mouseup'], executeOnlyOnce);\n      let longPressTimer: number;\n      $$(element).on('touchstart', () => {\n        longPressTimer = window.setTimeout(executeOnlyOnce, 1000);\n      });\n      $$(element).on('touchend', () => {\n        if (longPressTimer) {\n          clearTimeout(longPressTimer);\n        }\n      });\n    }\n    this.renderUri(element, result);\n    this.bindEventToOpen();\n  }\n  public renderUri(element: HTMLElement, result?: IQueryResult) {\n    if (/^\\s*$/.test(this.element.innerHTML)) {\n      const title = this.getDisplayedTitle();\n      this.element.innerHTML = title;\n      if (!this.element.title) {\n        this.element.title = this.getDisplayedTitleAsText();\n      }\n    }\n  }\n  /**\n   * Opens the result in the same window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLink(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logOpenDocument();\n    }\n    window.location.href = this.getResultUri();\n  }\n\n  /**\n   * Opens the result in a new window, no matter how the actual component is configured for the end user.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInNewWindow(logAnalytics = true) {\n    if (logAnalytics) {\n      this.logOpenDocument();\n    }\n    window.open(this.getResultUri(), '_blank');\n  }\n\n  /**\n   * Tries to open the result in Microsoft Outlook if the result has an `outlookformacuri` or `outlookuri` field.\n   *\n   * Normally, this implies the result should be a link to an email.\n   *\n   * If the needed fields are not present, this method does nothing.\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkInOutlook(logAnalytics = true) {\n    if (this.hasOutlookField()) {\n      if (logAnalytics) {\n        this.logOpenDocument();\n      }\n      this.openLink();\n    }\n  }\n\n  /**\n   * Opens the link in the same manner the end user would.\n   *\n   * This essentially simulates a click on the result link.\n   *\n   * @param logAnalytics Specifies whether the method should log an analytics event.\n   */\n  public openLinkAsConfigured(logAnalytics = true) {\n    if (this.toExecuteOnOpen) {\n      if (logAnalytics) {\n        this.logOpenDocument();\n      }\n      this.toExecuteOnOpen();\n    }\n  }\n\n  protected bindEventToOpen(): boolean {\n    return (\n      this.bindOnClickIfNotUndefined() ||\n      this.bindOpenQuickviewIfNotUndefined() ||\n      this.setHrefIfNotAlready() ||\n      this.openLinkThatIsNotAnAnchor()\n    );\n  }\n\n  private getDisplayedTitle() {\n    if (!this.options.titleTemplate) {\n      return this.result.title\n        ? HighlightUtils.highlightString(this.result.title, this.result.titleHighlights, null, 'coveo-highlight')\n        : this.escapedClickUri;\n    } else {\n      let newTitle = StringUtils.buildStringTemplateFromResult(this.options.titleTemplate, this.result);\n      return newTitle\n        ? StreamHighlightUtils.highlightStreamText(newTitle, this.result.termsToHighlight, this.result.phrasesToHighlight)\n        : this.escapedClickUri;\n    }\n  }\n\n  private getDisplayedTitleAsText() {\n    const container = $$('div');\n    container.setHtml(this.getDisplayedTitle());\n    return container.text();\n  }\n\n  private get escapedClickUri() {\n    return escape(this.result.clickUri);\n  }\n\n  private bindOnClickIfNotUndefined() {\n    if (this.options.onClick != undefined) {\n      this.toExecuteOnOpen = (e: MouseEvent) => {\n        this.options.onClick.call(this, e, this.result);\n      };\n\n      new AccessibleButton()\n        .withElement(this.element)\n        .withLabel(this.result.title)\n        .withSelectAction((e: Event) => this.toExecuteOnOpen(e))\n        .build();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private bindOpenQuickviewIfNotUndefined() {\n    if (this.quickviewShouldBeOpened()) {\n      this.toExecuteOnOpen = () => {\n        $$(this.bindings.resultElement).trigger(ResultListEvents.openQuickview);\n      };\n\n      $$(this.element).on('click', (e: Event) => {\n        e.preventDefault();\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private openLinkThatIsNotAnAnchor() {\n    if (!this.elementIsAnAnchor()) {\n      this.toExecuteOnOpen = () => {\n        if (this.options.alwaysOpenInNewWindow) {\n          if (this.options.openInOutlook) {\n            this.openLinkInOutlook();\n          } else {\n            this.openLinkInNewWindow();\n          }\n        } else {\n          this.openLink();\n        }\n      };\n\n      $$(this.element).on('click', () => {\n        this.toExecuteOnOpen();\n      });\n\n      return true;\n    }\n    return false;\n  }\n\n  private setHrefIfNotAlready() {\n    // Do not erase any value put in href by the template, etc. Allows\n    // using custom click urls while still keeping analytics recording\n    // and other behavior brought by the component.\n    if (this.elementIsAnAnchor() && !Utils.isNonEmptyString($$(this.element).getAttribute('href'))) {\n      $$(this.element).setAttribute('href', this.getResultUri());\n      if (this.options.alwaysOpenInNewWindow && !(this.options.openInOutlook && this.hasOutlookField())) {\n        $$(this.element).setAttribute('target', '_blank');\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private logOpenDocument = debounce(\n    () => {\n      this.queryController.saveLastQuery();\n      let documentURL = $$(this.element).getAttribute('href');\n      if (documentURL == undefined || documentURL == '') {\n        documentURL = this.escapedClickUri;\n      }\n      this.usageAnalytics.logClickEvent(\n        analyticsActionCauseList.documentOpen,\n        {\n          documentURL: documentURL,\n          documentTitle: this.result.title,\n          author: Utils.getFieldValue(this.result, 'author')\n        },\n        this.result,\n        this.root\n      );\n      Defer.flush();\n    },\n    1500,\n    true\n  );\n\n  private filterProtocol(uri: string) {\n    const isAbsolute = /^(https?|ftp|file|mailto|tel):/i.test(uri);\n    const isRelative = /^\\//.test(uri);\n\n    return isAbsolute || isRelative ? uri : '';\n  }\n\n  private getResultUri(): string {\n    if (this.options.hrefTemplate) {\n      const uri = StringUtils.buildStringTemplateFromResult(this.options.hrefTemplate, this.result);\n      return this.filterProtocol(uri);\n    }\n\n    if (this.options.field == undefined && this.options.openInOutlook) {\n      this.setField();\n    }\n\n    if (this.options.field != undefined) {\n      return this.filterProtocol(Utils.getFieldValue(this.result, <string>this.options.field));\n    }\n\n    return this.filterProtocol(this.result.clickUri);\n  }\n\n  private elementIsAnAnchor() {\n    return this.element.tagName == 'A';\n  }\n\n  private setField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.hasOutlookField()) {\n      this.options.field = '@outlookformacuri';\n    } else if (os == OS_NAME.WINDOWS && this.hasOutlookField()) {\n      this.options.field = '@outlookuri';\n    }\n  }\n\n  private hasOutlookField() {\n    let os = Utils.exists(this.os) ? this.os : OSUtils.get();\n    if (os == OS_NAME.MACOSX && this.result.raw['outlookformacuri'] != undefined) {\n      return true;\n    } else if (os == OS_NAME.WINDOWS && this.result.raw['outlookuri'] != undefined) {\n      return true;\n    }\n    return false;\n  }\n\n  private isUriThatMustBeOpenedInQuickview(): boolean {\n    return this.escapedClickUri.toLowerCase().indexOf('ldap://') == 0;\n  }\n\n  private quickviewShouldBeOpened() {\n    return (this.options.openQuickview || this.isUriThatMustBeOpenedInQuickview()) && QueryUtils.hasHTMLVersion(this.result);\n  }\n}\n\nInitialization.registerAutoCreateComponent(ResultLink);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/ResultLink/ResultLink.ts"],"sourceRoot":""}