{"version":3,"sources":["PreferencesPanel.min__45edc409d97327d59af1.js","./src/ui/PreferencesPanel/PreferencesPanel.ts"],"names":["webpackJsonpCoveo__temporary","262","module","exports","__webpack_require__","__extends","this","extendStatics","Object","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","value","element","options","bindings","ModalBox","PreferencesPanel","ID","content","ComponentOptions","initComponentOptions","bind","onRootElement","SettingsEvents","settingsPopulateMenu","args","menuData","push","className","text","l","onOpen","open","onClose","close","svgIcon","SVGIcons","icons","dropdownPreferences","svgIconClassName","InitializationEvents","afterComponentsInitialization","$$","children","_this","modalbox","_","each","oneChild","append","el","title","validation","cleanupOnExit","body","searchInterface","modalContainer","save","trigger","PreferencesPanelEvents","savePreferences","queryController","executeQuery","exitPreferencesWithoutSave","doExport","exportGlobally","Component","Initialization","registerAutoCreateComponent","632"],"mappings":"AAAAA,8BAA8B,KAExBC,IACA,SAAUC,EAAQC,EAASC,GAEjC,YAEA,IAAIC,GAAaC,MAAQA,KAAKD,WAAc,WACxC,GAAIE,GAAgBC,OAAOC,iBACpBC,uBAA2BC,QAAS,SAAUC,EAAGC,GAAKD,EAAEF,UAAYG,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIC,KAAKD,GAAOA,EAAEE,eAAeD,KAAIF,EAAEE,GAAKD,EAAEC,IACzE,OAAO,UAAUF,EAAGC,GAEhB,QAASG,KAAOV,KAAKW,YAAcL,EADnCL,EAAcK,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaL,OAAOW,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,GAAIF,OAGvFR,QAAOY,eAAejB,EAAS,cAAgBkB,OAAO,GCjBtD,YAEA,OACA,QAEA,QACA,OACA,OACA,OACA,OACA,QACA,MAEA,OACA,aACA,QAaA,cAoBE,WACSC,EACAC,EACPC,EACQC,OAAA,KAAAA,MAAW,EAAAA,SAJrB,OAME,YAAMH,EAASI,EAAiBC,GAAIH,IAAS,IDgBzC,OCrBG,GAAAF,UACA,EAAAC,UAEC,EAAAE,WAbF,EAAAG,WAgBN,EAAKL,QAAU,EAAAM,iBAAiBC,qBAAqBR,EAASI,EAAkBH,GAChF,EAAKQ,KAAKC,cAAc,EAAAC,eAAeC,qBAAsB,SAACC,GAC5DA,EAAKC,SAASC,MACZC,UAAW,0BACXC,KAAM,EAAAC,EAAE,eACRC,OAAQ,WAAM,SAAKC,QACnBC,QAAS,WAAM,SAAKC,SACpBC,QAAS,EAAAC,SAASC,MAAMC,oBACxBC,iBAAkB,kCAGtB,EAAKlB,KAAKC,cAAc,EAAAkB,qBAAqBC,8BAA+B,WAC1E,EAAKvB,QAAU,EAAAwB,GAAG,EAAK9B,SAAS+B,aDGvBC,ECgDf,MA1FsC,QA8C7B,YAAAZ,KAAP,qBACE,IAAqB,MAAjBpC,KAAKiD,SAAkB,CACzB,GAAI,GAAO,EAAAH,GAAG,MACdI,GAAEC,KAAKnD,KAAKsB,QAAS,SAAA8B,GACnB,EAAKC,OAAOD,KAGdpD,KAAKiD,SAAWjD,KAAKmB,SAASiB,KAAK,EAAKkB,IACtCC,MAAO,EAAArB,EAAE,eACTsB,WAAY,WAEV,MADA,GAAKC,iBACE,GAETC,KAAM1D,KAAK2D,gBAAgB1C,QAAQ2C,mBAUlC,YAAAtB,MAAP,WACMtC,KAAKiD,WACPjD,KAAKyD,gBACLzD,KAAKiD,SAASX,QACdtC,KAAKiD,SAAW,OASb,YAAAY,KAAP,WACE,EAAAf,GAAG9C,KAAKgB,SAAS8C,QAAQ,EAAAC,uBAAuBC,iBAChDhE,KAAKiE,gBAAgBC,gBAGf,YAAAT,cAAR,WACE,EAAAX,GAAG9C,KAAKgB,SAAS8C,QAAQ,EAAAC,uBAAuBI,6BAvF3C,EAAA9C,GAAK,mBAEL,EAAA+C,SAAW,WAChB,EAAAC,gBACEjD,iBAAkBA,KAIf,EAAAH,WAiFT,GA1FsC,EAAAqD,UAAzB,GAAAlD,mBA4Fb,EAAAmD,eAAeC,4BAA4BpD,IDWrCqD,IACA,SAAU7E,EAAQC","file":"PreferencesPanel.min__45edc409d97327d59af1.js","sourcesContent":["webpackJsonpCoveo__temporary([67],{\n\n/***/ 262:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Component_1 = __webpack_require__(7);\nvar ComponentOptions_1 = __webpack_require__(8);\nvar SettingsEvents_1 = __webpack_require__(53);\nvar PreferencesPanelEvents_1 = __webpack_require__(96);\nvar Initialization_1 = __webpack_require__(2);\nvar Strings_1 = __webpack_require__(6);\nvar Dom_1 = __webpack_require__(1);\nvar GlobalExports_1 = __webpack_require__(3);\nvar ExternalModulesShim_1 = __webpack_require__(26);\nvar _ = __webpack_require__(0);\n__webpack_require__(632);\nvar InitializationEvents_1 = __webpack_require__(17);\nvar SVGIcons_1 = __webpack_require__(12);\n/**\n * The PreferencesPanel component renders a **Preferences** item inside the {@link Settings} component which the end\n * user can click to access a panel from which it is possible to specify certain customization options for the search\n * interface. These customization options are then saved in the browser local storage.\n *\n * This component should be used inside the {@link Settings} component.\n *\n * See also the {@link ResultsFiltersPreferences} and {@link ResultsPreferences} components.\n */\nvar PreferencesPanel = /** @class */ (function (_super) {\n    __extends(PreferencesPanel, _super);\n    /**\n     * Creates a new PreferencesPanel.\n     * @param element The HTMLElement on which to instantiate the component.\n     * @param options The options for the PreferencesPanel component.\n     * @param bindings The bindings that the component requires to function normally. If not set, these will be\n     * automatically resolved (with a slower execution time).\n     */\n    function PreferencesPanel(element, options, bindings, ModalBox) {\n        if (ModalBox === void 0) { ModalBox = ExternalModulesShim_1.ModalBox; }\n        var _this = _super.call(this, element, PreferencesPanel.ID, bindings) || this;\n        _this.element = element;\n        _this.options = options;\n        _this.ModalBox = ModalBox;\n        _this.content = [];\n        _this.options = ComponentOptions_1.ComponentOptions.initComponentOptions(element, PreferencesPanel, options);\n        _this.bind.onRootElement(SettingsEvents_1.SettingsEvents.settingsPopulateMenu, function (args) {\n            args.menuData.push({\n                className: 'coveo-preferences-panel',\n                text: Strings_1.l('Preferences'),\n                onOpen: function () { return _this.open(); },\n                onClose: function () { return _this.close(); },\n                svgIcon: SVGIcons_1.SVGIcons.icons.dropdownPreferences,\n                svgIconClassName: 'coveo-preferences-panel-svg'\n            });\n        });\n        _this.bind.onRootElement(InitializationEvents_1.InitializationEvents.afterComponentsInitialization, function () {\n            _this.content = Dom_1.$$(_this.element).children();\n        });\n        return _this;\n    }\n    /**\n     * Opens the PreferencesPanel.\n     */\n    PreferencesPanel.prototype.open = function () {\n        var _this = this;\n        if (this.modalbox == null) {\n            var root_1 = Dom_1.$$('div');\n            _.each(this.content, function (oneChild) {\n                root_1.append(oneChild);\n            });\n            this.modalbox = this.ModalBox.open(root_1.el, {\n                title: Strings_1.l('Preferences'),\n                validation: function () {\n                    _this.cleanupOnExit();\n                    return true;\n                },\n                body: this.searchInterface.options.modalContainer\n            });\n        }\n    };\n    /**\n     * Closes the PreferencesPanel without saving changes.\n     *\n     * Also triggers the `exitPreferencesWithoutSave` event.\n     */\n    PreferencesPanel.prototype.close = function () {\n        if (this.modalbox) {\n            this.cleanupOnExit();\n            this.modalbox.close();\n            this.modalbox = null;\n        }\n    };\n    /**\n     * Saves the changes and executes a new query.\n     *\n     * Also triggers the `savePreferences` event.\n     */\n    PreferencesPanel.prototype.save = function () {\n        Dom_1.$$(this.element).trigger(PreferencesPanelEvents_1.PreferencesPanelEvents.savePreferences);\n        this.queryController.executeQuery();\n    };\n    PreferencesPanel.prototype.cleanupOnExit = function () {\n        Dom_1.$$(this.element).trigger(PreferencesPanelEvents_1.PreferencesPanelEvents.exitPreferencesWithoutSave);\n    };\n    PreferencesPanel.ID = 'PreferencesPanel';\n    PreferencesPanel.doExport = function () {\n        GlobalExports_1.exportGlobally({\n            PreferencesPanel: PreferencesPanel\n        });\n    };\n    PreferencesPanel.options = {};\n    return PreferencesPanel;\n}(Component_1.Component));\nexports.PreferencesPanel = PreferencesPanel;\nInitialization_1.Initialization.registerAutoCreateComponent(PreferencesPanel);\n\n\n/***/ }),\n\n/***/ 632:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// PreferencesPanel.min__45edc409d97327d59af1.js","import { Component } from '../Base/Component';\nimport { IComponentBindings } from '../Base/ComponentBindings';\nimport { ComponentOptions } from '../Base/ComponentOptions';\nimport { SettingsEvents } from '../../events/SettingsEvents';\nimport { ISettingsPopulateMenuArgs } from '../Settings/Settings';\nimport { PreferencesPanelEvents } from '../../events/PreferencesPanelEvents';\nimport { Initialization } from '../Base/Initialization';\nimport { l } from '../../strings/Strings';\nimport { $$ } from '../../utils/Dom';\nimport { exportGlobally } from '../../GlobalExports';\nimport { ModalBox as ModalBoxModule } from '../../ExternalModulesShim';\nimport * as _ from 'underscore';\n\nimport 'styling/_PreferencesPanel';\nimport { InitializationEvents } from '../../events/InitializationEvents';\nimport { SVGIcons } from '../../utils/SVGIcons';\n\nexport interface IPreferencesPanelOptions {}\n\n/**\n * The PreferencesPanel component renders a **Preferences** item inside the {@link Settings} component which the end\n * user can click to access a panel from which it is possible to specify certain customization options for the search\n * interface. These customization options are then saved in the browser local storage.\n *\n * This component should be used inside the {@link Settings} component.\n *\n * See also the {@link ResultsFiltersPreferences} and {@link ResultsPreferences} components.\n */\nexport class PreferencesPanel extends Component {\n  static ID = 'PreferencesPanel';\n\n  static doExport = () => {\n    exportGlobally({\n      PreferencesPanel: PreferencesPanel\n    });\n  };\n\n  static options: IPreferencesPanelOptions = {};\n  private modalbox: Coveo.ModalBox.ModalBox;\n  private content: HTMLElement[] = [];\n\n  /**\n   * Creates a new PreferencesPanel.\n   * @param element The HTMLElement on which to instantiate the component.\n   * @param options The options for the PreferencesPanel component.\n   * @param bindings The bindings that the component requires to function normally. If not set, these will be\n   * automatically resolved (with a slower execution time).\n   */\n  constructor(\n    public element: HTMLElement,\n    public options: IPreferencesPanelOptions,\n    bindings?: IComponentBindings,\n    private ModalBox = ModalBoxModule\n  ) {\n    super(element, PreferencesPanel.ID, bindings);\n    this.options = ComponentOptions.initComponentOptions(element, PreferencesPanel, options);\n    this.bind.onRootElement(SettingsEvents.settingsPopulateMenu, (args: ISettingsPopulateMenuArgs) => {\n      args.menuData.push({\n        className: 'coveo-preferences-panel',\n        text: l('Preferences'),\n        onOpen: () => this.open(),\n        onClose: () => this.close(),\n        svgIcon: SVGIcons.icons.dropdownPreferences,\n        svgIconClassName: 'coveo-preferences-panel-svg'\n      });\n    });\n    this.bind.onRootElement(InitializationEvents.afterComponentsInitialization, () => {\n      this.content = $$(this.element).children();\n    });\n  }\n\n  /**\n   * Opens the PreferencesPanel.\n   */\n  public open(): void {\n    if (this.modalbox == null) {\n      let root = $$('div');\n      _.each(this.content, oneChild => {\n        root.append(oneChild);\n      });\n\n      this.modalbox = this.ModalBox.open(root.el, {\n        title: l('Preferences'),\n        validation: () => {\n          this.cleanupOnExit();\n          return true;\n        },\n        body: this.searchInterface.options.modalContainer\n      });\n    }\n  }\n\n  /**\n   * Closes the PreferencesPanel without saving changes.\n   *\n   * Also triggers the `exitPreferencesWithoutSave` event.\n   */\n  public close(): void {\n    if (this.modalbox) {\n      this.cleanupOnExit();\n      this.modalbox.close();\n      this.modalbox = null;\n    }\n  }\n\n  /**\n   * Saves the changes and executes a new query.\n   *\n   * Also triggers the `savePreferences` event.\n   */\n  public save(): void {\n    $$(this.element).trigger(PreferencesPanelEvents.savePreferences);\n    this.queryController.executeQuery();\n  }\n\n  private cleanupOnExit() {\n    $$(this.element).trigger(PreferencesPanelEvents.exitPreferencesWithoutSave);\n  }\n}\n\nInitialization.registerAutoCreateComponent(PreferencesPanel);\n\n\n\n// WEBPACK FOOTER //\n// ./src/ui/PreferencesPanel/PreferencesPanel.ts"],"sourceRoot":""}